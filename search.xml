<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>百度网盘加速-实测有效</title>
    <url>/2024/12/24/2024122401/</url>
    <content><![CDATA[<p>《百度网盘加速-实测有效》看到这个标题是不是很惊讶，百度网盘用来N年每次从网盘下载点东西都被限速限的头疼，明明是1000M带宽却被限速到几十kb，恶心到家了。然后看到几十块一个月的会员恶心到家了吧，今天教大家一个让百度网盘下载加速的方法，很有效的。</p>
<span id="more"></span>
<!-- ![在这里插入图片描述](f576e8b643314da59e867cddb959091e.png) -->
<!-- <img src="f576e8b643314da59e867cddb959091e.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/f576e8b643314da59e867cddb959091e.png">'); </script><br>
<!-- ![在这里插入图片描述](8101efff16c949979d1e536c67652529.png) -->
<!-- <img src="8101efff16c949979d1e536c67652529.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/8101efff16c949979d1e536c67652529.png">'); </script><br>
<h3 id="重点来了"><a href="#重点来了" class="headerlink" title="重点来了"></a>重点来了</h3><ol>
<li>更新到最新版本的百度网盘，我的版本是7.44.6版本<!-- ![在这里插入图片描述](d9183ca9dac54899a105f372a4841df8.png) -->
<!-- <img src="d9183ca9dac54899a105f372a4841df8.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/d9183ca9dac54899a105f372a4841df8.png">'); </script><br></li>
<li>设置利用闲置带宽来加速<br><!-- ![在这里插入图片描述](41a1f867180b494c90ffdd161a466b25.png) -->
<!-- <img src="41a1f867180b494c90ffdd161a466b25.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/41a1f867180b494c90ffdd161a466b25.png">'); </script><br>
选择设置，进入到设置<!-- ![在这里插入图片描述](9123490a5bfa466bbcf7427fca7a3c64.png) -->
<!-- <img src="9123490a5bfa466bbcf7427fca7a3c64.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/9123490a5bfa466bbcf7427fca7a3c64.png">'); </script><br>
选择传输<!-- ![在这里插入图片描述](802534779a8d45c08eb59112cd78603f.png) -->
<!-- <img src="802534779a8d45c08eb59112cd78603f.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/802534779a8d45c08eb59112cd78603f.png">'); </script><br></li>
</ol>
<p>选择优化速率，我这里已经开启了，没有开启他会显示”去开启该功能“</p>
<!-- ![在这里插入图片描述](ad5bef5a9a334a00bc4263317b417e71.png). -->
<!-- <img src="ad5bef5a9a334a00bc4263317b417e71.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/ad5bef5a9a334a00bc4263317b417e71.png">'); </script><br>

<!-- ![在这里插入图片描述](2e43824f768d476997ed5bc534b2ca11.png) -->
<!-- <img src="2e43824f768d476997ed5bc534b2ca11.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/2e43824f768d476997ed5bc534b2ca11.png">'); </script><br>
<p>同意，开启优化速率，最后别忘记点应用和确定哦</p>
<!-- ![在这里插入图片描述](71c42238dc7e4f509b5806342fabedb3.png) -->
<!-- <img src="71c42238dc7e4f509b5806342fabedb3.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/71c42238dc7e4f509b5806342fabedb3.png">'); </script><br>
<p>这样就设置好了，随便找个文件点击下载，你会发现速率比之前快多了，不过还是没办法达到十几M这样的速率的</p>
<!-- ![在这里插入图片描述](07fe5b22ee1e4ddbb9a09e42293fa17a.png) -->
<!-- <img src="07fe5b22ee1e4ddbb9a09e42293fa17a.png"> -->
<script> document.write('<img src="'+ imgurl +'1735385633/07fe5b22ee1e4ddbb9a09e42293fa17a.png">'); </script><br>
<p>这是我随便找的一个文件下载的，速率可以达到2M，这样蛮可以的了，比起kb可是好很多了 </p>
]]></content>
      <categories>
        <category>小记</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>百度网盘</tag>
        <tag>网盘加速</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible开局配置-openEuler</title>
    <url>/2024/12/24/2024122402/</url>
    <content><![CDATA[<p>ansible干啥用的就不多介绍了，这篇文章主要在说ansible的安装、开局配置、免密登录。</p>
<span id="more"></span>

<h2 id="ansible安装"><a href="#ansible安装" class="headerlink" title="ansible安装"></a>ansible安装</h2><ol>
<li>查看系统版本</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/openEuler<span class="literal">-latest</span></span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>openeulerversion&#x3D;openEuler-24.03-LTS</p>
<p>compiletime&#x3D;2024-05-27-21-31-28</p>
<p>gccversion&#x3D;12.3.1-30.oe2403</p>
<p>kernelversion&#x3D;6.6.0-28.0.0.34.oe2403</p>
<p>openjdkversion&#x3D;1.8.0.412.b08-5.oe2403</p>
</blockquote>
<ol start="2">
<li>清除软件库缓存</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf clean all</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>建议软件库缓存</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf makecache </span><br></pre></td></tr></table></figure>

<ol start="4">
<li>安装epel-release软件仓</li>
</ol>
<ul>
<li>下载对应版本epel-release的软件仓库</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不同系统版本需要安装不同的epel-release</span></span><br><span class="line"><span class="built_in">wget</span> https://mirrors.aliyun.com/repo/epel<span class="literal">-testing</span>.repo</span><br></pre></td></tr></table></figure>

<ul>
<li>重新建立软件库索引</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> epel<span class="literal">-testing</span>.repo /etc/yum.repo.d/</span><br><span class="line">dnf clean all </span><br><span class="line">dnf makecache </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol>
<li>安装ansible</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf <span class="literal">-y</span> install ansible</span><br></pre></td></tr></table></figure>

<p>等待安装完成即可</p>
<h2 id="开局配置"><a href="#开局配置" class="headerlink" title="开局配置"></a>开局配置</h2><ol>
<li>常用文件介绍</li>
</ol>
<blockquote>
<p>&#x2F;etc&#x2F;ansible&#x2F;hosts		## 用于存放需要批量管理的主机IP或主机名称</p>
<p>&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg		## 该文件为ansible的主要配置文件</p>
</blockquote>
<ol start="2">
<li>添加主机到ansible</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">192.168</span>.<span class="number">0.10</span>    ansible_ssh_pass=主机密码        ansible_ssh_user=主机账号</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.11</span>    ansible_ssh_pass=主机密码        ansible_ssh_user=主机账号</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.12</span>    ansible_ssh_pass=主机密码       ansible_ssh_user=主机账号</span><br></pre></td></tr></table></figure>


<blockquote>
<p>ansible_ssh_pass：远程主机登录密码</p>
<p>ansible_ssh_user：远程主机登录账号</p>
</blockquote>
<ol start="3">
<li>远程执行ping命令，会发现执行报错</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ansible all <span class="literal">-m</span> ping</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>192.168.0.10 | FAILED! &#x3D;&gt; {</p>
<p>   “msg”: “Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support<br>this.  Please add this host’s fingerprint to your known_hosts file to<br>manage this host.”</p>
<p>}</p>
<p>192.168.0.11 | FAILED! &#x3D;&gt; {</p>
<p>   “msg”: “Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support<br>this.  Please add this host’s fingerprint to your known_hosts file to<br>manage this host.”</p>
<p>}</p>
<p>192.168.0.12 | FAILED! &#x3D;&gt; {</p>
<p>   “msg”: “Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support<br>this.  Please add this host’s fingerprint to your known_hosts file to<br>manage this host.”</p>
<p>}</p>
</blockquote>
<p>出现这个问题主要是因为ansible默认是没有开启账号密码登录的，默认采用证书登录，只需要在配置文件中把证书登录关闭就可以执行成功了。</p>
<p>进入&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg文件，将host_key_checking &#x3D; False取消注释或者增加该内容即可</p>
<!-- > ![](c970205e90a903c7f548936d52a3a679.png) -->
<!-- <img src="c970205e90a903c7f548936d52a3a679.png"> -->
<script> document.write('<img src="'+ imgurl +'1735386141/c970205e90a903c7f548936d52a3a679.png">'); </script>


<p>再次重新执行就不会有问题了，成功后输出内容如下</p>
<blockquote>
<p>192.168.0.11 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
<p>192.168.0.10 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
<p>192.168.0.12 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
</blockquote>
<h2 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h2><ol>
<li>生成密钥</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span></span><br></pre></td></tr></table></figure>

<p>一路回车即可，输出内容如下：</p>
<blockquote>
<p>Generating public&#x2F;private rsa key pair.</p>
<p>Enter file in which to save the key (&#x2F;root&#x2F;.ssh&#x2F;id_rsa): </p>
<p>Enter passphrase (empty for no passphrase): </p>
<p>Enter same passphrase again: </p>
<p>Your identification has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa</p>
<p>Your public key has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub</p>
<p>The key fingerprint is:</p>
<p>SHA256:+RGyyNnrIHOLllk+e2hpNyTmxjBZkMY5vvDmTGuEh5g root@ecs-5352</p>
<p>The key’s randomart image is:</p>
<p>+—[RSA 3072]—-+</p>
<p>|   . o           |</p>
<p>|    B            |</p>
<p>|   o o  . .      |</p>
<p>|  . …+ + .     |</p>
<p>| o &#x3D; ++ S .      |</p>
<p>|E o @ + .o .     |</p>
<p>|   Bo%o&#x3D;. .      |</p>
<p>|    O&#x3D;@++        |</p>
<p>|   o.+o&#x3D;..       |</p>
<p>+—-[SHA256]—–+</p>
</blockquote>
<ol start="2">
<li>编写playbook脚本文件</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">- hosts: <span class="comment"># 主机组</span></span><br><span class="line">  remote_user: <span class="comment"># 用户名</span></span><br><span class="line">  tasks:</span><br><span class="line">    - name: push ansible key</span><br><span class="line">      authorized_key: user=root key=<span class="string">&quot;&#123;&#123; lookup(&#x27;file&#x27; ,&#x27;密钥存放位置&#x27;)&#125;&#125;&quot;</span> state=present</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">    - name: push ansible key</span><br><span class="line">      authorized_key: user=root key=<span class="string">&quot;&#123;&#123; lookup(&#x27;file&#x27; ,&#x27;/root/.ssh/id_rsa.pub&#x27;)&#125;&#125;&quot;</span> state=present</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>执行playbook脚本文件</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ansible<span class="literal">-playbook</span> push_key.yml</span><br></pre></td></tr></table></figure>

<p>输出结果如下表示执行成功：</p>
<blockquote>
<p>[root@ecs-5352 yml]# ansible-playbook push_key.yml </p>
<p>PLAY [all]</p>
<hr>
<p>TASK [Gathering Facts]</p>
<hr>
<p>ok: [192.168.0.10]</p>
<p>ok: [192.168.0.12]</p>
<p>ok: [192.168.0.11]</p>
<p>TASK [push ansible key]</p>
<hr>
<p>changed: [192.168.0.10]</p>
<p>changed: [192.168.0.12]</p>
<p>changed: [192.168.0.11]</p>
<p>PLAY RECAP</p>
<hr>
<p>192.168.0.10               : ok&#x3D;2    changed&#x3D;1    unreachable&#x3D;0    failed&#x3D;0    skipped&#x3D;0    rescued&#x3D;0    ignored&#x3D;0   </p>
<p>192.168.0.11               : ok&#x3D;2    changed&#x3D;1    unreachable&#x3D;0    failed&#x3D;0    skipped&#x3D;0    rescued&#x3D;0    ignored&#x3D;0   </p>
<p>192.168.0.12               : ok&#x3D;2    changed&#x3D;1    unreachable&#x3D;0    failed&#x3D;0    skipped&#x3D;0    rescued&#x3D;0    ignored&#x3D;0</p>
</blockquote>
<ol start="4">
<li>测试是否可以免密<ol>
<li>将ansible.cfg配置文件中的host_key_checking &#x3D; False注释掉</li>
</ol>
</li>
</ol>
<!-- > ![](00bb6f83c524439f1afea2a4bb151b56.png) -->
<!-- <img src="00bb6f83c524439f1afea2a4bb151b56.png"> -->
<script> document.write('<img src="'+ imgurl +'1735386141/00bb6f83c524439f1afea2a4bb151b56.png">'); </script>


<pre><code>2. 删除hosts文件主机后面的用户名和密码
</code></pre>
<!-- > ![](772a7c5da472031ce7a8691613676622.png) -->
<!-- <img src="772a7c5da472031ce7a8691613676622.png"> -->
<script> document.write('<img src="'+ imgurl +'1735386141/772a7c5da472031ce7a8691613676622.png">'); </script>


<pre><code>3. 测试执行ping命令
</code></pre>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ansible all <span class="literal">-m</span> ping</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<blockquote>
<p>192.168.0.10 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
<p>192.168.0.12 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
<p>192.168.0.11 | SUCCESS &#x3D;&gt; {</p>
<pre><code>&quot;ansible_facts&quot;: &#123;

    &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;

&#125;,

&quot;changed&quot;: false,

&quot;ping&quot;: &quot;pong&quot;
</code></pre>
<p>}</p>
</blockquote>
<ol start="5">
<li>再次测试</li>
</ol>
<p>直接在ansible主机上，使用ssh命令测试是否可以免密登录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh root@<span class="number">192.168</span>.<span class="number">0.11</span></span><br></pre></td></tr></table></figure>

<p>无需输入密码即可登录成功</p>
<!-- > ![](032b7a15029599a5f1ae3a914564040e.png) -->
<!-- <img src="032b7a15029599a5f1ae3a914564040e.png"> -->
<script> document.write('<img src="'+ imgurl +'1735386141/032b7a15029599a5f1ae3a914564040e.png">'); </script>




]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>ansible</tag>
        <tag>openEuler</tag>
        <tag>云计算</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>openEuler大版本升级方法</title>
    <url>/2024/12/24/2024122403/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>检查当前系统版本：</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/openEuler<span class="literal">-latest</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>输出结果如下</p>
<blockquote>
<p>openeulerversion&#x3D;openEuler-20.03-LTS-SP3</p>
<p>compiletime&#x3D;2022-01-01-11-20-51</p>
<p>gccversion&#x3D;7.3.0-20211123.43.oe1</p>
<p>kernelversion&#x3D;4.19.90-2112.8.0.0131.oe1</p>
<p>openjdkversion&#x3D;1.8.0.312.b07-10.oe1</p>
</blockquote>
<p>我这里openEuler的版本是20.03-LTS-SP3的版本，其他版本操作方法都是比较类似的</p>
<ol start="2">
<li>清除软件库缓存并重新缓存软件库</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清除缓存</span></span><br><span class="line">dnf clean all</span><br><span class="line"><span class="comment"># 重建软件库</span></span><br><span class="line">dnf makecache</span><br></pre></td></tr></table></figure>

<p>清楚缓存输出内容如下：</p>
<blockquote>
<p>36 files removed</p>
</blockquote>
<p>重建软件库输出内容如下：</p>
<blockquote>
<p>OS                                              5.6 MB&#x2F;s | 3.5 MB<br>00:00    </p>
<p>everything                                       16 MB&#x2F;s |  15 MB<br>00:00    </p>
<p>EPOL                                            6.5 MB&#x2F;s | 4.0 MB<br>00:00    </p>
<p>debuginfo                                       6.0 MB&#x2F;s | 3.7 MB<br>00:00    </p>
<p>source                                          2.4 MB&#x2F;s | 1.3 MB<br>00:00    </p>
<p>update                                           15 MB&#x2F;s |  76 MB<br>00:04    </p>
<p>Metadata cache created.</p>
</blockquote>
<ol start="3">
<li>备份软件源配置文件</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repo.d/openEuler.repo /etc/yum.repo.d/openEuler.repo.bak</span><br></pre></td></tr></table></figure>

<p>此命令执行完成后无任何输出</p>
<h2 id="安装升级"><a href="#安装升级" class="headerlink" title="安装升级"></a>安装升级</h2><ol>
<li>安装openEuler-release软件包</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/&#123;此处为版本信息&#125;/OS/x86_64/Packages/openEuler<span class="literal">-release-</span>&#123;此处为版本信息&#125;.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>示例：以当前最新版本24.03LTS版本为例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/openEuler<span class="literal">-24</span>.<span class="number">03</span><span class="literal">-LTS</span>/OS/x86_64/Packages/openEuler<span class="literal">-release-24</span>.<span class="number">03</span>LTS<span class="literal">-55</span>.oe2403.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>Retrieving<br><a href="https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64/Packages/openEuler-release-24.03LTS-55.oe2403.x86_64.rpm">https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64/Packages/openEuler-release-24.03LTS-55.oe2403.x86_64.rpm</a><br>Verifying…<br>########################################</p>
<p>Preparing…<br>########################################</p>
<p>Updating &#x2F; installing…</p>
<p>openEuler-release-24.03LTS-55.oe2403<br>########################################</p>
<p> Attention: openEuler-performance package files are backed up to<br>&#x2F;etc&#x2F;profile.d&#x2F;performance.sh.bak </p>
<p>Cleaning up &#x2F; removing…</p>
<p>openEuler-performance-20.03LTS_SP3-52.########################################</p>
<p>openEuler-release-20.03LTS_SP3-52.oe1<br>########################################warning: &#x2F;var&#x2F;tmp&#x2F;rpm-tmp.3pbqGD: Header V4 RSA&#x2F;SHA256 Signature, key ID b67560<br>0b: NOKEY</p>
</blockquote>
<ol>
<li>安装openEuler-repos软件仓库</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/&#123;此处为版本信息&#125;/OS/x86_64/Packages/openEuler<span class="literal">-repos-</span>&#123;此处为版本信息&#125;.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>示例：以当前最新版本24.03LTS版本为例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/openEuler<span class="literal">-24</span>.<span class="number">03</span><span class="literal">-LTS</span>/OS/x86_64/Packages/openEuler<span class="literal">-repos-1</span>.<span class="number">0</span><span class="literal">-3</span>.<span class="number">7</span>.oe2403.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>Retrieving<br><a href="https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64/Packages/openEuler-repos-1.0-3.7.oe2403.x86_64.rpm">https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64&#x2F;Packages&#x2F;openEuler-repos-1.0-3.7.oe2403.x86_64.rpm</a></p>
<p>Verifying…<br>########################################</p>
<p>Preparing…<br>########################################</p>
<p>Updating &#x2F; installing…</p>
<p>openEuler-repos-1.0-3.7.oe2403<br>########################################</p>
<p>Cleaning up &#x2F; removing…</p>
<p>openEuler-repos-1.0-3.1.oe1<br>########################################warning: &#x2F;var&#x2F;tmp&#x2F;rpm-tmp.7VGSLJ: Header V4 RSA&#x2F;SHA256 Signature, key ID<br>fb37bc6f: NOKEY</p>
</blockquote>
<ol start="3">
<li>安装openEuler-gpg-keys密钥</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/&#123;此处为系统版本信息&#125;/OS/x86_64/Packages/openEuler<span class="literal">-gpg-keys-</span>&#123;此处为软件版本信息&#125;.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>示例：以当前最新版本24.03LTS版本为例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-Uvh</span> <span class="literal">--nodeps</span> <span class="literal">--force</span> https://repo.openeuler.org/openEuler<span class="literal">-24</span>.<span class="number">03</span><span class="literal">-LTS</span>/OS/x86_64/Packages/openEuler<span class="literal">-gpg-keys-1</span>.<span class="number">0</span><span class="literal">-3</span>.<span class="number">7</span>.oe2403.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>Retrieving<br><a href="https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64/Packages/openEuler-gpg-keys-1.0-3.7.oe2403.x86_64.rpm">https://repo.openeuler.org/openEuler-24.03-LTS/OS/x86_64&#x2F;Packages&#x2F;openEuler-gpg-keys-1.0-3.7.oe2403.x86_64.rpm</a></p>
<p>Verifying…<br>########################################</p>
<p>Preparing…<br>########################################</p>
<p>Updating &#x2F; installing…</p>
<p>openEuler-gpg-keys-1.0-3.7.oe2403<br>########################################</p>
<p>Cleaning up &#x2F; removing…</p>
<p>openEuler-gpg-keys-1.0-3.1.oe1<br>########################################warning: &#x2F;var&#x2F;tmp&#x2F;rpm-tmp.9e75Wy: Header V4 RSA&#x2F;SHA256 Signature, key ID<br>fb37bc6f: NOKEY</p>
</blockquote>
<ol start="4">
<li>清除软件库缓存</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf clean all</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>系统升级</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf <span class="literal">-y</span> <span class="literal">--releasever</span>=<span class="string">&#x27;&#123;此处为软件版本&#125;&#x27;</span> <span class="literal">--allowerasing</span> <span class="literal">--setopt</span>=deltarpm=false distro<span class="literal">-sync</span> <span class="literal">--nogpgcheck</span></span><br></pre></td></tr></table></figure>

<p>示例：以当前最新版本24.03LTS版本为例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf <span class="literal">-y</span> <span class="literal">--releasever</span>=<span class="string">&#x27;24.03LTS&#x27;</span> <span class="literal">--allowerasing</span> <span class="literal">--setopt</span>=deltarpm=false distro<span class="literal">-sync</span> <span class="literal">--nogpgcheck</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li><font style="color:rgb(36, 41, 46);">重建 RPM 数据库</font></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">--rebuilddb</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>安装其他需要的组件</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf <span class="built_in">group</span> install <span class="string">&quot;Minimal Install&quot;</span> <span class="literal">-y</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>重启</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/openEuler<span class="literal">-latest</span></span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<blockquote>
<p>openeulerversion&#x3D;openEuler-24.03-LTS</p>
<p>compiletime&#x3D;2024-05-27-21-31-28</p>
<p>gccversion&#x3D;12.3.1-30.oe2403</p>
<p>kernelversion&#x3D;6.6.0-28.0.0.34.oe2403</p>
<p>openjdkversion&#x3D;1.8.0.412.b08-5.oe2403</p>
</blockquote>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>卸载删除旧内核版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dnf remove kernel-&#123; 内核版本&#125; <span class="literal">-y</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>openEuler</tag>
        <tag>linux</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>schedule-执行周期性任务</title>
    <url>/2024/12/24/2024122404/</url>
    <content><![CDATA[<h2 id="模块介绍"><a href="#模块介绍" class="headerlink" title="模块介绍"></a>模块介绍</h2><p>该模块主要用于python的任务调度，使用简便友好的python语法定期运行python函数或者一些其他的调用对象，这个模块就类似于windows的任务计划和linux的crontab，都是用于在服务器上周期性执行某段python脚本。</p>
<span id="more"></span>

<p>相较于linux的crontab对比：</p>
<ol>
<li>schedule模块支持以秒为单位的周期性任务，而crontab只能完成以分钟为单位的。</li>
<li>schedule模块当有很多个任务需要执行时管理起来很方便，直接内嵌到代码当中，crontab还需要每一个脚本去设置一次，增加了复杂度。</li>
<li>轻量级，无需任何依赖</li>
</ol>
<h2 id="模块安装"><a href="#模块安装" class="headerlink" title="模块安装"></a>模块安装</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install schedule</span><br><span class="line"><span class="comment"># pip3 安装</span></span><br><span class="line">pip3 install schedule</span><br></pre></td></tr></table></figure>

<p>国内安装获取软件包可能会很慢，可以采用国内各大加速进行安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清华大学源</span></span><br><span class="line">pip install schedule -i https://pypi.tuna.tsinghua.edu.cn/simple	</span><br><span class="line"><span class="comment"># 阿里云源</span></span><br><span class="line">pip install schedule -i https://mirrors.aliyun.com/pypi/simple</span><br><span class="line"><span class="comment"># 豆瓣源</span></span><br><span class="line">pip instal lschedule -i http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure>

<h2 id="模块案例"><a href="#模块案例" class="headerlink" title="模块案例"></a>模块案例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 载入模块</span></span><br><span class="line"><span class="keyword">import</span> schedule </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建需要的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输出结果&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行方法</span></span><br><span class="line">schedule.every().minutes.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置循环执行</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending()	<span class="comment"># 运行定时任务</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)	<span class="comment"># 上一次定时任务执行完后间隔1S再执行第二次</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码解释：以上代码是定义了每分钟执行一次job方法，执行完成后中间间隔一秒执行下一次job方法</p>
</blockquote>
<h2 id="模块参数用法"><a href="#模块参数用法" class="headerlink" title="模块参数用法"></a>模块参数用法</h2><p>schedule模块提供了多种定时方法，比如按秒、按分钟、按小时、按周、按月、按年等等，都可以进行自定义，针对不同的定时任务选用特定的定时方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每秒执行一次</span></span><br><span class="line">schedule.every().seconds.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每30秒执行一次</span></span><br><span class="line">schedule.every(<span class="number">30</span>).seconds.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每分钟执行一次</span></span><br><span class="line">schedule.every().minutes.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每30分钟执行一次</span></span><br><span class="line">schedule.every(<span class="number">30</span>).minutes.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每小时执行一次</span></span><br><span class="line">schedule.every().hour.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每2小时执行一次</span></span><br><span class="line">schedule.every(<span class="number">2</span>).hour.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天执行一次 </span></span><br><span class="line">schedule.every().day.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天11点执行一次</span></span><br><span class="line">schedule.every().day。at(<span class="string">&quot;11:00&quot;</span>).do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每周执行一次</span></span><br><span class="line">schedule.every().week.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每周三执行一次</span></span><br><span class="line">schedule.every().wednesday.do(job)</span><br></pre></td></tr></table></figure>


<blockquote>
<p>周一到周日用 monday、tuesday、wednesday、thursday、friday、saturday、sunday</p>
</blockquote>
<h2 id="单次执行"><a href="#单次执行" class="headerlink" title="单次执行"></a>单次执行</h2><p>上面说的都是重复执行的任务，如果想单词执行一次任务的话，可以return一下就可以了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 载入模块</span></span><br><span class="line"><span class="keyword">import</span> schedule </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建需要的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输出结果&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> schedule.CancelJob	<span class="comment"># 取消执行任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行方法</span></span><br><span class="line">schedule.every().minutes.do(job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置循环执行</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending()	<span class="comment"># 运行定时任务</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)	<span class="comment"># 上一次定时任务执行完后间隔1S再执行第二次</span></span><br></pre></td></tr></table></figure>

<h2 id="取消指定任务"><a href="#取消指定任务" class="headerlink" title="取消指定任务"></a>取消指定任务</h2><p>如果有多个任务想单独某个任务停止执行或者可以设置判断某个情况下停止执行任务</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 载入模块</span></span><br><span class="line"><span class="keyword">import</span> schedule </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建需要的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输出结果&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> schedule.CancelJob	<span class="comment"># 取消执行任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行方法</span></span><br><span class="line">schedule.every().minutes.do(job).tag(job)	<span class="comment"># 设置标签为job</span></span><br><span class="line">schedule.every(<span class="number">10</span>).minutes.do(job).tag(job10)	<span class="comment"># 设置标签为job10</span></span><br><span class="line">schedule.every(<span class="number">20</span>).minutes.do(job).tag(job20)	<span class="comment"># 设置标签为job20</span></span><br><span class="line"></span><br><span class="line">schedule.clear(<span class="string">&#x27;job&#x27;</span>)	<span class="comment"># 取消标签为job的定时任务</span></span><br><span class="line"><span class="comment"># 设置循环执行</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending()	<span class="comment"># 运行定时任务</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)	<span class="comment"># 上一次定时任务执行完后间隔1S再执行第二次</span></span><br></pre></td></tr></table></figure>

<h2 id="方法传输参数"><a href="#方法传输参数" class="headerlink" title="方法传输参数"></a>方法传输参数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 载入模块</span></span><br><span class="line"><span class="keyword">import</span> schedule </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建需要的方法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">job</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行方法</span></span><br><span class="line">schedule.every().minutes.do(job, name=job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置循环执行</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    schedule.run_pending()	<span class="comment"># 运行定时任务</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)	<span class="comment"># 上一次定时任务执行完后间隔1S再执行第二次</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>python</tag>
        <tag>schedule</tag>
      </tags>
  </entry>
  <entry>
    <title>医院信息化系统术语汇总</title>
    <url>/2024/12/24/2024122405/</url>
    <content><![CDATA[<p><a href="https://mp.weixin.qq.com/s/QNZ-uS0kyOvKGy4VWOqrIg">以下文章来源于罗福如 ，作者Rolia</a></p>
<p>关于专业术语，每个领域都有领域中的专业术语，了解掌握也是为了工作上的沟通，让我们听懂同行说的话，也能展示自身具备专业知识，下面基本专业术语概念，从事智慧医疗、互联网医疗的你应该掌握。</p>
<span id="more"></span>
<h4 id="1-医院信息系统（HIS）"><a href="#1-医院信息系统（HIS）" class="headerlink" title="1.医院信息系统（HIS）"></a>1.医院信息系统（HIS）</h4><p>全称Hospital Information System。<br>HIS是覆盖医院所有业务和业务全过程的信息管理系统。利用电子计算机和通讯设备，为医院所属各部门提供病人诊疗信息和行政管理信息的收集、存储、处理、提取和数据交换的能力并满足授权用户的功能需求的平台。</p>
<h4 id="2-检验信息系统（LIS）"><a href="#2-检验信息系统（LIS）" class="headerlink" title="2.检验信息系统（LIS）"></a>2.检验信息系统（LIS）</h4><p>全称Laboratory Information Management System。<br>LIS是专为医院检验科设计的一套实验室信息管理系统，能将实验仪器与计算机组成网络，使病人样品登录、实验数据存取、报告审核、打印分发，实验数据统计分析等繁杂的操作过程实现了智能化、自动化和规范化管理。</p>
<h4 id="3-影像归档和通信系统（PACS）"><a href="#3-影像归档和通信系统（PACS）" class="headerlink" title="3.影像归档和通信系统（PACS）"></a>3.影像归档和通信系统（PACS）</h4><p>全称Picture Archiving and Communication Systems。<br>它是应用在医院影像科室的系统，主要的任务就是把日常产生的各种医学影像（包括核磁，CT，超声，X光机，红外仪、显微仪等设备产生的图像）通过各种接口（模拟，DICOM，网络）以数字化的方式海量保存起来，当需要的时候在一定的授权下能够很快的调回使用，同时增加一些辅助诊断管理功能。它在各种影像设备间传输数据和组织存储数据具有重要作用。</p>
<h4 id="4-放射科信息系统（RIS）"><a href="#4-放射科信息系统（RIS）" class="headerlink" title="4.放射科信息系统（RIS）"></a>4.放射科信息系统（RIS）</h4><p>全称Radiology Information System。<br>它是医院重要的医学影像信息系统之一，它与PACS系统共同构成医学影像学的信息化环境。放射科信息系统是基于医院影像科室工作流程的任务执行过程管理的计算机信息系统，主要实现医学影像学检验工作流程的计算机网络化控制、管理和医学图文信息的共享，并在此基础上实现远程医疗。</p>
<h4 id="5-临床信息系统（CIS）"><a href="#5-临床信息系统（CIS）" class="headerlink" title="5.临床信息系统（CIS）"></a>5.临床信息系统（CIS）</h4><p>全称Clinical Information System。<br>它是支持医院医护人员的临床活动，收集和处理病人的临床医疗信息，丰富和积累临床医学知识，并提供临床咨询、辅助诊疗、辅助临床决策，提高医护人员的工作效率，为病人提供更多、更快、更好的服务。像医嘱处理系统、病人床边系统、医生工作站系统、实验室系统、药物咨询系统等就属于CIS范围。<br>临床信息系统CIS相对于医院信息系统HIS而言，是两个不同的概念。HIS是面向医院管理的，是以医院的人、财、物为中心，以重复性的事物处理为基本管理单元，以医院各级管理人员为服务对象，以实现医院信息化管理、提高医院管理效益为目的。<br>而CIS是面向临床医疗管理的，是以病人为中心，以基予医学知识的医疗过程处理为基本管理单元，以医院的医务人员为服务对象，以提高医疗质量、实现医院最大效益为目的。</p>
<h4 id="6-体检信息系统（PEIS）"><a href="#6-体检信息系统（PEIS）" class="headerlink" title="6.体检信息系统（PEIS）"></a>6.体检信息系统（PEIS）</h4><p>全称Physical Examination Information System。<br>它是一套专业的体检管理软件，是医院、体检中心、疾控中心等单位开展体检业务的得力助手。它将以往人工操作的健康体检过程所得到信息转换成全信息化的电脑管理，使体检过程更为流畅、更有条理，更加便于管理，从而实现体检业务管理的自动化、信息化和规范化。</p>
<h4 id="7-病理系统（PIS）"><a href="#7-病理系统（PIS）" class="headerlink" title="7.病理系统（PIS）"></a>7.病理系统（PIS）</h4><p>它采用先进的图像处理技术与高精度硬件配置，从系统信号的获取、测量、处理到打印输出全部实现彩色化、自动化、智能化，具有操作简便、图像处理功能强、图像分析智能化、图像清晰度高、图文报告打印快捷、数据库管理功能强大等优点。</p>
<h4 id="8-电子病历系统（EMR）"><a href="#8-电子病历系统（EMR）" class="headerlink" title="8.电子病历系统（EMR）"></a>8.电子病历系统（EMR）</h4><p>全称（Electronic Medical Record）。<br>它是用电子设备（计算机、健康卡等）保存、管理、传输和重现的数字化的病人的医疗记录，取代手写纸张病历。它的内容包括纸张病历的所有信息。<br>美国国立医学研究所将定义为：EMR是基于一个特定系统的电子化病人记录，该系统提供用户访问完整准确的数据、警示、提示和临床决策支持系统的能力。<br>病历是病人在医院诊断治疗全过程的原始记录，它包含有首页、病程记录、检查检验结果、医嘱、手术记录、护理记录等等。<br>电子病历不仅指静态病历信息，还包括提供的相关服务。是以电子化方式管理的有关个人终生健康状态和医疗保健行为的信息，涉及病人信息的采集、存储、传输、处理和利用的所有过程信息。电子病历是随着医院计算机管理网络化、光盘和IC卡等的应用及Internet的全球化而产生的。电子病历是信息技术和网络技术在医疗领域的必然产物，是医院病历现代化管理的必然趋势，其在临床的初步应用，极大地提高了医院的工作效率和医疗质量，但这还仅仅是电子病历应用的起步。</p>
<h4 id="9-医院客户关系管理系统（HCRM）"><a href="#9-医院客户关系管理系统（HCRM）" class="headerlink" title="9.医院客户关系管理系统（HCRM）"></a>9.医院客户关系管理系统（HCRM）</h4><p>全称Hospital Customer Relationship Management。<br>HCRM是借鉴企业CRM管理经验、服务理念，融入医院经营理念、业务流程、市场营销策略和客户服务理念等建立起来的以医院客户为中心的管理体系。其目的是维持和保留现有客户，吸引挖掘潜在客户，培育并扩大忠诚客户队伍，获得客户的终身价值，提高医院的核心竞争力，最终达到医院社会效益和经济效益的双赢。</p>
<h4 id="10-医院资源规划系统（HRP）"><a href="#10-医院资源规划系统（HRP）" class="headerlink" title="10.医院资源规划系统（HRP）"></a>10.医院资源规划系统（HRP）</h4><p>引入一ERP软件扁平管理思想实现最大限度发挥医院资源效能，可有效提升传统HIS的管理功能，从而使医院全面实现管理的可视化，使预算管理、成本管理、绩效管理科学化，使得医护分开核算、三级分科管理、零库存管理、顺价作价、多方融资、多方支付以及供应链管理等先进管理方法在医院管理中应用成为可能。</p>
<h4 id="11-医院临床决策支持系统（HBI）"><a href="#11-医院临床决策支持系统（HBI）" class="headerlink" title="11.医院临床决策支持系统（HBI）"></a>11.医院临床决策支持系统（HBI）</h4><p>HBI辅助决策系统是通过整合分散在各个系统中的数据，将不同种类的数据进行关联，以数据库、人工智能、数理统计、可视化技术为基础，形成数据挖掘分析能力，建立医院管理以及医疗业务的辅助决策支持系统，对数据进行分析，提取有价值的潜在知识，对管理决策和医疗服务提供支持，从而实现管理维度的多元化、管理粒度的精细化、医疗服务的智慧化，实现医疗成本、医疗质量的双控制，向社会提供最好的服务。</p>
<h4 id="12-手术麻醉信息系统（OAMS）"><a href="#12-手术麻醉信息系统（OAMS）" class="headerlink" title="12.手术麻醉信息系统（OAMS）"></a>12.手术麻醉信息系统（OAMS）</h4><p>手术麻醉信息系统将为医院手术室带来规范化的工作管理标准、实时快捷的信息流、物流、资金流，实现医疗病案的真实记忆存储，医疗经验的积累和有效归纳，全面解决了手术室麻醉过程管理的信息化和数字化，随着时间的延长，更会为医院沉淀积累出厚重的医疗、科研、教学的宝贵信息文库，不但满足了科室工作需要，同时也满足了医院数字化的需要。</p>
<h4 id="13-随访系统（CTP）"><a href="#13-随访系统（CTP）" class="headerlink" title="13.随访系统（CTP）"></a>13.随访系统（CTP）</h4><p>系统收集整合患者完整信息，包括基本信息、门诊信息、住院信息、手术信息和随访记录等，并支持多条件检索查询某类患者。患者资料可以手动EXCEL导入，也可以从HIS、EMR、PACS等系统中自动导入。</p>
<h4 id="14-大数据治理系统"><a href="#14-大数据治理系统" class="headerlink" title="14.大数据治理系统"></a>14.大数据治理系统</h4><p>遵循国家和医疗行业数据标准，协助构建可执行、可监管的治理制度，协助卫生管理机构完成事前标准制定、事中过程监管与质量评估、事后质量提升的完整治理体系，保障健康医疗大数据质量，建立稳定、优质的健康医疗大数据环境。</p>
<h4 id="15-护理质量管理系统"><a href="#15-护理质量管理系统" class="headerlink" title="15.护理质量管理系统"></a>15.护理质量管理系统</h4><p>护理质量评价内容更加完善护理质量经验管理，对质量只进行简单的事后检查和评比，缺乏有效的监督和反馈机制，没有科学标准和量化指标。护理质量指标管理，采用常用的护理工作指标进行统计、分析，来评价护理质量的优劣</p>
<h4 id="16-电子健康卡"><a href="#16-电子健康卡" class="headerlink" title="16.电子健康卡"></a>16.电子健康卡</h4><p>通过集成建卡接口、线上审核等功能，提供多样化的接入工具，实现医院服务号自助接入，降低医院改造成本。向用户提供区域内医疗机构挂号缴费查报告等一站式服务。一次认证，多家医院服务号一键关联院内信息，实现跨院就医一卡通。</p>
<h4 id="17-远程会诊"><a href="#17-远程会诊" class="headerlink" title="17.远程会诊"></a>17.远程会诊</h4><p>利用电子邮件、网站、信件、电话、传真等现代化通讯工具，为患者完成病历分析、病情诊断，进一步确定治疗方案的治疗方式，它是极其方便、诊断极其可靠的新型就诊方式，它与邮购的紧密配合，有力的带动了传统治疗方式的改革和进步，为医疗走向区域扩大化、服务国际化提供了坚实的基础和有力的条件，也为规范医疗市场、评价医疗质量标准、完善医疗服务体系、交流医疗服务经验提供了新的准则和工具。</p>
<h4 id="18-分级诊疗"><a href="#18-分级诊疗" class="headerlink" title="18.分级诊疗"></a>18.分级诊疗</h4><p>分级诊疗指按照疾病的轻重缓急及治疗的难易程度进行分级，不同级别的医疗机构承担不同疾病的治疗，逐步实现从全科到专业化的医疗过程。</p>
<h4 id="19-慢病管理"><a href="#19-慢病管理" class="headerlink" title="19.慢病管理"></a>19.慢病管理</h4><p>慢性疾病管理系统是一种为综合性医院及专科医院开发设计的慢性疾病管理网络系统。它全面导入疾病管理的概念，针对常见慢性病的诊疗与科研，帮助科室快速实现慢性病病历的系统管理，辅助医生护士的日常诊疗护理工作，并为医院向患者提供多样化诊疗服务创造条件。</p>
<h4 id="20-患者渗透、触达、转化"><a href="#20-患者渗透、触达、转化" class="headerlink" title="20.患者渗透、触达、转化"></a>20.患者渗透、触达、转化</h4><p>指对患者某个应用场景的教育，留存以及转化。</p>
<h4 id="21-医保控费"><a href="#21-医保控费" class="headerlink" title="21.医保控费"></a>21.医保控费</h4><p>在医学合理性层面，除了不能违背既定临床路径，也不能违背医保政策（比如报销范畴不能超过《国家基本医疗保险、工伤保险和生育保险药品目录（2017年版）的目录范围》。大部分的控费系统就是通过信息化的手段来管理这两条红线。</p>
<h4 id="22-医疗垃圾溯源系统"><a href="#22-医疗垃圾溯源系统" class="headerlink" title="22.医疗垃圾溯源系统"></a>22.医疗垃圾溯源系统</h4><p>医疗垃圾属于危险废弃品，，医院里的医疗垃圾必须封闭储存、定点存放、专人运输，医疗垃圾必须进行焚烧处理，以确保杀菌和避免环境污染，不允许以任何形式回收和再利用。医疗垃圾的处置涉及医疗、城建、环保、科研等多个部门，需要各个环节协作，加大监管。<br>以RFID技术结合GPS技术、GPRS技术实现可视化医疗垃圾运输管理和实时定位为基础的高速、高效的信息网络平台和EDI等为骨干技术的医疗垃圾RFID监控追溯管理系统，用信息化技术将整个流程实时监管起来，将为相关部门实现医疗垃圾处理过程的全程监管提供了基础的信息支持和保障。</p>
<h4 id="23-健康档案"><a href="#23-健康档案" class="headerlink" title="23.健康档案"></a>23.健康档案</h4><p>健康档案，是记录每个人从出生到死亡的所有生命体征的变化，以及自身所从事过的与健康相关的一切行为与事件的档案。具体的内容主要包括每个人的生活习惯、以往病史、诊治情况、家族病史、现病史、体检结果及疾病的发生、发展、治疗和转归的过程等。</p>
<h4 id="24-互联网医院"><a href="#24-互联网医院" class="headerlink" title="24.互联网医院"></a>24.互联网医院</h4><p>就是在线问诊、智能问药、药品快递到家。“互联网医院”带有咨询、随访、慢病管理等功能，它有实体医院作强有力的支撑，线上方便病人，就是简单的问题不需要到医院，在网上就可以进行。</p>
<h4 id="25-智慧医院"><a href="#25-智慧医院" class="headerlink" title="25.智慧医院"></a>25.智慧医院</h4><p>第一是面向医务人员的“智慧医疗”。以电子病历为核心的信息化的建设，电子病历和影像、检验等其他的系统互联互通。<br>第二个领域是面向患者的“智慧服务”。很多医院的一体机、自助机，包括用的手机结算，预约挂号、预约诊疗、信息提醒，包括衍生出来的一些服务，比如停车信息的推送、提示等。让患者感受更加方便和快捷。<br>第三个领域是面向医院的“智慧管理”。医院精细化管理很重要的一条是精细化的成本核算，用于这些医院内部后勤的管理，管理者用手机，或在办公室的电脑上就可以看到全院运转的状态，包括OA的办公系统。这一大领域就是用于医院的精细化的信息化管理。</p>
<h4 id="26-健康宣教"><a href="#26-健康宣教" class="headerlink" title="26.健康宣教"></a>26.健康宣教</h4><p>通过有计划、有组织、有系统的社会教育活动，使人们自觉地采纳有益于健康的行为和生活方式，消除或减轻影响健康的危险因素，预防疾病，促进健康，提高生活质量，并对教育效果作出评价。</p>
<h4 id="27-CFDA认证"><a href="#27-CFDA认证" class="headerlink" title="27.CFDA认证"></a>27.CFDA认证</h4><p>一般是国家食品药品监督管理总局，是国务院直属机构。由他们颁发的医疗器械认证.</p>
<h4 id="28-DRGs"><a href="#28-DRGs" class="headerlink" title="28.DRGs"></a>28.DRGs</h4><p>（疾病）诊断相关分类根据病人的年龄、性别、住院天数、临床诊断、病症、手术、疾病严重程度，合并症与并发症及转归等因素把病人分入500-600个诊断相关组，然后决定应该给医院多少补偿。<br>DRGs是当今世界公认的比较先进的支付方式之一。DRGs的指导思想是：通过统一的疾病诊断分类定额支付标准的制定，达到医疗资源利用标准化。有助于激励医院加强医疗质量管理，迫使医院为获得利润主动降低成本，缩短住院天数，减少诱导性医疗费用支付，有利于费用控制。<br>在实施的过程中，许多国家发现了其进一步的优点：有效的降低了医疗保险机构的管理难度和费用；有利于宏观预测和控制医疗费用；为医疗质量的评估提供了一个科学的、可相互比较的分类方法。<br>DRGs用于医疗费用支付制度的基本出发点是：医疗保险的给付方不是按照病人在院的实际花费（即按服务项目）付账，而是按照病人疾病种类、严重程度、治疗手段等条件所分入的疾病相关分组付账。依病情的不同、病人的不同、治疗手段的不同会有不同的DRG编码相对应。</p>
<h4 id="29-导诊"><a href="#29-导诊" class="headerlink" title="29.导诊"></a>29.导诊</h4><p>根据患者症状描述推荐挂号科室，并可展示相应的医疗信息，如科室介绍，专家介绍，门诊安排，就诊需知等，与医院的挂号系统打通后，患者可以直接完成挂号。</p>
<h4 id="30-陪诊"><a href="#30-陪诊" class="headerlink" title="30.陪诊"></a>30.陪诊</h4><p>非本次就诊人员，陪同就诊人员进行病情诊断或治疗称之为陪诊，一般为无病人员陪同患病人员一起去医院就诊。代替挂号、排队、收费等，可以省去很多的时间与精力。</p>
<h4 id="31-辅助诊断"><a href="#31-辅助诊断" class="headerlink" title="31.辅助诊断"></a>31.辅助诊断</h4><p>计算机辅助诊断（computer aided diagnosis，CAD）或计算机辅助检测（computer aideddetection，CAD）是指通过影像学、医学图像处理技术以及其他可能的生理、生化手段，结合计算机的分析计算，辅助发现病灶，提高诊断的准确率。<br>现在常说的CAD技术主要是指基于医学影像学的计算机辅助技术。与所述计算机辅助检测（CAD）相区别，后者重点是检测，计算机只需要对异常征象进行标注，在此基础上进行常见的影像处理，并无需进行进一步诊断。即，计算机辅助诊断是计算机辅助检测的延伸和最终目的，相应地，计算机辅助检测是计算机辅助诊断的基础和必经阶段。CAD技术又被称为医生的“第三只眼”，CAD系统的广泛应用有助于提高医生诊断的敏感性和特异性。</p>
<h4 id="32-医药电商"><a href="#32-医药电商" class="headerlink" title="32.医药电商"></a>32.医药电商</h4><p>医药电子商务是指以医疗机构、医药公司、银行、医药生产商、医药信息服务提供商、第三方机构等以赢利为目的的市场经济主体，凭借计算机和网络技术（主要是互联网）等现代信息技术，进行医药产品交换及提供相关服务的行为。</p>
<h4 id="33-医生多点执业-自由执业"><a href="#33-医生多点执业-自由执业" class="headerlink" title="33.医生多点执业&#x2F;自由执业"></a>33.医生多点执业&#x2F;自由执业</h4><p>医生自由执业，是医改至关重要的一环。只有从体制中解放医生，让他们自由流动与充分竞争，才能真正让市场来为医生定价，让好医生为医院带来高价值，从而改变医院靠药品供养的畸形现状，最终从根本上改变医患关系。</p>
<h4 id="34-区域双向转诊"><a href="#34-区域双向转诊" class="headerlink" title="34.区域双向转诊"></a>34.区域双向转诊</h4><p>“双向转诊”，简而言之就是“小病进社区，大病进医院”，积极发挥大中型医院在人才、技术及设备等方面的优势，同时充分利用各社区医院的服务功能和网点资源，促使基本医疗逐步下沉社区，社区群众危重病、疑难病的救治到大中型医院。</p>
<h4 id="35-呼叫中心"><a href="#35-呼叫中心" class="headerlink" title="35.呼叫中心"></a>35.呼叫中心</h4><p>呼叫中心，又称客户服务中心，起源于20世纪30年代，最初是把用户的呼叫转移到应答台或者专家处。此后，随着要转移的呼叫和应答增多，开始建立起交互式语音应答系统，这种系统能把客户部分常见问题的应答实现由机器“自动话务员”来应答和处理。传统意义上的呼叫中心，是指以电话接入为主的呼叫响应中心，为客户提供各种电话响应服务。</p>
<h4 id="36-医院资产管理系统"><a href="#36-医院资产管理系统" class="headerlink" title="36.医院资产管理系统"></a>36.医院资产管理系统</h4><p>医院资产主要指三大类：<br>一类是CT、MRT、生化分析仪、DSA、加速器、呼吸机、消毒灭菌等各类诊断、治疗及辅助医疗设备；<br>一类是各科室、网络中心的计算机及网络设备；<br>一类是楼宇及水、电、气、消防等基础设施。医疗设备是医院的核心资产，是医院现代化程度的重要标志，是医疗、科研、教研、教学工作最基本的要素，也是不断提高医学科学技术水平的基本条件。</p>
<h4 id="37-诊间叫号系统"><a href="#37-诊间叫号系统" class="headerlink" title="37.诊间叫号系统"></a>37.诊间叫号系统</h4><p>实现排队叫号与信息发布两大功能，两个功能在同一显示终端上独立或同屏同步显示。</p>
<h4 id="38-医院信息化协同"><a href="#38-医院信息化协同" class="headerlink" title="38.医院信息化协同"></a>38.医院信息化协同</h4><p>“数据共享交换平台”为中心，统一数据、统一接口、统一认证，实现院内系统间的数据共享和交换以及医疗业务的协同。并在平台的基础上建设了门诊系统、住院系统、LIS、RIS以及电子病历系统等，形成了以“数据共享交换平台”为中心的信息系统架构，彻底解决了医院传统以“HIS系统为中心”所存在的问题，也为区域医疗协同和省市级电子病历资源库奠定基础。</p>
<h4 id="39-医联体"><a href="#39-医联体" class="headerlink" title="39.医联体"></a>39.医联体</h4><p>医联体是指区域医疗联合体，是将同一个区域内的医疗资源整合在一起，通常由一个区域内的三级医院与二级医院、社区医院、村医院组成一个医疗联合体。目的是为了解决百姓看病难的问题，发烧感冒的就不用再挤进三级医院，在小医院也能解决，解决看病难的问题。实现了人民满意、政府满意、职工满意的预期目标。</p>
<h4 id="40-医共体"><a href="#40-医共体" class="headerlink" title="40.医共体"></a>40.医共体</h4><p>是农村开展医联体建设的主要模式。重点探索以“县医院为龙头，乡镇卫生院为枢纽，村卫生室为基础”的县乡一体化管理，构建县、乡、村三级联动的县域医疗服务体系。三是专科联盟，指医疗机构之间以专科协作为纽带形成的联合体。以一家医疗机构特色专科为主，联合其他医疗机构相同专科技术力量，形成区域内若干特色专科中心，提升解决专科重大疾病的救治能力，形成补位发展模式。横向盘活现有医疗资源，突出专科特色。</p>
<h4 id="41-床旁结算"><a href="#41-床旁结算" class="headerlink" title="41.床旁结算"></a>41.床旁结算</h4><p>移动结算车外形似普通的机器，却配有电脑、医保读卡器、打印机等装置</p>
<h4 id="42-移动护理"><a href="#42-移动护理" class="headerlink" title="42.移动护理"></a>42.移动护理</h4><p>移动护理信息系统基于移动终端设备的便携性和腕带标签的智能识别，实现患者身份识别无差错、用药无差错、护理工作可量化，帮助病区护士在护理业务中实时获取患者临床信息、准确地确认执行医嘱，有效实现闭环医嘱，做到正确的病人在正确的时间得到正确的治疗。</p>
<h4 id="43-临床路径管理系统"><a href="#43-临床路径管理系统" class="headerlink" title="43.临床路径管理系统"></a>43.临床路径管理系统</h4><p>临床路径管理作为我国医改的重点内容和当前医院医疗改革的热点，不仅是加强医院管理、规范医生诊疗、控制医疗成本的有效途径，也是分级诊疗最具参考和使用价值的医疗操作方式。<br>行心临床路径管理系统是根据国家卫生部发布的病种及各地成熟的单病种管理经验，聚集1000+个临床路径知识库，结合医院临床路径实施经验所开发，遵照循证医学的方法，根据某种疾病或某种手术方法，建立一套标准化治疗模式与治疗程序，让患者由住院到出院都依此模式来接受治疗，并依据治疗结果来分析评估及总结每个患者的差异，以避免下一个患者住院时发生同样的失误，体现的是医疗流程表格化，医嘱信息菜单化，医疗治疗监控实时化。</p>
<h4 id="44-重症医学系统"><a href="#44-重症医学系统" class="headerlink" title="44.重症医学系统"></a>44.重症医学系统</h4><p>电子数据交换。采用约定的数据传输标准和格式，通过专用电子网络来传输的一系列有关需求和供应的信息。</p>
<h4 id="45-绩效管理系统"><a href="#45-绩效管理系统" class="headerlink" title="45.绩效管理系统"></a>45.绩效管理系统</h4><p>医院精细化绩效管理系统软件，目的是降低隐形成本，提高科室效率。</p>
<h4 id="46-医嘱信息共享系统"><a href="#46-医嘱信息共享系统" class="headerlink" title="46.医嘱信息共享系统"></a>46.医嘱信息共享系统</h4><p>避免造成有人重复就医、超量开药的情况，减少违规行为发生，从源头上控制不合理的费用支出。</p>
<h4 id="47-电子处方"><a href="#47-电子处方" class="headerlink" title="47.电子处方"></a>47.电子处方</h4><p>电子处方（Electronic prescription），是指依托网络传输，采用信息技术编程，在诊疗活动中填写药物治疗信息，开具处方，并通过网络传输至药房，经药学专业技术人员审核、调配、核对、计费，并作为药房发药和医疗用药的医疗电子文书。</p>
<h4 id="48-处方流转"><a href="#48-处方流转" class="headerlink" title="48.处方流转"></a>48.处方流转</h4><p>将处方流转平台作为连接实体医院、互联网医院、医保（含健康险）、药店和患者&#x2F;居民的桥梁，是流量变现的重要入口“的认知在业内已经基本达成一致。</p>
<h4 id="49-电子床头卡"><a href="#49-电子床头卡" class="headerlink" title="49.电子床头卡"></a>49.电子床头卡</h4><p>在住院部里面，每个病人都有床头卡，病人住院病床前必须放置床头卡显示屏。床头卡是医院挂在病人床头的一块小牌,是医院治疗和护理工作规范化的一项内容。上面标明了患者姓名、年龄、性别、疾病名称、护理级别、病情等内容,是卫生行政主管部门规定的入院制度内容之一,也是医院沿用多年的一种制度。</p>
<h4 id="50-医生集团"><a href="#50-医生集团" class="headerlink" title="50.医生集团"></a>50.医生集团</h4><p>医生集团又称为“医生执业团体”或者“医生执业组织”，由多个医生组成的联盟或者组织机构，英文名为“Medical Group”。“医生集团”可能属于医院，也可能是独立的“医生组织”，一般是独立法人机构，以股份制形式运作。</p>
<h4 id="51-在线问诊"><a href="#51-在线问诊" class="headerlink" title="51.在线问诊"></a>51.在线问诊</h4><p>提供真实医生的在线医疗健康咨询服务，由公立医院医师解答用户的健康问题。</p>
<h4 id="52-医疗器械融资租赁"><a href="#52-医疗器械融资租赁" class="headerlink" title="52.医疗器械融资租赁"></a>52.医疗器械融资租赁</h4><p>大型医疗器械更新换代的速度越来越快，但医疗机构的资金压力日益加大，融资要求也更为迫切。医疗设备融资租赁解决了医院急需引进医疗设备而苦于资金缺乏的棘手问题，合理配置了医院的资金资源，因此在国家逐步放开医疗融资租赁后其市场渗透率迅速上升。</p>
<h4 id="53-基层医疗机构"><a href="#53-基层医疗机构" class="headerlink" title="53.基层医疗机构"></a>53.基层医疗机构</h4><p>基层是指各种组织中最低的一层，它跟群众的联系最直接。在我国，基层医疗一般意义上指的是县乡村三级医疗机构，包括县级人民医院、社区卫生服务中心、乡镇卫生院、村卫生所（室）等。</p>
<h4 id="54-云胶片"><a href="#54-云胶片" class="headerlink" title="54.云胶片"></a>54.云胶片</h4><p>云胶片系统，除了具备传统胶片的各项功能，还能实现影像资料云端浏览、下载、异地打印等功能；不仅可以用传统方式打印胶片，还可以采用相片纸打印，且支持异地打印，成本却仅为传统胶片1&#x2F;4；影像资料保存在云端，通过安全码或授权可以随时共享影像信息，支持下载查阅，便于携带、转诊。</p>
<h4 id="55-健康一体机"><a href="#55-健康一体机" class="headerlink" title="55.健康一体机"></a>55.健康一体机</h4><p>健康一体机是具有心电图、心率、血糖、血压、血氧饱和度、尿常规、体温、血红蛋白等多项检测功能，能实现检查数据采集、存储、处理、传输等功能，通过一体机终端软件实现一体化整合的医疗检测设备，具备高集成、易操作、便携带、稳定精准等特点。通过健康一体机终端软件与区域内卫生信息平台实现健康管理数据的存储、管理及交互。</p>
<h4 id="56-医养结合"><a href="#56-医养结合" class="headerlink" title="56.医养结合"></a>56.医养结合</h4><p>“医养结合”就是把专业的医疗技术检查和先进设备与康复训练、日常学习、日常饮食、生活养老等专业相融合。以医疗为保障，以康复为支撑，边医边养、综合治疗。从技术上尽可能的实现疾病转归，病人的各项功能得到保持或恢复。<br>其中，“医”主要就是重大疾病早期识别、必要的检查、治疗、康复训练，包括有关疾病转归、评估观察、有关检查、功能康复、诊疗护理、重大疾病早期干预以及临终关怀等医疗技术上的服务。<br>“养”包括的生理和心理上的护理、用药和安全、日常饮食照护、功能训练、日常学习、日常活动、危重生命体征、身体状况分析、体重营养定期监测等服务。<br>利用“医养学一体化”的发展模式，就是把大病早期识别干预、大病早期康复训练、日常生活、养护疗养、日常学习、护理等综为一科。医养结合是人类医疗改革创新中的重点康复工程，是一种切实可行的医疗改革新模式。</p>
<h4 id="57-医疗云诊所SAAS"><a href="#57-医疗云诊所SAAS" class="headerlink" title="57.医疗云诊所SAAS"></a>57.医疗云诊所SAAS</h4><p>面向订单生产策略。一种供应链策略，在需求预测的基础上进行生产，形成产品库存来满足未来的需求。</p>
<h4 id="58-跨境医疗"><a href="#58-跨境医疗" class="headerlink" title="58.跨境医疗"></a>58.跨境医疗</h4><p>对接国内外医疗资源，实现高端医疗资源的均衡以及价值化。</p>
<h4 id="59-医疗器械融资租赁"><a href="#59-医疗器械融资租赁" class="headerlink" title="59.医疗器械融资租赁"></a>59.医疗器械融资租赁</h4><p>大型医疗器械更新换代的速度越来越快，但医疗机构的资金压力日益加大，融资要求也更为迫切。医疗设备融资租赁解决了医院急需引进医疗设备而苦于资金缺乏的棘手问题，合理配置了医院的资金资源，因此在国家逐步放开医疗融资租赁后其市场渗透率迅速上升。</p>
<h4 id="60-家庭医生"><a href="#60-家庭医生" class="headerlink" title="60.家庭医生"></a>60.家庭医生</h4><p>家庭医生不是私人医生，是对服务对象实行全面的、连续的、有效的、及时的和个性化医疗保健服务和照顾的新型医生。在中国，由于家庭医生还未成熟，所以还存在很多以电话咨询为主的顾问式的家庭医生。</p>
<h4 id="61-电子护理白板"><a href="#61-电子护理白板" class="headerlink" title="61.电子护理白板"></a>61.电子护理白板</h4><p>护理白板对于医院每个病区都是必不可少的，护士根据白板的记录来开展护理工作，白板内容是否清晰、布局是否合理、结构调整是否方便直接影响护理的效率与安全。目前医院的病区护士白板靠手工书写，费时费力，有数据不一致的风险，排版乱，空间利用不足，护理时容易遗漏内容（因字迹不清、排序较乱、多次重整等原因）。不方便增加新的项目与内容，更新不及时；需定期（每周）重新整理白板的内容，增加了二次错误发生的风险。</p>
<h4 id="62-基因测序"><a href="#62-基因测序" class="headerlink" title="62.基因测序"></a>62.基因测序</h4><p>基因测序是一种新型基因检测技术，能够从血液或唾液中分析测定基因全序列，预测罹患多种疾病的可能性，个体的行为特征及行为合理。基因测序技术能锁定个人病变基因，提前预防和治疗。</p>
<h4 id="63-银医通"><a href="#63-银医通" class="headerlink" title="63.银医通"></a>63.银医通</h4><p>其中，银行医疗卡既是患者在医院挂号就诊和医疗结算的服务介质，也是医院系统信息化建设的主要载体，它不仅具有银行卡的金融结算功能，还具有挂号、缴费、就诊、充值、打单、退费等医疗服务功能，真正实现了一卡多用。</p>
<h4 id="64-前置服务器"><a href="#64-前置服务器" class="headerlink" title="64.前置服务器"></a>64.前置服务器</h4><p>前置机是一般存在于前台客户端和后台服务器之间，扮演适配器的角色，即：在不同的通信协议、数据格式或语言之间相互转换。它还起着管理和调度前台所发起的交易作用，经过前置机的调度，可以减轻后台服务器的负担，并且有时在客户端和后台服务器间起着防火墙的作用。这样可以起到隐藏后台的功能，在一定程度上确保后台的安全性。</p>
<h4 id="65-医疗数据中心"><a href="#65-医疗数据中心" class="headerlink" title="65.医疗数据中心"></a>65.医疗数据中心</h4><p>相对场景下的医疗数据脱敏、转达、存储处理的中心。</p>
<h4 id="66-云医疗"><a href="#66-云医疗" class="headerlink" title="66.云医疗"></a>66.云医疗</h4><p>云医疗(Cloud Medical Treatment，简称CMT)是指在云计算、物联网、5G通信以及多媒体等新技术基础上，结合医疗技术，旨在提高医疗水平和效率、降低医疗开支，实现医疗资源共享，扩大医疗范围，以满足广大人民群众日益提升的健康需求的一项全新的医疗服务。</p>
<h4 id="67-超融合架构"><a href="#67-超融合架构" class="headerlink" title="67.超融合架构"></a>67.超融合架构</h4><p>超融合基础架构（Hyper Converged Infrastructure，或简称“HCI”）是指在同一套单元设备中不仅仅具备计算、网络、存储和服务器虚拟化等资源和技术，而且还包括备份软件、快照技术、重复数据删除、在线数据压缩等元素，而多套单元设备可以通过网络聚合起来，实现模块化的无缝横向扩展（scale-out），形成统一的资源池。<br>超融合（甚至超超融合）在本地很容易实现：将计算、网络和存储都集成在一个设备内，并且通过它由供应商预先配置好且差不多到手就可以使用。HCI是实现“软件定义数据中心”（SDDC）的终极技术途径。HCI类似Google、Facebook后台的大规模基础架构模式，可以为数据中心带来最优的效率、灵活性、规模、成本和数据保护。</p>
<h4 id="68-医院容灾系统"><a href="#68-医院容灾系统" class="headerlink" title="68.医院容灾系统"></a>68.医院容灾系统</h4><p>就是为计算机信息系统提供的一个能应付各种灾难的环境。当计算机系统在遭受如火灾、水灾、地震、战争等不可抗拒的自然灾难以及计算机犯罪、计算机病毒、掉电、网络&#x2F;通信失败、硬件&#x2F;软件错误和人为操作错误等人为灾难时，容灾系统将保证用户数据的安全性（数据容灾），甚至，一个更加完善的容灾系统，还能提供不间断的应用服务（应用容灾）。可以说，容灾系统是数据存储备份的最高层次。</p>
<h4 id="69-医疗混合云"><a href="#69-医疗混合云" class="headerlink" title="69.医疗混合云"></a>69.医疗混合云</h4><p>一种服务器数据管理技术，把医院数据内外网融合在一起，并把业务相对的分开。即可以保护医疗数据，也可以实现外网数据的对接。</p>
<h4 id="70-HL7（卫生信息交换标准）"><a href="#70-HL7（卫生信息交换标准）" class="headerlink" title="70.HL7（卫生信息交换标准）"></a>70.HL7（卫生信息交换标准）</h4><p>全称Health Level 7标准化的卫生信息传输协议，是医疗领域不同应用之间电子传输的协议。<br>HL7汇集了不同厂商用来设计应用软件之间界面的标准格式，它将允许各个医疗机构在异构系统之间，进行数据交互。<br>HL7的主要应用领域是HIS&#x2F;RIS，主要是规范HIS&#x2F;RIS系统及其设备之间的通信，它涉及到病房和病人信息管理、化验系统、药房系统、放射系统、收费系统等各个方面。HL7的宗旨是开发和研制医院数据信息传输协议和标准，规范临床医学和管理信息格式，降低医院信息系统互连的成本，提高医院信息系统之间数据信息共享的程度。</p>
<h4 id="71-DICOM（医学数字图像存储与通信标准）"><a href="#71-DICOM（医学数字图像存储与通信标准）" class="headerlink" title="71.DICOM（医学数字图像存储与通信标准）"></a>71.DICOM（医学数字图像存储与通信标准）</h4><p>全称Digital Imaging and Communications in Medicine医学数字成像和通信，是医学图像和相关信息的国际标准（ISO 12052）。它定义了质量能满足临床需要的可用于数据交换的医学图像格式。DICOM被广泛应用于放射医疗，心血管成像以及放射诊疗诊断设备（X射线，CT，核磁共振，超声等），并且在眼科和牙科等其它医学领域得到越来越深入广泛的应用。在数以万计的在用医学成像设备中，DICOM是部署最为广泛的医疗信息标准之一。当前大约有百亿级符合DICOM标准的医学图像用于临床使用。</p>
<h4 id="72-IHE（医疗信息集成标准）"><a href="#72-IHE（医疗信息集成标准）" class="headerlink" title="72.IHE（医疗信息集成标准）"></a>72.IHE（医疗信息集成标准）</h4><p>全称Integrating the Healthcare Enterprise IHE是由医疗工作者和企业共同发起的、旨在提高医疗计算机系统之间更好的共享信息的技术框架。<br>IHE通过提高已有通讯标准之间的协同使用水平，如DICOM和HL7，来满足特殊临床需要，以便为患者提供最佳服务。<br>用IHE技术框架统一起来的医疗系统可以更好地与其他系统通信、更易于实施，并且能使医疗服务人员更高效地使用相关信息。医生、医学专家、护士、医疗机构管理人员和其他医疗服务人员，预料到了这样一天的到来：重要的医疗信息可以在科室内部和各科室之间的系统无缝穿梭，在任何需要的地方都可以随时获得。IHE技术框架的出现使他们的预想变成了现实，通过提高医疗系统之间的整合，消除壁垒，为患者提供最佳医疗服务。</p>
<h4 id="73-ICD-10（医疗信息集成标准）"><a href="#73-ICD-10（医疗信息集成标准）" class="headerlink" title="73.ICD-10（医疗信息集成标准）"></a>73.ICD-10（医疗信息集成标准）</h4><p>全称International Classification of Diseases WHO制定的国际统一的疾病分类方法，它根据疾病的病因、病理、临床表现和解剖位置等特性，将疾病分门别类，使其成为一个有序的组合，并用编码的方法来表示的系统。全世界通用的是第10次修订本《疾病和有关健康问题的国际统计分类》，仍保留了ICD的简称，并被统称为ICD-10。</p>
<h4 id="74-HIMSS6"><a href="#74-HIMSS6" class="headerlink" title="74.HIMSS6"></a>74.HIMSS6</h4><p>是一个不以营利为目的的组织，致力于提高医疗质量，安全，成本效益和访问，通过对信息技术和管理系统的最佳使用</p>
<h4 id="75-作废OR红冲"><a href="#75-作废OR红冲" class="headerlink" title="75.作废OR红冲"></a>75.作废OR红冲</h4><p>收费窗口对于非本人非当天的收费，进行的退费操作，都叫做红冲。满足条件的认为是作废</p>
<h4 id="76-当日挂号OR预约挂号"><a href="#76-当日挂号OR预约挂号" class="headerlink" title="76.当日挂号OR预约挂号"></a>76.当日挂号OR预约挂号</h4><p>挂号窗口对非当天出诊的医生进行的挂号都叫做预约挂号。反之视为当日挂号</p>
<h4 id="77-HIT"><a href="#77-HIT" class="headerlink" title="77.HIT"></a>77.HIT</h4><p>HIT指的是医疗信息化，或卫生信息化建设。(Healthcare Information Technology，HIT)<br>建设中包含了诸多内容。根据信息技术在相应卫生领域的应用，可以划分为，公共卫生信息化、医院信息化，社区卫生信息化，等领域信息化。</p>
<p>在卫生信息化产业逐渐迈向成熟期的过程中，市场机制与政府机制是缺一不可的，卫生行政主管部门对信息化建设有领导、组织、规划、规范和协调的责任。当前，信息技术供应商尚不强壮，医院的决策权限和能力亦有限，政府的政策就成为现阶段对HIT产业和市场发展影响最大的因素。因此，政府的着力点应该放在信息化方向的把握、相关标准和规范的制定、创新激励和市场准入体系的建立等政策层面，在供应商和医院易于忽视或力不从心的领域加大投入，为HIT产业和市场的发展提供政策支持和保障。至于具体的市场行为，则应遵循自由竞争、优胜劣汰的法则，交由市场加以处理。不可过度干预、揠苗助长，更忌受利益驱使介入市场运作。市场与集中作为推动HIT行业发展的必要手段，相互补充，不可偏废。只有HIT产业和市场都进入良性发展的轨道，方能营造政府、医院及供应商均有所获的共赢局面。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>医疗</tag>
        <tag>信息系统</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次pip/pip3安装uwsgi报错</title>
    <url>/2024/12/26/2024122601/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本来是想着在centos 7.9的主机上面部署一个flask应用，采用的方式是linux+nginx+uwsgi来进行发布，其他的都没有问题，但是在使用pip安装uwsgi时报错了，安装不成功，查了很多方法：试过把pip更新、安装python3-devel等等，但都是不行，最后还是得靠自己，研究了下pip安装方式，发现安装uwsgi是编译安装的，最后一查询发现gcc-c++没有装，安装之后再去安装uwsgi发现就成功。</p>
<span id="more"></span>
<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>下面是我安装的时候的报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@* ~]# <span class="built_in">sudo</span> pip3 install uwsgi</span><br></pre></td></tr></table></figure>

<blockquote>
<p>WARNING: Running pip install with root privileges is generally not a good idea. Try <code>pip3 install --user</code> instead.<br>Collecting uwsgi<br>  Using cached <a href="https://files.pythonhosted.org/packages/b3/8e/b4fb9f793745afd6afcc0d2443d5626132e5d3540de98f28a8b8f5c753f9/uwsgi-2.0.21.tar.gz">https://files.pythonhosted.org/packages/b3/8e/b4fb9f793745afd6afcc0d2443d5626132e5d3540de98f28a8b8f5c753f9/uwsgi-2.0.21.tar.gz</a><br>Installing collected packages: uwsgi<br>  Running setup.py install for uwsgi … error<br>    Complete output from command &#x2F;usr&#x2F;bin&#x2F;python3 -u -c “import setuptools, tokenize;<strong>file</strong>&#x3D;’&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;setup.py’;f&#x3D;getattr(tokenize, ‘open’, open)(<strong>file</strong>);code&#x3D;f.read().replace(‘\r\n’, ‘\n’);f.close();exec(compile(code, <strong>file</strong>, ‘exec’))” install –record &#x2F;tmp&#x2F;pip-2_lro4bs-record&#x2F;install-record.txt –single-version-externally-managed –compile:<br>    &#x2F;usr&#x2F;lib64&#x2F;python3.6&#x2F;distutils&#x2F;dist.py:261: UserWarning: Unknown distribution option: ‘descriptions’<br>      warnings.warn(msg)<br>    running install<br>    using profile: buildconf&#x2F;default.ini<br>    detected include path: [‘&#x2F;usr&#x2F;include’, ‘&#x2F;usr&#x2F;local&#x2F;include’]<br>    Traceback (most recent call last):<br>      File “&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;uwsgiconfig.py”, line 750, in <strong>init</strong><br>        gcc_version_components &#x3D; gcc_version.split(‘.’)<br>    AttributeError: ‘NoneType’ object has no attribute ‘split’<br>    During handling of the above exception, another exception occurred:<br>    Traceback (most recent call last):<br>      File “<string>“, line 1, in <module><br>      File “&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;setup.py”, line 143, in <module><br>        ‘Programming Language :: Python :: 3.11’,<br>      File “&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;setuptools&#x2F;<strong>init</strong>.py”, line 129, in setup<br>        return distutils.core.setup(**attrs)<br>      File “&#x2F;usr&#x2F;lib64&#x2F;python3.6&#x2F;distutils&#x2F;core.py”, line 148, in setup<br>        dist.run_commands()<br>      File “&#x2F;usr&#x2F;lib64&#x2F;python3.6&#x2F;distutils&#x2F;dist.py”, line 955, in run_commands<br>        self.run_command(cmd)<br>      File “&#x2F;usr&#x2F;lib64&#x2F;python3.6&#x2F;distutils&#x2F;dist.py”, line 974, in run_command<br>        cmd_obj.run()<br>      File “&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;setup.py”, line 77, in run<br>        conf &#x3D; uc.uConf(get_profile())<br>      File “&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;uwsgiconfig.py”, line 758, in <strong>init</strong><br>        raise Exception(“you need a C compiler to build uWSGI”)<br>    Exception: you need a C compiler to build uWSGI<br>    —————————————-<br>Command “&#x2F;usr&#x2F;bin&#x2F;python3 -u -c “import setuptools, tokenize;<strong>file</strong>&#x3D;’&#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;setup.py’;f&#x3D;getattr(tokenize, ‘open’, open)(<strong>file</strong>);code&#x3D;f.read().replace(‘\r\n’, ‘\n’);f.close();exec(compile(code, <strong>file</strong>, ‘exec’))” install –record &#x2F;tmp&#x2F;pip-2_lro4bs-record&#x2F;install-record.txt –single-version-externally-managed –compile” failed with error code 1 in &#x2F;tmp&#x2F;pip-build-8796okps&#x2F;uwsgi&#x2F;</p>
</blockquote>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@* ~]# yum -y install python3-devel</span><br><span class="line">[root@* ~]# yum -y installl gcc-c++</span><br></pre></td></tr></table></figure>
<p>安装好之后再pip安装uwsgi就没问题了。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>随笔</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows之应用安装程序 —— winget</title>
    <url>/2024/12/26/2024122602/</url>
    <content><![CDATA[<p>大家都用过Linux中的应用程序安装工具，如yum、apt、rpm等工具进行安装自己想要的一些工具或则软件之类的，当然Linux操作系统还是很强大的有很多类似的命令来安装我们所需要的程序，但是windwos有没有类似于windows这样的应用安装程序呢？想必大家看标题就能看的出来肯定是有的，那就是微软提供的<strong>winget</strong>官网提供的名称叫<strong>应用安装程序</strong>又叫<strong>windows程序包管理器</strong>，今天我们就来说一说这个windows版的命令程序安装工具，这个工具对于大家来说还是很合谐的，使用也是非常简单和Linux中的安装程序的工具很类似，只不过windows操作系统更注重于图形化操作，所以很少有人去注意或者关注命令行中的一些操作，这个也和windows操作系统闭源有很大一部分关系的，好了废话不多说了我们开始我们的<strong>winget</strong>之旅吧!</p>
<span id="more"></span>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>winget</strong>是一个综合的程序包管理器解决方案，由一个命令行工具和一组用于在 windwos上安装应用程序的服务组成。</p>
<p><strong>winget</strong>是一个用于自动安装、升级、配置和使用软件的系统或工具集。 大多数程序包管理器都是设计用于发现和安装开发人员工具。开发人员使用程序包管理器来指定先决条件，这些先决条件适用于为给定项目开发解决方案所需的工具。 然后，程序包管理器就会按照声明性说明来安装和配置这些工具。 程序包管理器可减少准备环境所需的时间，并有助于确保在计算机上安装相同版本的程序包。</p>
<p>除了上面说的微软还面向ISV（独立软件供应商）提供软件仓库，ISV可以将自己的工具或者应用程序的软件包上传到软件仓库，这个就类似于163源码包一样，不过在Linux中是任何人都可以做这个源码包仓库的，但在windows中就会出现类似于手机中的应用商城一样，自己有自己独家的软件包仓库并不统一，举个栗子：比如说我在小米商城里面没有办法下载华为商城里面的一些程序一样；这个算是微软的一个弊端吧，但是好处就是有一个统一的软件包仓库这样也是绝对安全的，接着来说这个软件仓库，这个软件仓库是微软在github中开通的一个仓库，可以提供用户下载程序和上传自己的应用程序。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>默认情况下<strong>winget</strong>对于win10或者win11的用户来说是不用自行安装的，是微软将此程序打包到windwos镜像中的，只要你安装好默认就会有的。可能部分版本也会出现没有的情况不过也没有关系，也可以额外进行安装的，下面我们就来说说如何进行安装。</p>
<h5 id="方式一：Microsoft-Store商城安装"><a href="#方式一：Microsoft-Store商城安装" class="headerlink" title="方式一：Microsoft Store商城安装"></a>方式一：Microsoft Store商城安装</h5><p>win10以上版本微软都会提供一个Microsoft Store商城的这样一个软件，这个是微软方便用户进行安装一些应用程序的，不过没有也没有关系，大家可以参考我下面的方式二进行安装。<br>Microsoft Store商城中安装<strong>winget</strong>步骤很简单的，只需要打开Microsoft Store商城搜索<strong>winget</strong>或者<strong>应用安装程序</strong>，搜索出来第一个就是，点击进行下载安装就可以了，Microsoft Store商城有一个很方便的地方就是他直接就是静默安装不需要你再去点很多下一步去完成安装操作了，下面是Microsoft Store商城搜索<strong>winget</strong>的截图。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5789447e00a47220b900a178087a8f5a.png) -->
<!-- <img src="5789447e00a47220b900a178087a8f5a.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/5789447e00a47220b900a178087a8f5a.png">'); </script><br>
<h5 id="方式二：官网安装"><a href="#方式二：官网安装" class="headerlink" title="方式二：官网安装"></a>方式二：官网安装</h5><p>第二种方式就从微软官网上去下载安装包，下载完成手动进行安装，这个适用于所有用户哦</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">winget下载地址：https://apps.microsoft.com/store/detail/%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/9NBLGGH4NNS1?hl=zh-cn&amp;gl=cn</span><br></pre></td></tr></table></figure>
<p>浏览器中输入上面网址打开就可以免费下载了</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/31b3d0d1901793244cf544f6af421001.png) -->
<!-- <img src="31b3d0d1901793244cf544f6af421001.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/31b3d0d1901793244cf544f6af421001.png">'); </script><br>
<p>安装的时候需要注意的是可能需要获取你的管理员权限，建议大家右键管理员权限进行运行。</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用的话也比较简单首先使用<strong>win + r</strong>快捷键调出运行窗口，在窗口中输入<strong>cmd</strong>，然后敲击回车你就会得到一个命令行窗口，<strong>winget</strong>的命令在这里就可以输入使用的，由于执行部分<strong>winget</strong>命令时需要管理员权限，建议使用管理员权限运行<strong>cmd</strong>命令行窗口。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/085ef799d71e8fcf0915610078abf287.png) -->
<!-- <img src="085ef799d71e8fcf0915610078abf287.png" alt="在这里插入图片描述"></img><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/085ef799d71e8fcf0915610078abf287.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/42c3b1e054cef5250887695b5bb378b2.png) -->
<!-- <img src="42c3b1e054cef5250887695b5bb378b2.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/42c3b1e054cef5250887695b5bb378b2.png">'); </script><br>
<p><strong>管理员权限运行：</strong><br>输入<strong>win</strong>快捷键同样输入<strong>cmd</strong>，然后找到<strong>cmd命令提示符</strong>右键以管理员身份打开即可这样你就获得了一个拥有管理员权限的命令行工具，这里是window的一个弊端，不像linux一样可以sudo直接以管理员权限执行，只能以管理员方式打开</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/39e4ea16540c37fb107bd69bc07d9f7b.png) -->
<!-- <img src="39e4ea16540c37fb107bd69bc07d9f7b.png" alt="在这里插入图片描述"></img><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/39e4ea16540c37fb107bd69bc07d9f7b.png">'); </script><br>
<p><strong>1.安装程序</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget install 软件包名称</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8d4b2a4181cb5ae17d6420eeebeae20d.png) -->
<!-- <img src="8d4b2a4181cb5ae17d6420eeebeae20d.png" alt="在这里插入图片描述"></im><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/8d4b2a4181cb5ae17d6420eeebeae20d.png">'); </script><br>
<p>上面截图是我安装了一个相应的程序，安装过程中会让你确认并同意软件厂商所提供的相关协议，这里你只需要输入<strong>y</strong>就可以了，他会先进行下载下载完成后启动安装程序，这个时候部分软件是有弹窗的，需要让你确认一些安装步骤之类的，基本很少，提示已成功安装就代表安装成功了，你可以使用命令来运行你安装的程序或者去开始菜单里面找你所安装的程序双击打开即可<br><strong>2.卸载程序</strong><br>卸载程序建议大家先把已安装的程序列出一下然后再进行卸载，除非你完全知道所需要卸载程序的名字，这个名字必须是完整的才可以，这一点微软做的就有点坑了，有时候还需要加上版本号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget list			//列出已安装的所有程序除系统所需程序或补丁包</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/fca54fc182521694ddde435d68fb6cba.png) -->
<!-- <img src="fca54fc182521694ddde435d68fb6cba.png" alt="在这里插入图片描述"></im><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/fca54fc182521694ddde435d68fb6cba.png">'); </script><br>
<p>列出之后我们就可以看到所有已安装的程序了，可以按照名称去查找一下，看看你所需要的卸载的程序名称或者ID，然后进行卸载就可以了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget uninstall 名称/ID</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/277083c1179e4692b5b717252e1053ff.png) -->
<!-- <img src="277083c1179e4692b5b717252e1053ff.png" alt="在这里插入图片描述"></im><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/277083c1179e4692b5b717252e1053ff.png">'); </script><br>
<p>首先他会先查找这个你所输入的程序名称或者ID是否存在，存在的话会启动程序包卸载程序来进行卸载，显示卸载成功就表示已经卸载成功了。<br><strong>3.查找软件</strong><br>在安装程序之前你可以先使用<strong>search</strong>来查找下你所要安装的程序在微软仓库中有没有相应的安装包，有的话你可以直接安装，没有那就需要你去软件官网下载安装程序再来进行安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget search 软件名称</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7a643a3a8bdc79f45ac0655162eb775b.png) -->
<!-- <img src="7a643a3a8bdc79f45ac0655162eb775b.png" alt="在这里插入图片描述"></im><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/7a643a3a8bdc79f45ac0655162eb775b.png">'); </script><br>
<p>上面截图里面是我想安装一个nginx，搜索之后是有的，但是这个软件包大家一定看清楚，他并不是一个nginx，只是nginx的一个替程序，他是一个WAMP，大家可以看下下面的截图，最终会安装一个laragon-wamp的程序</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/05da1f07cdb8bd61f618d10b6c9ddb04.png) -->
<!-- <img src="05da1f07cdb8bd61f618d10b6c9ddb04.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/05da1f07cdb8bd61f618d10b6c9ddb04.png">'); </script><br>
<p>所以说现在微软的安装包仓库里面程序并不是很全，大部分还是需要你去官网下载程序然后再来进行安装的，不过可以推荐类似的软件其实也是个很不错的功能，不像linux一样没有就是没有</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/51920d4627a54d8a58b11867bc3823e4.png) -->
<!-- <img src="51920d4627a54d8a58b11867bc3823e4.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/51920d4627a54d8a58b11867bc3823e4.png">'); </script><br>
<p>上面我又搜索了一个xmind的工具，他竟然真的有，很让人意外的<br><strong>4.查看可以升级的程序并进行升级</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget upgrade    //查看那些有最新的软件可以进行升级</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/872483b3842545eec22df207cc7fc628.png) -->
<!-- <img src="872483b3842545eec22df207cc7fc628.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/872483b3842545eec22df207cc7fc628.png">'); </script><br>
<p>显示出来的都是可以升级的软件了，下面同样可以使用<strong>upgrade</strong>来进行升级软件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget upgrade 软件包名称/ID</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/99a3f84151765ad16716d1dfeef3d9e8.png) -->
<!-- <img src="99a3f84151765ad16716d1dfeef3d9e8.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/99a3f84151765ad16716d1dfeef3d9e8.png">'); </script><br>
<p>这样就升级好啦。</p>
<h3 id="命令及参数"><a href="#命令及参数" class="headerlink" title="命令及参数"></a>命令及参数</h3><p>上面就是说了一些简单的例子，也是最常用的下面我们来具体说说每个命令所包含的参数之类的</p>
<h5 id="1-export"><a href="#1-export" class="headerlink" title="1. export"></a>1. export</h5><p><strong>export</strong>是一个导出当前应用的一个命令，可以把你电脑上的当前应用环境进行导出，导出后可以放到其他的电脑然后使用<strong>import</strong>进行导入，大部分用于还原环境使用，更适合开发人员使用，个人的话基本上没啥用，除非换电脑了要把程序啥的换到新电脑上，注意不是导出软件安装包哦。他导出的是一个json文件，下面来看看他的参数吧和使用方法吧</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">export</span> 参数		//导出命令</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-o，–output</td>
<td>要导出json文件的路径及名称</td>
</tr>
</tbody></table>
<p><strong>例子：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">export</span> -o \opt\abc.json</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/0ba3b1bd9bea95d262a382f48a388d45.png) -->
<!-- <img src="0ba3b1bd9bea95d262a382f48a388d45.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/0ba3b1bd9bea95d262a382f48a388d45.png">'); </script><br>
<p>对了忘记说一个前提了，大家也在上面截图里面看到了，因为这些程序都是我之前图形化安装的所以他是找不到安装源的，这样就会导不出来的，这一点很不友好<br><strong>选项：</strong><br>来看看<strong>export</strong>的选项有哪些吧</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-s，–source</td>
<td>选择导出从哪个源安装的，他的可选项有两个一个是msstore和winget</td>
</tr>
<tr>
<td>–include-versions</td>
<td>指定当前应用的版本</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受开源许可协议，这个就是为了避免提示你要不要接受</td>
</tr>
<tr>
<td>–verbose-logs</td>
<td>设置并创建详细的日志</td>
</tr>
</tbody></table>
<p>除了从旧版windows上导出之外，你还可以手动去编写json文件哦，json文件内容也比较简单只有4块内容：<br>1.源：是指的你即将安装的程序源仓库是在哪里<br>2.包：是指的你所需要安装的程序集<br>3.标识符：用于指定包的 Windows 程序包管理器包标识符<br>4.版本：你所要安装程序的版本号</p>
<h5 id="2-import"><a href="#2-import" class="headerlink" title="2. import"></a>2. import</h5><p>和<strong>import</strong>相对应得，是为了导入要安装的应用json文件，使用<strong>import</strong>可以批量进行安装程序啦</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget import 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-i，–import-file</td>
<td>指定要安装程序的json文件路径</td>
</tr>
</tbody></table>
<p><strong>例子：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget import -i c://demo/myfiles1.json</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/e0f0b535386668ebcec9ae78cc1e4c99.png) -->
<!-- <img src="e0f0b535386668ebcec9ae78cc1e4c99.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/e0f0b535386668ebcec9ae78cc1e4c99.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>–ignore-unavailable</td>
<td>所安装的程序不可用的时候不提示错误</td>
</tr>
<tr>
<td>–ignore-versions</td>
<td>忽略json中所写的版本号，可以安装最新版本</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>用于跳过接受源协议</td>
</tr>
<tr>
<td>–accept-package-agreements</td>
<td>用于跳过接受协议</td>
</tr>
<tr>
<td>–verbose-logs</td>
<td>生成详细日志</td>
</tr>
</tbody></table>
<h5 id="3-install"><a href="#3-install" class="headerlink" title="3. install"></a>3. install</h5><p><strong>install</strong>用来安装应用程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget install 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget install -q 软件包名称</span><br></pre></td></tr></table></figure>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/67e5d88f776c2454684f22ad501cbaa3.png) -->
<!-- <img src="67e5d88f776c2454684f22ad501cbaa3.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/67e5d88f776c2454684f22ad501cbaa3.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-m，–manifest</td>
<td>用于指定本地安装清单需要时YMAL文件</td>
</tr>
<tr>
<td>–id</td>
<td>指定程序ID进行安装</td>
</tr>
<tr>
<td>–name</td>
<td>安装时搜索现在为按名称进行搜索对应安装，有多个会列出让你选择进行重新执行命令</td>
</tr>
<tr>
<td>–moniker</td>
<td>按名字对象来进行搜索对应程序进行安装</td>
</tr>
<tr>
<td>-v，-version</td>
<td>指定版本号进行安装，不指定则安装最新版</td>
</tr>
<tr>
<td>-s，–source</td>
<td>用于指定安装源仓库</td>
</tr>
<tr>
<td>–scope</td>
<td>选择安装到哪里，可以是计算机也可以是某个用户</td>
</tr>
<tr>
<td>-a，–architecture</td>
<td>选择要安装的体系结构</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>使用精准匹配进行安装</td>
</tr>
<tr>
<td>-i，–interactive</td>
<td>进行交互式安装，但是有些程序为静默安装不可用</td>
</tr>
<tr>
<td>-h，–silent</td>
<td>选择静默安装，所有选择将为默认值</td>
</tr>
<tr>
<td>–locale</td>
<td>要使用的区域设置(BCP47 格式)，这个参数一直没弄明白，理解不了</td>
</tr>
<tr>
<td>-o，–log</td>
<td>选择安装日志存放位置</td>
</tr>
<tr>
<td>–override</td>
<td>覆盖待传递的参数至安装程序</td>
</tr>
<tr>
<td>-l，–location</td>
<td>设置安装路径</td>
</tr>
<tr>
<td>–force</td>
<td>覆盖安装程序哈希检查</td>
</tr>
<tr>
<td>–dependency-source</td>
<td>如果需要安装依赖包时，指定依赖包安装的源仓库</td>
</tr>
<tr>
<td>–accept-package-agreements</td>
<td>接受所有许可协议</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有源协议</td>
</tr>
<tr>
<td>-r，–rename</td>
<td>要重命名可执行文件的值</td>
</tr>
</tbody></table>
<h5 id="4-list"><a href="#4-list" class="headerlink" title="4.list"></a>4.list</h5><p>用于列出已安装的程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget list 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget list -q Edge</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/40b287bd84dbc4ae581e4cde02fa26c5.png) -->
<!-- <img src="40b287bd84dbc4ae581e4cde02fa26c5.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/40b287bd84dbc4ae581e4cde02fa26c5.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>–id</td>
<td>按照ID进行筛选</td>
</tr>
<tr>
<td>–name</td>
<td>按照名称进行筛选</td>
</tr>
<tr>
<td>–moniker</td>
<td>按照名字对象机械能筛选</td>
</tr>
<tr>
<td>-s，–source</td>
<td>指定安装源进行筛选</td>
</tr>
<tr>
<td>–tag</td>
<td>按照标签进行筛选</td>
</tr>
<tr>
<td>–command</td>
<td>按命令进行筛选，相对于linux的which</td>
</tr>
<tr>
<td>-n，–count</td>
<td>指定显示数量</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>用于精准匹配</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有开源协议</td>
</tr>
</tbody></table>
<h5 id="5-serch"><a href="#5-serch" class="headerlink" title="5.serch"></a>5.serch</h5><p>用于查找所需要的安装程序，可以用来判断仓库是否有这个程序，或查看程序的相关信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget search 参数 </span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7b89d0ef4c3e94bbbecf3f8942b41ebb.png) -->
<!-- <img src="7b89d0ef4c3e94bbbecf3f8942b41ebb.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/7b89d0ef4c3e94bbbecf3f8942b41ebb.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>参数</th>
</tr>
</thead>
<tbody><tr>
<td>–id</td>
<td>按照ID进行查找程序</td>
</tr>
<tr>
<td>–name</td>
<td>按照名称进行查找程序</td>
</tr>
<tr>
<td>–moniker</td>
<td>按照名字对象来查找程序</td>
</tr>
<tr>
<td>-s，–source</td>
<td>指定仓库来查找程序</td>
</tr>
<tr>
<td>–tag</td>
<td>按照标签来查找程序</td>
</tr>
<tr>
<td>–command</td>
<td>按照命令来查找程序</td>
</tr>
<tr>
<td>-n，–count</td>
<td>指定列出几行数据</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>使用精准匹配程序</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有开源协议</td>
</tr>
</tbody></table>
<h5 id="6-show"><a href="#6-show" class="headerlink" title="6.show"></a>6.show</h5><p>用于查看应用程序的详细信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget show 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget show -q Edge</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/053ddcad16d645fd973df90553c89916.png) -->
<!-- <img src="053ddcad16d645fd973df90553c89916.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/053ddcad16d645fd973df90553c89916.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-m，–manifest</td>
<td>用于指定本地安装清单需要时YMAL文件</td>
</tr>
<tr>
<td>–id</td>
<td>按照程序ID进行筛选</td>
</tr>
<tr>
<td>–name</td>
<td>按照程序名称进行筛选</td>
</tr>
<tr>
<td>–moniker</td>
<td>按照名字对象进行筛选</td>
</tr>
<tr>
<td>-v，–version</td>
<td>指定版本，默认为最新版</td>
</tr>
<tr>
<td>-s，–source</td>
<td>指定仓库进行筛选</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>进行精准匹配</td>
</tr>
<tr>
<td>–versions</td>
<td>显示程序可用的版本</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有开源协议</td>
</tr>
</tbody></table>
<h5 id="7-source"><a href="#7-source" class="headerlink" title="7.source"></a>7.source</h5><p>用于管理你的程序仓库，默认微软只提供两个<strong>msstore</strong>和<strong>winget</strong>这两个，你可以用<strong>source</strong>来添加你的源仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">source</span> 子命令 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>子命令：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>add</td>
<td>添加新的安装来源</td>
</tr>
<tr>
<td>list</td>
<td>列出所有安装来源</td>
</tr>
<tr>
<td>update</td>
<td>更新当前来源</td>
</tr>
<tr>
<td>remove</td>
<td>删除当前来源</td>
</tr>
<tr>
<td>reset</td>
<td>重置当前来源</td>
</tr>
<tr>
<td>export</td>
<td>导出当前来源</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">source</span> list		//列出当前来源</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/152eafc58a9e0b31796df820db51a77b.png) -->
<!-- <img src="152eafc58a9e0b31796df820db51a77b.png" alt="在这里插入图片描述"></p> -->
<script> document.write('<img src="'+ imgurl +'1735386360/152eafc58a9e0b31796df820db51a77b.png">'); </script><br>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">source</span> update		//更新当前来源</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/1a0303688f794b41596f38cf9e542ca8.png) -->
<!-- <img src="1a0303688f794b41596f38cf9e542ca8.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/1a0303688f794b41596f38cf9e542ca8.png">'); </script><br>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget <span class="built_in">source</span> reset --force 	//重置当前来源</span><br></pre></td></tr></table></figure>
<!-- ![**加粗样式**](https://i-blog.csdnimg.cn/blog_migrate/73929d7c8e973beab3ef15a970e6a4df.png) -->
<!-- <img src="73929d7c8e973beab3ef15a970e6a4df.png" alt="**加粗样式**"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/73929d7c8e973beab3ef15a970e6a4df.png">'); </script><br>
<p>这个命令需要管理员才能执行的</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f107b74b4ab597185a0825c3a587ed97.png) -->
<!-- <img src="f107b74b4ab597185a0825c3a587ed97.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/f107b74b4ab597185a0825c3a587ed97.png">'); </script><br>
<h5 id="8-uninstall"><a href="#8-uninstall" class="headerlink" title="8.uninstall"></a>8.uninstall</h5><p>用于卸载已安装的应用程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget uninstall 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget uninstall -q 程序名称</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5ed9268bc476a32e7f09879c145901a2.png) -->
<!-- <img src="5ed9268bc476a32e7f09879c145901a2.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/5ed9268bc476a32e7f09879c145901a2.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-m，–manifest</td>
<td>用于指定本地安装清单需要时YMAL文件</td>
</tr>
<tr>
<td>–id</td>
<td>按照程序ID进行筛选</td>
</tr>
<tr>
<td>–name</td>
<td>按照程序名称进行筛选</td>
</tr>
<tr>
<td>–moniker</td>
<td>按照名字对象进行筛选</td>
</tr>
<tr>
<td>-v，–version</td>
<td>指定版本，默认为最新版</td>
</tr>
<tr>
<td>-s，–source</td>
<td>指定仓库进行筛选</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>进行精准匹配</td>
</tr>
<tr>
<td>–versions</td>
<td>显示程序可用的版本</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有开源协议</td>
</tr>
<tr>
<td>–product-code</td>
<td>按照指定产品代码来查找</td>
</tr>
<tr>
<td>-i，–interactive</td>
<td>进行交互式卸载</td>
</tr>
<tr>
<td>-h，–silent</td>
<td>进行静默安装</td>
</tr>
<tr>
<td>–force</td>
<td>覆盖安装程序哈希检查</td>
</tr>
<tr>
<td>–purge</td>
<td>删除安装目录中的所有文件</td>
</tr>
<tr>
<td>–preserve</td>
<td>保留安装目录中的所有文件</td>
</tr>
<tr>
<td>-o，–log</td>
<td>指定卸载日志存放位置</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
</tbody></table>
<h5 id="9-upgrade"><a href="#9-upgrade" class="headerlink" title="9.upgrade"></a>9.upgrade</h5><p>用于升级应用程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget upgrade 参数</span><br></pre></td></tr></table></figure>
<p><strong>参数：</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-q，–query</td>
<td>用于搜索包进行查询</td>
</tr>
<tr>
<td>-h，–help</td>
<td>用于查询其他参数或选项</td>
</tr>
</tbody></table>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winget upgrade -q 程序名称		//升级所对应的程序</span><br></pre></td></tr></table></figure>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/986db5def34a595fbdc622ca6fc8c3b7.png) -->
<!-- <img src="986db5def34a595fbdc622ca6fc8c3b7.png" alt="在这里插入图片描述"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386360/986db5def34a595fbdc622ca6fc8c3b7.png">'); </script><br>
<p><strong>选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-m，–manifest</td>
<td>用于指定本地安装清单需要时YMAL文件</td>
</tr>
<tr>
<td>–id</td>
<td>按照程序ID进行筛选</td>
</tr>
<tr>
<td>–name</td>
<td>按照程序名称进行筛选</td>
</tr>
<tr>
<td>–moniker</td>
<td>按照名字对象进行筛选</td>
</tr>
<tr>
<td>-v，–version</td>
<td>指定版本，默认为最新版</td>
</tr>
<tr>
<td>-s，–source</td>
<td>指定仓库进行筛选</td>
</tr>
<tr>
<td>-e，–exact</td>
<td>进行精准匹配</td>
</tr>
<tr>
<td>-i，–interactive</td>
<td>进行交互式卸载</td>
</tr>
<tr>
<td>–versions</td>
<td>显示程序可用的版本</td>
</tr>
<tr>
<td>-h，–silent</td>
<td>进行静默安装</td>
</tr>
<tr>
<td>–purge</td>
<td>删除包目录中的所有文件和目录</td>
</tr>
<tr>
<td>-o，–log</td>
<td>指定卸载日志存放位置</td>
</tr>
<tr>
<td>–override</td>
<td>覆盖待传递的参数至安装程序</td>
</tr>
<tr>
<td>-l，–location</td>
<td>指定安装位置</td>
</tr>
<tr>
<td>–force</td>
<td>覆盖安装程序哈希检查</td>
</tr>
<tr>
<td>–accept-package-agreements</td>
<td>接受所有协议</td>
</tr>
<tr>
<td>–accept-source-agreements</td>
<td>接受所有开源协议</td>
</tr>
<tr>
<td>–header</td>
<td>可选的 Windows-Package-Manager REST 源 HTTP 标头</td>
</tr>
<tr>
<td>–all</td>
<td>升级所有可升级的程序</td>
</tr>
<tr>
<td>–include-unknown</td>
<td>即使无法确定其当前版本，也可升级包</td>
</tr>
</tbody></table>
<p>以上基本上就是比较常用的几个<strong>winget</strong>的参数或者选项了</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>来总结下吧也算是一个和linux系统的对比，在我使用的过程中发现用<strong>winget</strong>安装一些已知的程序的时候还是比较方便的，但是安装微软仓库里面没有的软件的时候就会很麻烦，有时候感觉还不如去官网下载再安装来的更直观更暴力一些，也可能是我刚入门的原因不知道用时间久了会怎么样，既然windows有了<strong>winget</strong>建议微软仓库的开源程序更多一点，或者网易或者阿里也能有一个<strong>winget</strong>的开源仓库，这样一个是可用有选择性另外一个就是可以不用再受github下载慢的问题了</p>
<p><strong>最后送给使用win11操作系统的部分用户一个小福利，大家可能很多笔记本电脑在升级完win11后风扇频繁转动的问题，我看网上好多人都提到了升级后风扇转的频繁了，我在官方售后那里了解到是因为win11用的是通用的主板驱动，需要更换驱动，这个方法我试过了但是问题依然存在，安装驱动的方式最后没能帮我解决问题，但是</strong>winget<strong>帮我解决了，我用</strong>winget<strong>发现有大量的程序在控制面版已经删除了，但是winget里面还依然存在，我把这些程序和没用不知道干啥的程序卸载之后以外的发现竟然风扇的问题解决了，已经不频繁转动了，可能是加载了太多没用程序的问题也可能是驱动的问题，这个说不清楚，大家如果有同样问题不妨试一试。好啦到这里结束啦</strong></p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>windwos</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次云主机如何挂载对象存储</title>
    <url>/2024/12/26/2024122603/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>随着云计算的发展，公有云成为中小型企业建设业务系统的首选，而对象存储则是存储里面必不可少的存储产品，对象存储不仅可以提供海量、高可靠、安全的服务，而且价格相对普通存储来说会便宜很多，并且不受带宽的限制，仅限于本地下载和上传的网速，对象存储应用场景更适用于静态网站托管、多媒体存储、数据备份等等应用场景；对象存储使用相对来说是比较简单的我这里就不重点说了；</p>
<span id="more"></span>
<p>为什么会有云主机挂载对象存储的需求呢？这个还要来源于业务系统的要求，正常来说对象存储基本上都提供S3的一个接口提供上传下载，更是各大云厂商都提供S3的工具，华为云的OBS Browser+以及移动云的S3 Browser等等，不过这些工具无法实现自动化的操作，你想自动化操作有两种方式一种是直接程序调用对象存储的S3接口，另一个方法就说直接将对象存储挂载为本地文件夹或映射为磁盘的方式进行操作，接下来我要说的就是如何将对象存储挂载到云主机，这次采用的是RCLONE这个管理工具，下面使用linux系统进行演示，windows其实和linux操作步骤几乎一致，不过参数可能多少有点不一样，后面也把windows的简单教程放到了最后。</p>
<hr>
<h1 id="一、RCLONE是什么？"><a href="#一、RCLONE是什么？" class="headerlink" title="一、RCLONE是什么？"></a>一、RCLONE是什么？</h1><p>Rclone是一款免费的云存储管理工具，能够像使用本地文件一样便捷的使用云存储，被誉为“云存储界的瑞士军刀”。<br>您可以使用Rclone工具，对对象存储进行数据导入、数据同步、迁移备份或者挂载等操作。<br>通过使用Rclone，您可以轻松的完成以下工作：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>概述</th>
</tr>
</thead>
<tbody><tr>
<td>数据导入</td>
<td>支持将存放在其它数据源上的数据导入到对象存储</td>
</tr>
<tr>
<td>数据同步</td>
<td>支持在对象存储不同的桶之间，或者对象存储和其它数据源之间进行数据同步</td>
</tr>
<tr>
<td>数据迁移备份</td>
<td>支持在对象存储不同的桶之间进行数据迁移、备份操作</td>
</tr>
<tr>
<td>挂载到本地磁盘</td>
<td>支持将对象存储挂载为本地磁盘，像操作本地文件一样，对云存储的数据进行操作</td>
</tr>
</tbody></table>
<h1 id="二、操作步骤"><a href="#二、操作步骤" class="headerlink" title="二、操作步骤"></a>二、操作步骤</h1><h2 id="1-下载和安装"><a href="#1-下载和安装" class="headerlink" title="1.下载和安装"></a>1.下载和安装</h2><p>下载链接：<a href="https://download.csdn.net/download/KH_FC/85448323">https://download.csdn.net/download/KH_FC/85448323</a></p>
<h2 id="2-配置对象存储数据源"><a href="#2-配置对象存储数据源" class="headerlink" title="2.配置对象存储数据源"></a>2.配置对象存储数据源</h2><pre><code>windows打开CMD程序执行窗口，输入rclone config命令执行
linux系统直接输入rclone config命令执行
</code></pre>
<p>执行后屏幕将显示如下的配置向导菜单，如果已有配置编辑输入“e”，如无配置新建配置输入“n”即可；我这里新建配置</p>
<pre><code>No remotes found - make a new one
n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
</code></pre>
<p>输入自定义的连接配置的别名后回车，此处以”test“为例：</p>
<pre><code>name&gt; EOS
</code></pre>
<p>选择存储类型，输入”s3“后回车：</p>
<pre><code>Option Storage.
Type of storage to configure.
Choose a number from below, or type in your own value.
 1 / 1Fichier
   \ (fichier)
 2 / Akamai NetStorage
   \ (netstorage)
 3 / Alias for an existing remote
   \ (alias)
 4 / Amazon Drive
   \ (amazon cloud drive)
 5 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, ChinaMobile, Digital Ocean, Dreamhost, IBM COS, Lyve Cloud, Minio, RackCorp, SeaweedFS, and Tencent COS
   \ (s3)
 6 / Backblaze B2
   \ (b2)
 7 / Better checksums for other remotes
   \ (hasher)
 8 / Box
   \ (box)
 9 / Cache a remote
   \ (cache)
10 / Citrix Sharefile
   \ (sharefile)
11 / Compress a remote
   \ (compress)
12 / Dropbox
   \ (dropbox)
13 / Encrypt/Decrypt a remote
   \ (crypt)
14 / Enterprise File Fabric
   \ (filefabric)
15 / FTP Connection
   \ (ftp)
16 / Google Cloud Storage (this is not Google Drive)
   \ (google cloud storage)
17 / Google Drive
   \ (drive)
18 / Google Photos
   \ (google photos)
19 / Hadoop distributed file system
   \ (hdfs)
20 / Hubic
   \ (hubic)
21 / In memory object storage system.
   \ (memory)
22 / Jottacloud
   \ (jottacloud)
23 / Koofr, Digi Storage and other Koofr-compatible storage providers
   \ (koofr)
24 / Local Disk
   \ (local)
25 / Mail.ru Cloud
   \ (mailru)
26 / Mega
   \ (mega)
27 / Microsoft Azure Blob Storage
   \ (azureblob)
28 / Microsoft OneDrive
   \ (onedrive)
29 / OpenDrive
   \ (opendrive)
30 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ (swift)
31 / Pcloud
   \ (pcloud)
32 / Put.io
   \ (putio)
33 / QingCloud Object Storage
   \ (qingstor)
34 / SSH/SFTP Connection
   \ (sftp)
35 / Sia Decentralized Cloud
   \ (sia)
36 / Storj Decentralized Cloud Storage
   \ (storj)
37 / Sugarsync
   \ (sugarsync)
38 / Transparently chunk/split large files
   \ (chunker)
39 / Union merges the contents of several upstream fs
   \ (union)
40 / Uptobox
   \ (uptobox)
41 / Webdav
   \ (webdav)
42 / Yandex Disk
   \ (yandex)
43 / Zoho
   \ (zoho)
44 / http Connection
   \ (http)
45 / premiumize.me
   \ (premiumizeme)
46 / seafile
   \ (seafile)
Storage&gt; s3
</code></pre>
<p>选择服务提供商，这个选择自己的对象存储云厂商即可，我这里采用的移动云的对象存储，所以选用”ChinaMobile“即可，输入”ChinaMobile“后回车：</p>
<pre><code>Option provider.
Choose your S3 provider.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
 1 / Amazon Web Services (AWS) S3
   \ (AWS)
 2 / Alibaba Cloud Object Storage System (OSS) formerly Aliyun
   \ (Alibaba)
 3 / Ceph Object Storage
   \ (Ceph)
 4 / China Mobile Ecloud Elastic Object Storage (EOS)
   \ (ChinaMobile)
 5 / Digital Ocean Spaces
   \ (DigitalOcean)
 6 / Dreamhost DreamObjects
   \ (Dreamhost)
 7 / IBM COS S3
   \ (IBMCOS)
 8 / Seagate Lyve Cloud
   \ (LyveCloud)
 9 / Minio Object Storage
   \ (Minio)
10 / Netease Object Storage (NOS)
   \ (Netease)
11 / RackCorp Object Storage
   \ (RackCorp)
12 / Scaleway Object Storage
   \ (Scaleway)
13 / SeaweedFS S3
   \ (SeaweedFS)
14 / StackPath Object Storage
   \ (StackPath)
15 / Storj (S3 Compatible Gateway)
   \ (Storj)
16 / Tencent Cloud Object Storage (COS)
   \ (TencentCOS)
17 / Wasabi Object Storage
   \ (Wasabi)
18 / Any other S3 compatible provider
   \ (Other)
provider&gt; ChinaMobile
</code></pre>
<p>选择是否开启验证，输入”false“后回车：</p>
<pre><code>Option env_auth.
Get AWS credentials from runtime (environment variables or EC2/ECS meta data if no env vars).
Only applies if access_key_id and secret_access_key is blank.
Choose a number from below, or type in your own boolean value (true or false).
Press Enter for the default (false).
 1 / Enter AWS credentials in the next step.
   \ (false)
 2 / Get AWS credentials from the environment (env vars or IAM).
   \ (true)
env_auth&gt; false
</code></pre>
<p>输入用户API认证信息中的AccessID，不同云厂商叫法不同华为云上面是使用AK&#x2F;SK，其实就是名字不同而已其实都是一样：</p>
<pre><code>Option access_key_id.
AWS Access Key ID.
Leave blank for anonymous access or runtime credentials.	
Enter a value. Press Enter to leave empty.
access_key_id&gt; AccessID
</code></pre>
<p>输入用户API认证信息中的AccessSecretKey，这里就是指的AK&#x2F;SK，这个是成对出现的：</p>
<pre><code>Option secret_access_key.
AWS Secret Access Key (password).
Leave blank for anonymous access or runtime credentials.
Enter a value. Press Enter to leave empty.
secret_access_key&gt; AccessSecretKey
</code></pre>
<p>选择对象存储服务接口地址，这个接口地址是指的云厂商所提供的对象存储接口地址，这个云厂商一般按照资源池来定的，输入对应的数字后回车即可，我这里是移动云的，选择不同的就会出现不同的地址：</p>
<pre><code>Option endpoint.
Endpoint for China Mobile Ecloud Elastic Object Storage (EOS) API.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
   / The default endpoint - a good choice if you are unsure.
 1 | East China (Suzhou)
   \ (eos-wuxi-1.cmecloud.cn)
 2 / East China (Jinan)
   \ (eos-jinan-1.cmecloud.cn)
 3 / East China (Hangzhou)
   \ (eos-ningbo-1.cmecloud.cn)
 4 / East China (Shanghai-1)
   \ (eos-shanghai-1.cmecloud.cn)
 5 / Central China (Zhengzhou)
   \ (eos-zhengzhou-1.cmecloud.cn)
 6 / Central China (Changsha-1)
   \ (eos-hunan-1.cmecloud.cn)
 7 / Central China (Changsha-2)
   \ (eos-zhuzhou-1.cmecloud.cn)
 8 / South China (Guangzhou-2)
   \ (eos-guangzhou-1.cmecloud.cn)
 9 / South China (Guangzhou-3)
   \ (eos-dongguan-1.cmecloud.cn)
10 / North China (Beijing-1)
   \ (eos-beijing-1.cmecloud.cn)
11 / North China (Beijing-2)
   \ (eos-beijing-2.cmecloud.cn)
12 / North China (Beijing-3)
   \ (eos-beijing-4.cmecloud.cn)
13 / North China (Huhehaote)
   \ (eos-huhehaote-1.cmecloud.cn)
14 / Southwest China (Chengdu)
   \ (eos-chengdu-1.cmecloud.cn)
15 / Southwest China (Chongqing)
   \ (eos-chongqing-1.cmecloud.cn)
16 / Southwest China (Guiyang)
   \ (eos-guiyang-1.cmecloud.cn)
17 / Nouthwest China (Xian)
   \ (eos-xian-1.cmecloud.cn)
18 / Yunnan China (Kunming)
   \ (eos-yunnan.cmecloud.cn)
19 / Yunnan China (Kunming-2)
   \ (eos-yunnan-2.cmecloud.cn)
20 / Tianjin China (Tianjin)
   \ (eos-tianjin-1.cmecloud.cn)
21 / Jilin China (Changchun)
   \ (eos-jilin-1.cmecloud.cn)
22 / Hubei China (Xiangyan)
   \ (eos-hubei-1.cmecloud.cn)
23 / Jiangxi China (Nanchang)
   \ (eos-jiangxi-1.cmecloud.cn)
24 / Gansu China (Lanzhou)
   \ (eos-gansu-1.cmecloud.cn)
25 / Shanxi China (Taiyuan)
   \ (eos-shanxi-1.cmecloud.cn)
26 / Liaoning China (Shenyang)
   \ (eos-liaoning-1.cmecloud.cn)
27 / Hebei China (Shijiazhuang)
   \ (eos-hebei-1.cmecloud.cn)
28 / Fujian China (Xiamen)
   \ (eos-fujian-1.cmecloud.cn)
29 / Guangxi China (Nanning)
   \ (eos-guangxi-1.cmecloud.cn)
30 / Anhui China (Huainan)
   \ (eos-anhui-1.cmecloud.cn)
endpoint&gt; 1
</code></pre>
<p>选择”location_constraint“，需要与之前的对象存储服务接口地址保持一致，一般这里让你选择你对象存储所存在的资源池，输入对应的数字后回车：</p>
<pre><code>Option location_constraint.
Location constraint - must match endpoint.
Used when creating buckets only.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
 1 / East China (Suzhou)
   \ (wuxi1)
 2 / East China (Jinan)
   \ (jinan1)
 3 / East China (Hangzhou)
   \ (ningbo1)
 4 / East China (Shanghai-1)
   \ (shanghai1)
 5 / Central China (Zhengzhou)
   \ (zhengzhou1)
 6 / Central China (Changsha-1)
   \ (hunan1)
 7 / Central China (Changsha-2)
   \ (zhuzhou1)
 8 / South China (Guangzhou-2)
   \ (guangzhou1)
 9 / South China (Guangzhou-3)
   \ (dongguan1)
10 / North China (Beijing-1)
   \ (beijing1)
11 / North China (Beijing-2)
   \ (beijing2)
12 / North China (Beijing-3)
   \ (beijing4)
13 / North China (Huhehaote)
   \ (huhehaote1)
14 / Southwest China (Chengdu)
   \ (chengdu1)
15 / Southwest China (Chongqing)
   \ (chongqing1)
16 / Southwest China (Guiyang)
   \ (guiyang1)
17 / Nouthwest China (Xian)
   \ (xian1)
18 / Yunnan China (Kunming)
   \ (yunnan)
19 / Yunnan China (Kunming-2)
   \ (yunnan2)
20 / Tianjin China (Tianjin)
   \ (tianjin1)
21 / Jilin China (Changchun)
   \ (jilin1)
22 / Hubei China (Xiangyan)
   \ (hubei1)
23 / Jiangxi China (Nanchang)
   \ (jiangxi1)
24 / Gansu China (Lanzhou)
   \ (gansu1)
25 / Shanxi China (Taiyuan)
   \ (shanxi1)
26 / Liaoning China (Shenyang)
   \ (liaoning1)
27 / Hebei China (Shijiazhuang)
   \ (hebei1)
28 / Fujian China (Xiamen)
   \ (fujian1)
29 / Guangxi China (Nanning)
   \ (guangxi1)
30 / Anhui China (Huainan)
   \ (anhui1)
location_constraint&gt; 1	
</code></pre>
<p>输入默认权限，一般设置成公共可读写即可：</p>
<pre><code>Option acl.
Canned ACL used when creating buckets and storing or copying objects.
This ACL is used for creating objects and if bucket_acl isn&#39;t set, for creating buckets too.
For more info visit https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl
Note that this ACL is applied when server-side copying objects as S3
doesn&#39;t copy the ACL from the source but rather writes a fresh one.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
   / Owner gets FULL_CONTROL.
 1 | No one else has access rights (default).
   \ (private)
   / Owner gets FULL_CONTROL.
 2 | The AllUsers group gets READ access.
   \ (public-read)
   / Owner gets FULL_CONTROL.
 3 | The AllUsers group gets READ and WRITE access.
   | Granting this on a bucket is generally not recommended.
   \ (public-read-write)
   / Owner gets FULL_CONTROL.
 4 | The AuthenticatedUsers group gets READ access.
   \ (authenticated-read)
acl&gt; public-read-write
</code></pre>
<p>选择服务端加密方式，不使用该功能时直接回车：</p>
<pre><code>Option server_side_encryption.
The server-side encryption algorithm used when storing this object in S3.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
 1 / None
   \ ()
 2 / AES256
   \ (AES256)
server_side_encryption&gt;
</code></pre>
<p>选择上传对象的默认存储类型，不选择时默认使用桶的存储类型：</p>
<pre><code>Option storage_class.
The storage class to use when storing new objects in ChinaMobile.
Choose a number from below, or type in your own value.
Press Enter to leave empty.
 1 / Default
   \ ()
 2 / Standard storage class
   \ (STANDARD)
 3 / Archive storage mode
   \ (GLACIER)
 4 / Infrequent access storage mode
   \ (STANDARD_IA)
storage_class&gt;
</code></pre>
<p>选择是否设置进阶配置，这里不设置，直接回车：</p>
<pre><code>Edit advanced config?
y) Yes
n) No (default)
y/n&gt;
</code></pre>
<p>确认刚才配置的连接信息，确认无误后输入”y“后回车，保存配置：</p>
<pre><code>--------------------
[EOS]
type = s3
provider = ChinaMobile
access_key_id = AccessID
secret_access_key = AccessSecretKey
endpoint = eos-wuxi-1.cmecloud.cn
location_constraint = wuxi1
acl = private
--------------------
y) Yes this is OK (default)
e) Edit this remote
d) Delete this remote
y/e/d&gt; y
</code></pre>
<p>此时回到了配置向导的初始菜单，刚才的配置会显示出来，可继续执行创建新的配置（输入“n”）、编辑已有的配置（输入“e”）、删除配置（输入“d”）等操作，或者完成配置向导退出（输入“q”）：</p>
<pre><code>Current remotes:

Name                 Type
====                 ====
EOS                  s3

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt;		
</code></pre>
<p>到这里配置文件配置已经完成了。</p>
<hr>
<h2 id="3-挂载到操作系统"><a href="#3-挂载到操作系统" class="headerlink" title="3.挂载到操作系统"></a>3.挂载到操作系统</h2><h3 id="3-1-挂载到windows操作系统"><a href="#3-1-挂载到windows操作系统" class="headerlink" title="3.1.挂载到windows操作系统"></a>3.1.挂载到windows操作系统</h3><p>安装依赖软件：WINFSP<br>下载地址：<a href="https://ecloud.10086.cn/op-help-center/doc/article/resource/file/ced6e21813cf60f2828cfc1eb0f5993325f4da56564b5afd1fdfa244830573db">https://ecloud.10086.cn/op-help-center/doc/article/resource/file/ced6e21813cf60f2828cfc1eb0f5993325f4da56564b5afd1fdfa244830573db</a><br>下载好后直接双运行即可，安装也是按照默认的选项走就可以的</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/89e3c845dd1a98ee3537178f57441ae6.png) -->
<!-- <img src="89e3c845dd1a98ee3537178f57441ae6.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386513/89e3c845dd1a98ee3537178f57441ae6.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8d1180285add33eb194a216ebcc24322.png) -->
<!-- <img src="8d1180285add33eb194a216ebcc24322.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386513/8d1180285add33eb194a216ebcc24322.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/0cf3e3b1fe1b78afd8d50f15f56dd29c.png) -->
<!-- <img src="0cf3e3b1fe1b78afd8d50f15f56dd29c.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386513/0cf3e3b1fe1b78afd8d50f15f56dd29c.png">'); </script>>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/6a8b7909a0d424d6768909e298f55367.png) -->
<!-- <img src="6a8b7909a0d424d6768909e298f55367.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386513/6a8b7909a0d424d6768909e298f55367.png">'); </script>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/41e5982e6bfebb75988936b73114a387.png) -->
<!-- <img src="41e5982e6bfebb75988936b73114a387.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386513/41e5982e6bfebb75988936b73114a387.png">'); </script>
<p>一步步安装完成即可；<br>下面就是挂载对象存储了，挂载也比较简单一条命令搞定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone mount 配置文件名称:桶名称 挂载路径  --cache-dir 缓存路径 --vfs-cache-mode writes</span><br></pre></td></tr></table></figure>
<p>输入敲回车即可，你会发现对象存储已经挂载到了你想要的挂载目录上面了，这样就可以上传下载文件了</p>
<h3 id="3-2-挂载到linux操作系统"><a href="#3-2-挂载到linux操作系统" class="headerlink" title="3.2.挂载到linux操作系统"></a>3.2.挂载到linux操作系统</h3><p>安装依赖软件：FUSE<br>centos安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install fuse</span><br></pre></td></tr></table></figure>
<p>ubuntu安装:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt -y insyall fuse</span><br></pre></td></tr></table></figure>
<p>等待安装完成即可，下面就是挂载对象存储了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建挂载路径</span></span><br><span class="line"><span class="built_in">mkdir</span> -p 挂载目录</span><br><span class="line">rclone mount 配置文件名称:桶名称 挂载路径 --daemon --allow-other  --cache-dir 缓存路径 --vfs-cache-mode writes</span><br></pre></td></tr></table></figure>
<p>执行即可</p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><pre><code>1. 需要注意缓存可能会和你上传文件的大小一样，默认缓存保存时间为1小时，如果需要设置缓存时间你可以加”--vfs-cache-max-age“参数设置缓存时间
2. 如果需要删除桶中的对象，建议从系统中删除，如果在对象存储控制台删除的话，会出现所挂载的目录中还是有这个文件的问题
</code></pre>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次MySql重置root密码无效</title>
    <url>/2024/12/26/2024122604/</url>
    <content><![CDATA[<p>说起这个事情吧也相对来说比较尴尬，对于一个技术来说忘记密码然后找回密码都是相当简单的一个事情，但是在生产环境中没有保存记录只能是自己的失职，尴尬就尴尬在明明重置成功了却没有生效，弄得好几个工程师在哪里挠头！！！也是经过不断得摸索测试方案最后也是解决了这个问题，下面就简单跟大家分享一下：</p>
<span id="more"></span>

<h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><p>这个场景比较简单，因为我们是测试环境嘛，所以也就只有一台MySql数据库，只需要对这个数据库进行密码修改就可以了，而且也不用担心搞坏得问题，再一个最最最最重要得就是它可以随时进行重启，不需要考虑业务情况，当然在生产环境大家一定要考虑时间空档期，不然数据丢失就很麻烦了，而且操作的又是数据库，就相当于在脑袋上开刀一样，废话不多说了下面是环境情况：</p>
<pre><code>操作系统：windows server 2019 数据中心版本
MySql：经典安装 MySql 5.6
</code></pre>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/adc0cec69a1b268423abba6afa6f88bb.png) -->
<!-- <img src="adc0cec69a1b268423abba6afa6f88bb.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/adc0cec69a1b268423abba6afa6f88bb.png">'); </script><br>
<hr>
<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>问题就是：使用–skip-grant-tables跳过权限，然后使用update修改root密码后，使用 FLUSH PRIVILEGES;刷新，使用新密码连接mysql提示密码错误，无非登录</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f577016eaf04b4670dab0fada53bd6ae.png) -->
<!-- <img src="f577016eaf04b4670dab0fada53bd6ae.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/f577016eaf04b4670dab0fada53bd6ae.png">'); </script><br>
<p>下面是我重置密码的过程，大家也可以参考下，看看是不是有忽略的地方</p>
<ol>
<li>停止mysql服务<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/b4f221877d127af829b7d5d5f7eb5aa4.png) -->
<!-- <img src="b4f221877d127af829b7d5d5f7eb5aa4.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/b4f221877d127af829b7d5d5f7eb5aa4.png">'); </script><br></li>
<li>使用–skip-grant-tables跳过权限启动<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/406895f482900fd60c3082ed9bd195d2.png) -->
<!-- <img src="ad7a6b8eedb1f366a30f9104dcdd7400.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/ad7a6b8eedb1f366a30f9104dcdd7400.png">'); </script><br></li>
<li>登录并修改密码<br><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/565bb2dad19f3ca10c666fece44220a5.png) -->
<!-- <img src="565bb2dad19f3ca10c666fece44220a5.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/565bb2dad19f3ca10c666fece44220a5.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/ad7a6b8eedb1f366a30f9104dcdd7400.png) -->
<!-- <img src="ad7a6b8eedb1f366a30f9104dcdd7400.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/ad7a6b8eedb1f366a30f9104dcdd7400.png">'); </script><br></li>
<li>关闭mysql进程及命令行窗口，重新启动mysql服务，尝试登陆<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/77e46f8ca283590c7ce4636e2864ccd6.png) -->
<!-- <img src="77e46f8ca283590c7ce4636e2864ccd6.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/77e46f8ca283590c7ce4636e2864ccd6.png">'); </script><br/></li>
<li>尝试登陆<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/2987e9664d74889d50c2ac21567a0338.png) -->
<!-- <img src="2987e9664d74889d50c2ac21567a0338.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/2987e9664d74889d50c2ac21567a0338.png">'); </script><br>
明明密码修改成功了，密码也输入成功了，结果却在登陆的时候无发登陆成功</li>
</ol>
<hr>
<h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p>经我们几个人的不断测试，不断尝试，最终发现由于–skip-grant-tables这个参数造成的，其实说白了这个就是启动时生效了但是没有指定mysql的配置文件，所以这个模式下的所有操作都是无效的，设置成功了也不会修改真正的数据库文件的，也就是你把这个进程关掉了，他自己也就把数据还原回之前的了，这个跟mysql的安装方式也有关的，采用mysql免安装版本用以上操作就可以生效，但是按照版本就无法生效的，我已经尝试多个版本都是这样。<br>也可能不是这个原因，有异议的小伙伴欢迎大家留言一起探讨哦<br>下面是需要修改的跳过权限启动的命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld.exe --defaults-file=<span class="string">&quot;my.ini路径&quot;</span> --skip-grant-tables</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><ol>
<li>正常关闭mysql服务<br><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/2ccd4aa9daf8eef12a0377f38f7656c1.png) -->
<!-- <img src="2ccd4aa9daf8eef12a0377f38f7656c1.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/2ccd4aa9daf8eef12a0377f38f7656c1.png">'); </script><br/></li>
<li>设置跳过权限启动mysql（这里是和之前操作不一样的地方）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld.exe --defaults-file=<span class="string">&quot;C:\ProgramData\MySQL\MySQL Server 5.6\my.ini&quot;</span> --skip-grant-tables</span><br></pre></td></tr></table></figure>
–defaults-file&#x3D;”C:\ProgramData\MySQL\MySQL Server 5.6\my.ini”  &#x2F;&#x2F;这个直接在服务中找到mysql服务，右键属性就可以看到这个路径了</li>
</ol>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/d382080d9c5007ef8b85906abdf81826.png) -->
<!-- <img src="d382080d9c5007ef8b85906abdf81826.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386592/d382080d9c5007ef8b85906abdf81826.png">'); </script><br>
<p>前面是mysqld的启动程序位置，后面是指定mysql的配置文件也就是my.ini文件</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/93af8f80d5c0907f823470a99ced4fde.png) -->
<!-- <img src="93af8f80d5c0907f823470a99ced4fde.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/93af8f80d5c0907f823470a99ced4fde.png">'); </script><br>
<p>启动成功<br>3. 修改密码<br>开启新命令行窗口，连接mysql</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/cb733657de6e9bb6d95294ab16586e50.png) -->
<!-- <img src="cb733657de6e9bb6d95294ab16586e50.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/cb733657de6e9bb6d95294ab16586e50.png">'); </script><br>
<p>连接成功<br>修改密码</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/71ecbfb68c8bc5de4c00a0aa71ab8807.png) -->
<!-- <img src="71ecbfb68c8bc5de4c00a0aa71ab8807.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/71ecbfb68c8bc5de4c00a0aa71ab8807.png">'); </script><br>
<p>修改成功，退出登陆，重启mysql服务</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/9ec6c2a8c8fb2bb0e3c6b5db092f3684.png) -->
<!-- <img src="9ec6c2a8c8fb2bb0e3c6b5db092f3684.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/9ec6c2a8c8fb2bb0e3c6b5db092f3684.png">'); </script><br>
<ol start="4">
<li>尝试登陆<br>启动成功，尝试使用新密码进行登陆<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c8f33fbe02dc4c539c34ee4687119d31.png) -->
<!-- <img src="c8f33fbe02dc4c539c34ee4687119d31.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386592/c8f33fbe02dc4c539c34ee4687119d31.png">'); </script><br>
发现已经连接成功</li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>入门级别 Nginx 常用配置清单</title>
    <url>/2024/12/26/2024122605/</url>
    <content><![CDATA[<p>本文为转发文章，转发来自“<a href="https://mp.weixin.qq.com/s/ipUHaFPcDfIM9MsyqDGSEg%E2%80%9D%EF%BC%8C%E8%A7%89%E5%BE%97%E4%B8%8D%E9%94%99%E5%88%86%E4%BA%AB%E7%BB%99%E5%A4%A7%E5%AE%B6">https://mp.weixin.qq.com/s/ipUHaFPcDfIM9MsyqDGSEg”，觉得不错分享给大家</a><br>Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP&#x2F;POP3&#x2F;SMTP 服务，其因丰富的功能集、稳定性、示例配置文件和低系统资源的消耗受到了开发者的欢迎。本文，我们总结了一些常用的 Nginx 配置代码，希望对大家有所帮助。</p>
<span id="more"></span>
<p><strong>侦听端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  <span class="comment"># Standard HTTP Protocol</span></span><br><span class="line">  listen 80;</span><br><span class="line">  <span class="comment"># Standard HTTPS Protocol</span></span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  <span class="comment"># For http2</span></span><br><span class="line">  listen 443 ssl http2;</span><br><span class="line">  <span class="comment"># Listen on 80 using IPv6</span></span><br><span class="line">  listen [::]:80;</span><br><span class="line">  <span class="comment"># Listen only on using IPv6</span></span><br><span class="line">  listen [::]:80 ipv6only=on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>访问日志</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  <span class="comment"># Relative or full path to log file</span></span><br><span class="line">  access_log /path/to/file.log;</span><br><span class="line">  <span class="comment"># Turn &#x27;on&#x27; or &#x27;off&#x27;</span></span><br><span class="line">  access_log on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>域名</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  <span class="comment"># Listen to yourdomain.com</span></span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  <span class="comment"># Listen to multiple domains</span></span><br><span class="line">  server_name yourdomain.com www.yourdomain.com;</span><br><span class="line">  <span class="comment"># Listen to all domains</span></span><br><span class="line">  server_name *.yourdomain.com;</span><br><span class="line">  <span class="comment"># Listen to all top-level domains</span></span><br><span class="line">  server_name yourdomain.*;</span><br><span class="line">  <span class="comment"># Listen to unspecified Hostnames (Listens to IP address itself)</span></span><br><span class="line">  server_name <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <strong>静态资源</strong><br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">          root /path/to/website;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> <strong>重定向</strong><br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.yourdomain.com;</span><br><span class="line">  <span class="built_in">return</span> 301 http://yourdomain.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name www.yourdomain.com;</span><br><span class="line">  location /redirect-url &#123;</span><br><span class="line">     <span class="built_in">return</span> 301 http://otherdomain.com;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> <strong>反向代理</strong><br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">     proxy_pass http://0.0.0.0:3000;</span><br><span class="line">     <span class="comment"># where 0.0.0.0:3000 is your application server (Ex: node.js) bound on 0.0.0.0 listening on port 3000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> <strong>负载均衡</strong><br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> upstream node_js &#123;</span><br><span class="line">  server 0.0.0.0:3000;</span><br><span class="line">  server 0.0.0.0:4000;</span><br><span class="line">  server 123.131.121.122;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">     proxy_pass http://node_js;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> <strong>SSL 协议</strong><br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl;</span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate /path/to/cert.pem;</span><br><span class="line">  ssl_certificate_key /path/to/privatekey.pem;</span><br><span class="line">  ssl_stapling on;</span><br><span class="line">  ssl_stapling_verify on;</span><br><span class="line">  ssl_trusted_certificate /path/to/fullchain.pem;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_session_timeout 1h;</span><br><span class="line">  ssl_session_cache shared:SSL:50m;</span><br><span class="line">  add_header Strict-Transport-Security max-age=15768000;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># Permanent Redirect for HTTP to HTTPS</span></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name yourdomain.com;</span><br><span class="line">  <span class="built_in">return</span> 301 https://$host<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>windows涉及所有协议及默认端口</title>
    <url>/2024/12/26/2024122606/</url>
    <content><![CDATA[<p>记录了一些windwos常见和不常见的端口，可能有些服务或者协议说明不准确或不正确，也在努力学习中，大家有发现不正确的请及时告诉我哦！我这边及时改正以免错误引导其他同学。</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>名称</th>
<th>协议</th>
<th>端口</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>echo</td>
<td>tcp&#x2F;udp</td>
<td>7</td>
<td>echo服务</td>
</tr>
<tr>
<td>discard</td>
<td>tcp&#x2F;udp</td>
<td>9</td>
<td>用于连接测试的空服务</td>
</tr>
<tr>
<td>systat</td>
<td>tcp&#x2F;udp</td>
<td>11</td>
<td>链接端口系统状态</td>
</tr>
<tr>
<td>daytime</td>
<td>tcp&#x2F;udp</td>
<td>13</td>
<td>给请求主机发送时间</td>
</tr>
<tr>
<td>qotd</td>
<td>tcp&#x2F;udp</td>
<td>17</td>
<td>给请求主机发送格言</td>
</tr>
<tr>
<td>chargen</td>
<td>tcp&#x2F;udp</td>
<td>19</td>
<td>字符生成服务</td>
</tr>
<tr>
<td>ftp-data</td>
<td>tcp</td>
<td>20</td>
<td>ftp数据端口</td>
</tr>
<tr>
<td>ftp</td>
<td>tcp</td>
<td>21</td>
<td>ftp文件传输</td>
</tr>
<tr>
<td>ssh</td>
<td>tcp</td>
<td>22</td>
<td>ssh远程连接</td>
</tr>
<tr>
<td>telnet</td>
<td>tcp</td>
<td>23</td>
<td>telnet远程连接</td>
</tr>
<tr>
<td>smtp</td>
<td>tcp</td>
<td>25</td>
<td>smtp邮件传输协议</td>
</tr>
<tr>
<td>time</td>
<td>tcp&#x2F;udp</td>
<td>37</td>
<td>时间协议</td>
</tr>
<tr>
<td>rlp</td>
<td>udp</td>
<td>39</td>
<td>资源定位协议</td>
</tr>
<tr>
<td>nameserver</td>
<td>tcp&#x2F;udp</td>
<td>42</td>
<td>名称服务协议</td>
</tr>
<tr>
<td>nicname</td>
<td>tcp</td>
<td>43</td>
<td>whois目录服务</td>
</tr>
<tr>
<td>domain</td>
<td>tcp&#x2F;udp</td>
<td>53</td>
<td>域名服务</td>
</tr>
<tr>
<td>bootps</td>
<td>udp</td>
<td>67</td>
<td>引导协议（BOOTP）服务</td>
</tr>
<tr>
<td>bootpc</td>
<td>udp</td>
<td>68</td>
<td>Bootstrap（BOOTP）客户</td>
</tr>
<tr>
<td>tftp</td>
<td>udp</td>
<td>69</td>
<td>tftp文件传输协议</td>
</tr>
<tr>
<td>gopher</td>
<td>tcp</td>
<td>70</td>
<td>文档搜索检索服务</td>
</tr>
<tr>
<td>finger</td>
<td>tcp</td>
<td>79</td>
<td>用于用户联系信息的 Finger 服务</td>
</tr>
<tr>
<td>http</td>
<td>tcp</td>
<td>80</td>
<td>http协议</td>
</tr>
<tr>
<td>hosts2-ns</td>
<td>tcp&#x2F;udp</td>
<td>81</td>
<td>名称服务协议2</td>
</tr>
<tr>
<td>kerberos</td>
<td>tcp&#x2F;udp</td>
<td>88</td>
<td>kerberos</td>
</tr>
<tr>
<td>hostname</td>
<td>tcp</td>
<td>101</td>
<td>SRI-NIC 机器上的主机名服务</td>
</tr>
<tr>
<td>iso-tsap</td>
<td>tcp</td>
<td>102</td>
<td>ISO 开发环境（ISODE）网络应用</td>
</tr>
<tr>
<td>rtelnet</td>
<td>tcp</td>
<td>107</td>
<td>远程 Telnet</td>
</tr>
<tr>
<td>pop2</td>
<td>tcp</td>
<td>109</td>
<td>邮局协议版本2</td>
</tr>
<tr>
<td>pop3</td>
<td>tcp</td>
<td>110</td>
<td>邮局协议版本3</td>
</tr>
<tr>
<td>sunrpc</td>
<td>tcp&#x2F;udp</td>
<td>111</td>
<td>RPC协议</td>
</tr>
<tr>
<td>auth</td>
<td>tcp</td>
<td>113</td>
<td>验证和身份识别协议</td>
</tr>
<tr>
<td>uucp-path</td>
<td>tcp</td>
<td>117</td>
<td>UUCP服务</td>
</tr>
<tr>
<td>sqlserv</td>
<td>tcp</td>
<td>118</td>
<td>sqlserver服务</td>
</tr>
<tr>
<td>nntp</td>
<td>tcp</td>
<td>119</td>
<td>网络新闻传输协议</td>
</tr>
<tr>
<td>ntp</td>
<td>udp</td>
<td>123</td>
<td>网络时间协议</td>
</tr>
<tr>
<td>epmap</td>
<td>tcp&#x2F;udp</td>
<td>135</td>
<td>epmap服务</td>
</tr>
<tr>
<td>netbios-ns</td>
<td>tcp&#x2F;udp</td>
<td>137</td>
<td>NETBIOS 名称服务</td>
</tr>
<tr>
<td>netbios-dgm</td>
<td>udp</td>
<td>138</td>
<td>NETBIOS 名称服务</td>
</tr>
<tr>
<td>netbios-ssn</td>
<td>tcp</td>
<td>139</td>
<td>NET BIOS 会话服务</td>
</tr>
<tr>
<td>imap</td>
<td>tcp</td>
<td>143</td>
<td>imap4邮件协议</td>
</tr>
<tr>
<td>sql-net</td>
<td>tcp</td>
<td>150</td>
<td>sqlnat协议</td>
</tr>
<tr>
<td>sqlsrv</td>
<td>tcp</td>
<td>156</td>
<td>sqlserver传输协议</td>
</tr>
<tr>
<td>pcmail-srv</td>
<td>tcp</td>
<td>158</td>
<td>PCMail 服务</td>
</tr>
<tr>
<td>snmp</td>
<td>udp</td>
<td>161</td>
<td>SNMP 协议</td>
</tr>
<tr>
<td>snmptrap</td>
<td>udp</td>
<td>162</td>
<td>snmp-trap  协议</td>
</tr>
<tr>
<td>print-srv</td>
<td>tcp</td>
<td>170</td>
<td>网络打印机服务</td>
</tr>
<tr>
<td>bgp</td>
<td>tcp</td>
<td>179</td>
<td>边界路由协议</td>
</tr>
<tr>
<td>irc</td>
<td>tcp</td>
<td>194</td>
<td>irc协议</td>
</tr>
<tr>
<td>ipx</td>
<td>udp</td>
<td>213</td>
<td>互联网络分组交换协议</td>
</tr>
<tr>
<td>rtsps</td>
<td>tcp&#x2F;udp</td>
<td>322</td>
<td>实时流控制协议</td>
</tr>
<tr>
<td>mftp</td>
<td>tcp&#x2F;udp</td>
<td>349</td>
<td>多重来源文件传输通讯协议</td>
</tr>
<tr>
<td>ldap</td>
<td>tcp</td>
<td>389</td>
<td>轻量目录访问协议</td>
</tr>
<tr>
<td>https</td>
<td>tcp&#x2F;udp</td>
<td>443</td>
<td>https加密协议</td>
</tr>
<tr>
<td>microsoft-ds</td>
<td>tcp&#x2F;udp</td>
<td>445</td>
<td>微软的补丁</td>
</tr>
<tr>
<td>kpasswd</td>
<td>tcp&#x2F;udp</td>
<td>464</td>
<td>计算机网络授权协议 (v5)</td>
</tr>
<tr>
<td>isakmp</td>
<td>udp</td>
<td>500</td>
<td>ike协议</td>
</tr>
<tr>
<td>crs</td>
<td>tcp&#x2F;udp</td>
<td>507</td>
<td>crs协议</td>
</tr>
<tr>
<td>exec</td>
<td>tcp</td>
<td>512</td>
<td>远程进程执行</td>
</tr>
<tr>
<td>biff</td>
<td>udp</td>
<td>512</td>
<td>comsat</td>
</tr>
<tr>
<td>login</td>
<td>tcp</td>
<td>513</td>
<td>远程登入</td>
</tr>
<tr>
<td>who</td>
<td>udp</td>
<td>513</td>
<td>whod服务</td>
</tr>
<tr>
<td>cmd</td>
<td>tcp</td>
<td>514</td>
<td>shell</td>
</tr>
<tr>
<td>syslog</td>
<td>udp</td>
<td>514</td>
<td>系统日志</td>
</tr>
<tr>
<td>printer</td>
<td>tcp</td>
<td>515</td>
<td>后台打印服务</td>
</tr>
<tr>
<td>talk</td>
<td>udp</td>
<td>517</td>
<td>talk服务</td>
</tr>
<tr>
<td>ntalk</td>
<td>udp</td>
<td>518</td>
<td>ntalk服务</td>
</tr>
<tr>
<td>efs</td>
<td>tcp</td>
<td>520</td>
<td>扩展文件名服务</td>
</tr>
<tr>
<td>router</td>
<td>udp</td>
<td>520</td>
<td>路由表</td>
</tr>
<tr>
<td>ulp</td>
<td>tcp&#x2F;udp</td>
<td>522</td>
<td>ulp协议</td>
</tr>
<tr>
<td>timed</td>
<td>udp</td>
<td>525</td>
<td>时间服务</td>
</tr>
<tr>
<td>tempo</td>
<td>tcp</td>
<td>526</td>
<td>newdate</td>
</tr>
<tr>
<td>irc-serv</td>
<td>tcp&#x2F;udp</td>
<td>529</td>
<td>irc服务</td>
</tr>
<tr>
<td>courier</td>
<td>tcp</td>
<td>530</td>
<td>rpc服务</td>
</tr>
<tr>
<td>conference</td>
<td>tcp</td>
<td>531</td>
<td>chat服务</td>
</tr>
<tr>
<td>netnews</td>
<td>tcp</td>
<td>532</td>
<td>readnews服务</td>
</tr>
<tr>
<td>netwall</td>
<td>udp</td>
<td>533</td>
<td>紧急广播</td>
</tr>
<tr>
<td>uucp</td>
<td>tcp</td>
<td>540</td>
<td>复制服务</td>
</tr>
<tr>
<td>klogin</td>
<td>tcp</td>
<td>543</td>
<td>kerberos登录</td>
</tr>
<tr>
<td>kshell</td>
<td>tcp</td>
<td>544</td>
<td>Kerberos 远程shell</td>
</tr>
<tr>
<td>dhcpv6-client</td>
<td>tcp&#x2F;udp</td>
<td>546</td>
<td>DHCPV6 客户端</td>
</tr>
<tr>
<td>dhcpv6-server</td>
<td>tcp&#x2F;udp</td>
<td>547</td>
<td>DHCPV6 服务器</td>
</tr>
<tr>
<td>afpovertcp</td>
<td>tcp&#x2F;udp</td>
<td>548</td>
<td>AFP共享服务</td>
</tr>
<tr>
<td>new-rwho</td>
<td>udp</td>
<td>550</td>
<td>系统查询服务</td>
</tr>
<tr>
<td>rtsp</td>
<td>tcp&#x2F;udp</td>
<td>554</td>
<td>实时流协议</td>
</tr>
<tr>
<td>remotefs</td>
<td>tcp</td>
<td>556</td>
<td>rfs服务</td>
</tr>
<tr>
<td>rmonitor</td>
<td>udp</td>
<td>560</td>
<td>监视器服务</td>
</tr>
<tr>
<td>monitor</td>
<td>udp</td>
<td>561</td>
<td>监视器服务</td>
</tr>
<tr>
<td>nntps</td>
<td>tcp&#x2F;udp</td>
<td>563</td>
<td>网络新闻传输协议</td>
</tr>
<tr>
<td>whoami</td>
<td>tcp&#x2F;udp</td>
<td>565</td>
<td>查看当前用户</td>
</tr>
<tr>
<td>ms-shuttle</td>
<td>tcp&#x2F;udp</td>
<td>568</td>
<td>摆渡服务</td>
</tr>
<tr>
<td>ms-rome</td>
<td>tcp&#x2F;udp</td>
<td>569</td>
<td>remo服务</td>
</tr>
<tr>
<td>http-rpc-epmap</td>
<td>tcp&#x2F;udp</td>
<td>593</td>
<td>rpc服务</td>
</tr>
<tr>
<td>hmmp-ind</td>
<td>tcp&#x2F;udp</td>
<td>612</td>
<td>分布式网络管理结构</td>
</tr>
<tr>
<td>hmmp-op</td>
<td>tcp&#x2F;udp</td>
<td>613</td>
<td>分布式网络管理结构</td>
</tr>
<tr>
<td>ldaps</td>
<td>tcp</td>
<td>636</td>
<td>sldap</td>
</tr>
<tr>
<td>doom</td>
<td>tcp&#x2F;udp</td>
<td>666</td>
<td>Doom Id Software</td>
</tr>
<tr>
<td>msexch-routing</td>
<td>tcp&#x2F;udp</td>
<td>691</td>
<td>邮件路由</td>
</tr>
<tr>
<td>kerberos-adm</td>
<td>tcp&#x2F;udp</td>
<td>749</td>
<td>Kerberos administration</td>
</tr>
<tr>
<td>kerberos-iv</td>
<td>udp</td>
<td>750</td>
<td>网络身份验证协议</td>
</tr>
<tr>
<td>mdbs_daemon</td>
<td>tcp&#x2F;udp</td>
<td>800</td>
<td>mdbs_daemon服务</td>
</tr>
<tr>
<td>ftps-data</td>
<td>tcp</td>
<td>989</td>
<td>sftp数据协议</td>
</tr>
<tr>
<td>ftps</td>
<td>tcp</td>
<td>990</td>
<td>sftp协议</td>
</tr>
<tr>
<td>telnets</td>
<td>tcp</td>
<td>992</td>
<td>telnets协议</td>
</tr>
<tr>
<td>imaps</td>
<td>tcp</td>
<td>993</td>
<td>IMAP4加密协议</td>
</tr>
<tr>
<td>ircs</td>
<td>tcp</td>
<td>994</td>
<td>IRC加密协议</td>
</tr>
<tr>
<td>pop3s</td>
<td>tcp&#x2F;udp</td>
<td>995</td>
<td>pop3加密协议</td>
</tr>
<tr>
<td>kpop</td>
<td>tcp</td>
<td>1109</td>
<td>Kerberos POP协议</td>
</tr>
<tr>
<td>nfsd-status</td>
<td>tcp</td>
<td>1110</td>
<td>nfs状态检测协议</td>
</tr>
<tr>
<td>nfsd-keepalive</td>
<td>udp</td>
<td>1110</td>
<td>nfs客户端状态检测协议</td>
</tr>
<tr>
<td>nfa</td>
<td>tcp&#x2F;udp</td>
<td>1155</td>
<td>网络文件控制协议</td>
</tr>
<tr>
<td>activesync</td>
<td>tcp</td>
<td>1034</td>
<td>activesync服务</td>
</tr>
<tr>
<td>phone</td>
<td>udp</td>
<td>1167</td>
<td>来电转移</td>
</tr>
<tr>
<td>opsmgr</td>
<td>tcp&#x2F;udp</td>
<td>1270</td>
<td>Microsoft Operations Manager管理服务</td>
</tr>
<tr>
<td>ms-sql-s</td>
<td>tcp&#x2F;udp</td>
<td>1433</td>
<td>SQL server服务</td>
</tr>
<tr>
<td>ms-sql-m</td>
<td>tcp&#x2F;udp</td>
<td>1434</td>
<td>SQL server服务活动监视器</td>
</tr>
<tr>
<td>ms-sna-server</td>
<td>tcp&#x2F;udp</td>
<td>1477</td>
<td>sna服务</td>
</tr>
<tr>
<td>ms-sna-base</td>
<td>tcp&#x2F;udp</td>
<td>1478</td>
<td>sna base服务</td>
</tr>
<tr>
<td>wins</td>
<td>tcp&#x2F;udp</td>
<td>1512</td>
<td>windows名称服务</td>
</tr>
<tr>
<td>ingreslock</td>
<td>tcp</td>
<td>1524</td>
<td>ingreslock服务</td>
</tr>
<tr>
<td>stt</td>
<td>tcp&#x2F;udp</td>
<td>1607</td>
<td>stt服务</td>
</tr>
<tr>
<td>l2tp</td>
<td>udp</td>
<td>1701</td>
<td>l2tp协议</td>
</tr>
<tr>
<td>pptconference</td>
<td>tcp&#x2F;udp</td>
<td>1711</td>
<td>ppt</td>
</tr>
<tr>
<td>pptp</td>
<td>tcp</td>
<td>1723</td>
<td>pptp协议</td>
</tr>
<tr>
<td>msiccp</td>
<td>tcp&#x2F;udp</td>
<td>1731</td>
<td>iccp</td>
</tr>
<tr>
<td>remote-winsock</td>
<td>tcp&#x2F;udp</td>
<td>1745</td>
<td>远程winsock</td>
</tr>
<tr>
<td>ms-streaming</td>
<td>tcp&#x2F;udp</td>
<td>1755</td>
<td>流媒体服务</td>
</tr>
<tr>
<td>msmq</td>
<td>tcp&#x2F;udp</td>
<td>1801</td>
<td>微软消息队列</td>
</tr>
<tr>
<td>radius</td>
<td>udp</td>
<td>1812</td>
<td>RADIUS 认证协议</td>
</tr>
<tr>
<td>radacct</td>
<td>udp</td>
<td>1813</td>
<td>radacct服务</td>
</tr>
<tr>
<td>msnp</td>
<td>tcp&#x2F;udp</td>
<td>1863</td>
<td>微软的通信协议</td>
</tr>
<tr>
<td>ssdp</td>
<td>tcp&#x2F;udp</td>
<td>1900</td>
<td>简单服务发现协议</td>
</tr>
<tr>
<td>close-combat</td>
<td>tcp&#x2F;udp</td>
<td>1944</td>
<td>combat服务</td>
</tr>
<tr>
<td>nfsd</td>
<td>tcp&#x2F;udp</td>
<td>2049</td>
<td>NFS服务</td>
</tr>
<tr>
<td>knetd</td>
<td>tcp</td>
<td>2053</td>
<td>Kerberos安全认证服务</td>
</tr>
<tr>
<td>mzap</td>
<td>tcp&#x2F;udp</td>
<td>2106</td>
<td>组播区域范围公告协议</td>
</tr>
<tr>
<td>qwave</td>
<td>tcp&#x2F;udp</td>
<td>2177</td>
<td>QWAVE Experiment Port</td>
</tr>
<tr>
<td>directplay</td>
<td>tcp&#x2F;udp</td>
<td>2234</td>
<td>直接播放服务</td>
</tr>
<tr>
<td>ms-olap3</td>
<td>tcp&#x2F;udp</td>
<td>2382</td>
<td>OLAP 3服务</td>
</tr>
<tr>
<td>ms-olap4</td>
<td>tcp&#x2F;udp</td>
<td>2383</td>
<td>OLAP4服务</td>
</tr>
<tr>
<td>ms-olap1</td>
<td>tcp&#x2F;udp</td>
<td>2393</td>
<td>OLAP 1服务</td>
</tr>
<tr>
<td>ms-olap2</td>
<td>tcp&#x2F;udp</td>
<td>2394</td>
<td>OLAP 2服务</td>
</tr>
<tr>
<td>ms-theater</td>
<td>tcp&#x2F;udp</td>
<td>2460</td>
<td>ms-theater服务</td>
</tr>
<tr>
<td>wlbs</td>
<td>tcp&#x2F;udp</td>
<td>2504</td>
<td>微软负载均衡服务</td>
</tr>
<tr>
<td>ms-v-worlds</td>
<td>tcp&#x2F;udp</td>
<td>2525</td>
<td>微软word服务</td>
</tr>
<tr>
<td>sms-rcinfo</td>
<td>tcp&#x2F;udp</td>
<td>2701</td>
<td>短信信息预览服务</td>
</tr>
<tr>
<td>sms-xfer</td>
<td>tcp&#x2F;udp</td>
<td>2702</td>
<td>短信管理服务</td>
</tr>
<tr>
<td>sms-chat</td>
<td>tcp&#x2F;udp</td>
<td>2703</td>
<td>短信聊天服务</td>
</tr>
<tr>
<td>sms-remctrl</td>
<td>tcp&#x2F;udp</td>
<td>2704</td>
<td>消息短信接收服务</td>
</tr>
<tr>
<td>msolap-ptp2</td>
<td>tcp&#x2F;udp</td>
<td>2725</td>
<td>MSOLAP服务</td>
</tr>
<tr>
<td>icslap</td>
<td>tcp&#x2F;udp</td>
<td>2869</td>
<td>icslap协议</td>
</tr>
<tr>
<td>cifs</td>
<td>tcp&#x2F;udp</td>
<td>3020</td>
<td>通用互联网文档系统</td>
</tr>
<tr>
<td>xbox</td>
<td>tcp&#x2F;udp</td>
<td>3074</td>
<td>微软游戏xbox服务</td>
</tr>
<tr>
<td>ms-dotnetster</td>
<td>tcp&#x2F;udp</td>
<td>3126</td>
<td>微软,net服务</td>
</tr>
<tr>
<td>ms-rule-engine</td>
<td>tcp&#x2F;udp</td>
<td>3132</td>
<td>引擎更新服务</td>
</tr>
<tr>
<td>msft-gc</td>
<td>tcp&#x2F;udp</td>
<td>3268</td>
<td>微软全球目录服务</td>
</tr>
<tr>
<td>msft-gc-ssl</td>
<td>tcp&#x2F;udp</td>
<td>3269</td>
<td>微软全局目录服务</td>
</tr>
<tr>
<td>ms-cluster-net</td>
<td>tcp&#x2F;udp</td>
<td>3343</td>
<td>微软集群网络</td>
</tr>
<tr>
<td>ms-wbt-server</td>
<td>tcp&#x2F;udp</td>
<td>3389</td>
<td>远程桌面服务</td>
</tr>
<tr>
<td>ms-la</td>
<td>tcp&#x2F;udp</td>
<td>3535</td>
<td>class服务</td>
</tr>
<tr>
<td>pnrp-port</td>
<td>tcp&#x2F;udp</td>
<td>3540</td>
<td>基于IPv4和IPv6的点对点协议。</td>
</tr>
<tr>
<td>teredo</td>
<td>tcp&#x2F;udp</td>
<td>3544</td>
<td>隧道服务</td>
</tr>
<tr>
<td>p2pgroup</td>
<td>tcp&#x2F;udp</td>
<td>3587</td>
<td>对等分组</td>
</tr>
<tr>
<td>ws-discovery</td>
<td>tcp&#x2F;udp</td>
<td>3702</td>
<td>WS-Discovery服务</td>
</tr>
<tr>
<td>dvcprov-port</td>
<td>tcp&#x2F;udp</td>
<td>3776</td>
<td>dvcprov-port 服务</td>
</tr>
<tr>
<td>msfw-control</td>
<td>tcp</td>
<td>3847</td>
<td>防火墙服务</td>
</tr>
<tr>
<td>msdts1</td>
<td>tcp</td>
<td>3882</td>
<td>数据转换服务</td>
</tr>
<tr>
<td>sdp-portmapper</td>
<td>tcp &#x2F;udp</td>
<td>3935</td>
<td>sdp管理协议</td>
</tr>
<tr>
<td>net-device</td>
<td>tcp&#x2F;udp</td>
<td>4350</td>
<td>网络设备</td>
</tr>
<tr>
<td>ipsec-msft</td>
<td>tcp&#x2F;udp</td>
<td>4500</td>
<td>IPsec的封装协议</td>
</tr>
<tr>
<td>llmnr</td>
<td>tcp&#x2F;udp</td>
<td>5355</td>
<td>链路本地多播名称解析</td>
</tr>
<tr>
<td>wsd</td>
<td>tcp</td>
<td>5357</td>
<td>设备上的web服务</td>
</tr>
<tr>
<td>wsd</td>
<td>tcp</td>
<td>5358</td>
<td>设备上的web服务</td>
</tr>
<tr>
<td>rrac</td>
<td>tcp&#x2F;udp</td>
<td>5678</td>
<td>远程复制代理连接</td>
</tr>
<tr>
<td>dccm</td>
<td>udp&#x2F;tcp</td>
<td>5679</td>
<td>虚拟局域网</td>
</tr>
<tr>
<td>ms-licensing</td>
<td>tcp&#x2F;udp</td>
<td>5720</td>
<td>微软许可证服务</td>
</tr>
<tr>
<td>directplay8</td>
<td>tcp&#x2F;udp</td>
<td>6073</td>
<td>“DirectPlay8 并行服务</td>
</tr>
<tr>
<td>ms-do</td>
<td>tcp&#x2F;udp</td>
<td>7680</td>
<td>交付优化服务</td>
</tr>
<tr>
<td>man</td>
<td>tcp</td>
<td>9535</td>
<td>远程man服务</td>
</tr>
<tr>
<td>rasadv</td>
<td>tcp&#x2F;udp</td>
<td>9753</td>
<td>RAS服务</td>
</tr>
<tr>
<td>imip-channels</td>
<td>tcp</td>
<td>11320</td>
<td>注册端口</td>
</tr>
<tr>
<td>directplaysrvr</td>
<td>tcp&#x2F;udp</td>
<td>47624</td>
<td>DirectPlay服务</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
        <tag>windwos</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一款开源堡垒机-jumpserver</title>
    <url>/2024/12/26/2024122607/</url>
    <content><![CDATA[<p>JumpServer是由FIT2CLOUD（飞致远）公司旗下一款开源的堡垒机，这款也是全球首款开源的堡垒机，使用 GNU GPL v2.0 开源协议，是符合 4A 规范的运维安全审计系统，使用 Python 开发，遵循 Web 2.0 规范，配备了业界领先的 Web Terminal 方案，交互界面美观、用户体验好，同时采纳分布式架构，支持多机房跨区域部署以及横向扩展，无资产数量及并发限制。这款开源堡垒机不但提供了社区开源版本并且还提供了企业使用的企业版本，企业版功能更加强大。</p>
<span id="more"></span>

<pre><code>飞致远官网地址：https://www.fit2cloud.com/
</code></pre>
<p><strong>旗下开源软件：</strong></p>
<ol>
<li>MeterSphere：是一站式开源持续测试平台, 涵盖测试跟踪、接口测试、性能测试、 团队协作等功能，全面兼容 JMeter、Postman、Swagger 等开源、主流标准，有效助力开发和测试团队充分利用云弹性进行高度可扩展的自动化测试，加速高质量的软件交付，推动中国测试行业整体效率的提升。</li>
<li>KubeOperator：是一个开源的轻量级 Kubernetes 发行版，专注于帮助企业规划、部署和运营生产级别的 Kubernetes 集群。</li>
<li>DataEase：是开源的数据可视化分析工具，帮助用户快速分析数据并洞察业务趋势，从而实现业务的改进与优化。DataEase 支持丰富的数据源连接，能够通过拖拉拽方式快速制作图表，并可以方便的与他人分享。</li>
<li>RackShift：是开源的裸金属服务器管理平台，功能覆盖裸金属服务器的发现、带外管理、RAID 配置、固件更新、操作系统安装等。</li>
<li>RiskScanner：是开源的裸金属服务器管理平台，功能覆盖裸金属服务器的发现、带外管理、RAID 配置、固件更新、操作系统安装等。</li>
<li>HaLo：一款现代化的开源博客&#x2F;CMS系统，值得试一试</li>
<li>RackShift：是开源的裸金属服务器管理平台，功能覆盖裸金属服务器的发现、带外管理、RAID 配置、固件更新、操作系统安装等。</li>
<li>RiskScanner：是开源的多云安全合规扫描平台，基于 Cloud Custodian 和 Nuclei 引擎，实现对主流公(私)有云资源的安全合规扫描和漏洞扫描。<blockquote>
<p>开局之前在这里先感谢飞致远为为我们带来了这么多开源好用的平台</p>
</blockquote>
</li>
</ol>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>一台Linux主机，当然如果你条件够的话可以采用主机，这里如果你不是正式环境使用不建议你使用真实主机，而是采用虚拟主机，主机规格建议不低于2核4G的配置，当然测试你可以使用更低的规格。</li>
<li>联网，这里建议全网放通，需要下载一些更新文件和github上的主文件</li>
<li>建议准备双网卡，大家都知道堡垒机可以在内网也可以在外网，当然大多数堡垒机都是有一条内网网卡和一条外网网卡的，为了真实模拟这里建议采用双网卡。</li>
<li>操作系统建议采用CentOs或者RedHat，不建议采用Ubuntu或其他开源linux操作系统，这里就不跟大家说原因了，大家有兴趣可以去尝试</li>
</ol>
<p><strong>外置环境要求：</strong><br>这里所说的外置环境要求，其实就是当你堡垒机单独使用一台虚机或主机，这个时候你就需要有另外的数据库和redis存在，并且需要你在堡垒机安装完成后去配置指定它们，堡垒机运行需要它们。</p>
<ol>
<li>MySQL：版本不低于5.7</li>
<li>MariaDB: 版本不低于10.2 </li>
<li>Redis：版本不低于5.0</li>
</ol>
<p>准备好这些就可以试着开始安装了</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在官网上提供的部署方式有很多，我感觉用的最多的就是负载均衡部署和单机部署，因为我这虚拟主机数量不太够这里就采用单机部署的方式了，官网上提供的安装方式也有很多：</p>
<ol>
<li><strong>一键部署</strong>：这种方式是我比较喜欢的一种，简单粗暴快捷，但是会存在很多限制。</li>
<li><strong>手动部署</strong>：困难程度一般，有一定难度需要大家对部署有一定了解。</li>
<li>**离线部署(amd64)**：困难程度一般，有一定难度需要大家对部署有一定了解。</li>
<li>**离线部署(arm64)**：困难程度一般，有一定难度需要大家对部署有一定了解。</li>
<li><strong>源码部署</strong>：部署相对来说困难很多，你要好好了解一下架构然后再试着去安装部署。</li>
<li><strong>容器部署</strong>：这个容器化部署就需要你对K8s有一定熟悉。</li>
</ol>
<p>大家可以选择自己合适的方式去安装就可以了，有兴趣的可以试试所有方式哦，这对你的学习会很有帮助的</p>
<h4 id="一、-一键部署"><a href="#一、-一键部署" class="headerlink" title="一、 一键部署"></a>一、 一键部署</h4><p>一键部署时安装jumpserver最简单的一种方式，这种方式你只需要在官网是把命令复制到你的主机上进行执行等待执行成功就可以了，然后就是找到安装目录进行启动就可以使用了，下面我们来看下具体操作<br><strong>主要操作说明</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认会安装到 /opt/jumpserver-installer-v2.17.2 目录</span></span><br><span class="line">curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.17.2/quick_start.sh | bash</span><br><span class="line"><span class="built_in">cd</span> /opt/jumpserver-installer-v2.17.2</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装完成后配置文件 /opt/jumpserver/config/config.txt</span></span><br><span class="line"><span class="comment"># 如果你外置了MySQL/MariaDB和Redis你就必须要修改本文件，指定你的地址和密码</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/jumpserver-installer-v2.17.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">./jmsctl.sh down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./jmsctl.sh uninstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">./jmsctl.sh -h</span><br></pre></td></tr></table></figure>
<p><strong>详细步骤</strong></p>
<ol>
<li>主机检查<br>首先需要检查下你的网卡是否两个都生效<br><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8e11a25528b14bc80b698ac6e267e970.png) -->
<!-- <img src="8e11a25528b14bc80b698ac6e267e970.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/8e11a25528b14bc80b698ac6e267e970.png">'); </script><br>
测试忘了连通性，一键部署需要联网才可进行下载安装包及资源<br><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/26c327f1fb4a27fd300cdc9e0a7dc397.png) -->
<!-- <img src="26c327f1fb4a27fd300cdc9e0a7dc397.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/26c327f1fb4a27fd300cdc9e0a7dc397.png">'); </script><br>
查看是否存在一些已安装的冲突包，这里一定要<strong>注意要确定这些服务没用后才能卸载哦</strong>，我这里是虚机无所谓所以直接用*来卸载一些没用的安装包<br><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f7c24aa78fd69f42ddb34ed2907dc82e.png) -->
<!-- <img src="f7c24aa78fd69f42ddb34ed2907dc82e.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/f7c24aa78fd69f42ddb34ed2907dc82e.png">'); </script><br></li>
<li>下载安装程序</li>
</ol>
<p>我们把上面的第一条命令复制出来，然后粘贴到我们命令行进行执行即可</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5f1f6ba290bcd166f1bb73a31620085a.png) -->
<!-- <img src="5f1f6ba290bcd166f1bb73a31620085a.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/5f1f6ba290bcd166f1bb73a31620085a.png">'); </script><br/>
<p>因为是需要在github上面下载主安装文件，大家都懂的在github下载东西是特别慢的，甚至等了半天都没下载成功，下面教大家一个加速小技巧嘿嘿。<br>我们来看看下面地址的不同</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/jumpserver/jumpserver/releases/download/v2.17.2/quick_start.sh</span><br></pre></td></tr></table></figure>
<p>对比</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com.cnpmjs.org/jumpserver/jumpserver/releases/download/v2.17.2/quick_start.sh</span><br></pre></td></tr></table></figure>
<p>对比一下就知道这两个地址里面不同的地方就是在<strong>github.com</strong>后面增加了<strong>cnpmjs.org</strong>，这个原理就是使用镜像服务器来下载这些服务<img src="https://i-blog.csdnimg.cn/blog_migrate/70c54352b4329f44510c6439e9f90495.png" alt="在这里插入图片描述"><br>下面我们再来试着下载一下，但是这个时候就要注意一下把上面地址中的**| bash**去掉，不然还是会提示你下载失败的情况，下面给大家更新下下载链接地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com.cnpmjs.org/jumpserver/jumpserver/releases/download/v2.17.2/quick_start.sh</span><br></pre></td></tr></table></figure>
<p>这样下载就没问题了。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/e2dfd8da458044e42d497a53fc96d555.png) -->
<!-- <img src="e2dfd8da458044e42d497a53fc96d555.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/e2dfd8da458044e42d497a53fc96d555.png">'); </script><br>
<p>下载完成后需要打开这个文件，修改里面github的下载地址</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/23f9eb1f6f5558b3cc33dd317e92ccde.png) -->
<!-- <img src="23f9eb1f6f5558b3cc33dd317e92ccde.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/23f9eb1f6f5558b3cc33dd317e92ccde.png">'); </script><br>
<p>修改完成后保存，然后再使用bash进行执行就可以了，执行命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash quick_start.sh</span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/af38f4e5a3adeeba63d496651124e560.png) -->
<!-- <img src="af38f4e5a3adeeba63d496651124e560.png"><br/> -->
<script> document.write('<img src="'+ imgurl +'1735386760/af38f4e5a3adeeba63d496651124e560.png">'); </script><br>
<p>中间可能会出现提问大家选择y即可</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5a89aa4ff1d5bff630d2248dc237bf6f.png) -->
<!-- <img src="5a89aa4ff1d5bff630d2248dc237bf6f.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/5a89aa4ff1d5bff630d2248dc237bf6f.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/07e8b2d8e504b85634e9d4d64d8cdb4f.png) -->
<!-- <img src="07e8b2d8e504b85634e9d4d64d8cdb4f.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/07e8b2d8e504b85634e9d4d64d8cdb4f.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/deb4b36edaaaaa100686f6ab7c4267b4.png) -->
<!-- <img src="deb4b36edaaaaa100686f6ab7c4267b4.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/deb4b36edaaaaa100686f6ab7c4267b4.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/b22bf5767158b38f849b76891881f0a4.png) -->
<!-- <img src="b22bf5767158b38f849b76891881f0a4.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/b22bf5767158b38f849b76891881f0a4.png">'); </script><br>
<p>下面这些是是否需要设置扩展excel和redis以及jumpserver的对外端口，我这里就保持默认了</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/fb47a36faf439edf244ad2c5ab142964.png) -->
<!-- <img src="fb47a36faf439edf244ad2c5ab142964.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/fb47a36faf439edf244ad2c5ab142964.png">'); </script><br>
<p>接下来就是等待执行完成了，其中需要下载很多镜像，等待时间会较长</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/a71aa37ab22049985f7866a85559f28e.png) -->
<!-- <img src="a71aa37ab22049985f7866a85559f28e.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/a71aa37ab22049985f7866a85559f28e.png">'); </script><br>
<p>经过漫长的等待终于搞定了，接下来我们去启动jumpserver，根据安装完成的提示进行启动即可</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/224ba1efed5f5731e9e1f74d0180e47c.png) -->
<!-- <img src="224ba1efed5f5731e9e1f74d0180e47c.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/224ba1efed5f5731e9e1f74d0180e47c.png">'); </script><br>
<p>启动成功后使用浏览器访问外网的地址即可，我这里使用内网进行访问</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5803c2e4eab9a51cb5c3f47043d84721.png) -->
<!-- <img src="5803c2e4eab9a51cb5c3f47043d84721.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/5803c2e4eab9a51cb5c3f47043d84721.png">'); </script><br>
<p>默认账号密码为admin，首次登录需要重置密码</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/3a5f3df5fadaac879714fa05788f0721.png) -->
<!-- <img src="3a5f3df5fadaac879714fa05788f0721.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/3a5f3df5fadaac879714fa05788f0721.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/10e313585d8f16efc1b71e455c3a0aaf.png) -->
<!-- <img src="10e313585d8f16efc1b71e455c3a0aaf.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/10e313585d8f16efc1b71e455c3a0aaf.png">'); </script><br>
<p>到这里就已经安装完成了。下面安装我就写简要安装了</p>
<h4 id="二、-手动部署"><a href="#二、-手动部署" class="headerlink" title="二、 手动部署"></a>二、 手动部署</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://github.com/jumpserver/installer/releases/download/v2.17.2/jumpserver-installer-v2.17.2.tar.gz</span><br><span class="line">tar -xf jumpserver-installer-v2.17.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> jumpserver-installer-v2.17.2</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据需要修改配置文件模板, 如果不清楚用途可以跳过修改</span></span><br><span class="line"><span class="built_in">cat</span> config-example.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下设置如果为空系统会自动生成随机字符串填入</span></span><br><span class="line"><span class="comment">## 迁移请修改 SECRET_KEY 和 BOOTSTRAP_TOKEN 为原来的设置</span></span><br><span class="line"><span class="comment">## 完整参数文档 https://docs.jumpserver.org/zh/master/admin-guide/env/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装配置, amd64 默认使用华为云加速下载, arm64 请注释掉 DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line"><span class="comment"># DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line">VOLUME_DIR=/opt/jumpserver</span><br><span class="line">DOCKER_DIR=/var/lib/docker</span><br><span class="line">SECRET_KEY=</span><br><span class="line">BOOTSTRAP_TOKEN=</span><br><span class="line">LOG_LEVEL=ERROR</span><br><span class="line"></span><br><span class="line"><span class="comment">##  MySQL 配置, USE_EXTERNAL_MYSQL=1 表示使用外置数据库, 请输入正确的 MySQL 信息</span></span><br><span class="line">USE_EXTERNAL_MYSQL=0</span><br><span class="line">DB_HOST=mysql</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_USER=root</span><br><span class="line">DB_PASSWORD=</span><br><span class="line">DB_NAME=jumpserver</span><br><span class="line"></span><br><span class="line"><span class="comment">##  Redis 配置, USE_EXTERNAL_REDIS=1 表示使用外置数据库, 请输入正确的 Redis 信息</span></span><br><span class="line">USE_EXTERNAL_REDIS=0</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line"></span><br><span class="line"><span class="comment">## Compose 项目设置, 如果 192.168.250.0/24 网段与你现有网段冲突, 请修改然后重启 JumpServer</span></span><br><span class="line">COMPOSE_PROJECT_NAME=jms</span><br><span class="line">COMPOSE_HTTP_TIMEOUT=3600</span><br><span class="line">DOCKER_CLIENT_TIMEOUT=3600</span><br><span class="line">DOCKER_SUBNET=192.168.250.0/24</span><br><span class="line"></span><br><span class="line"><span class="comment">## IPV6 设置, 容器是否开启 ipv6 nat, USE_IPV6=1 表示开启, 为 0 的情况下 DOCKER_SUBNET_IPV6 定义不生效</span></span><br><span class="line">USE_IPV6=0</span><br><span class="line">DOCKER_SUBNET_IPV6=2001:db8:10::/64</span><br><span class="line"></span><br><span class="line"><span class="comment">## Nginx 配置, USE_LB=1 表示开启, 为 0 的情况下, HTTPS_PORT 定义不生效</span></span><br><span class="line">HTTP_PORT=80</span><br><span class="line">SSH_PORT=2222</span><br><span class="line">RDP_PORT=3389</span><br><span class="line"></span><br><span class="line">USE_LB=0</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line"></span><br><span class="line"><span class="comment">## Task 配置, 是否启动 jms_celery 容器, 单节点必须开启</span></span><br><span class="line">USE_TASK=1</span><br><span class="line"></span><br><span class="line"><span class="comment">## XPack, USE_XPACK=1 表示开启, 开源版本设置无效</span></span><br><span class="line">USE_XPACK=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Core 配置, Session 定义, SESSION_COOKIE_AGE 表示闲置多少秒后 session 过期, SESSION_EXPIRE_AT_BROWSER_CLOSE=true 表示关闭浏览器即 session 过期</span></span><br><span class="line"><span class="comment"># SESSION_COOKIE_AGE=86400</span></span><br><span class="line">SESSION_EXPIRE_AT_BROWSER_CLOSE=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Koko Lion XRDP 组件配置</span></span><br><span class="line">CORE_HOST=http://core:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 额外的配置</span></span><br><span class="line">CURRENT_VERSION=</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">./jmsctl.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装完成后配置文件 /opt/jumpserver/config/config.txt</span></span><br><span class="line"><span class="built_in">cd</span> /opt/jumpserver-installer-v2.17.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">./jmsctl.sh down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./jmsctl.sh uninstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">./jmsctl.sh -h</span><br></pre></td></tr></table></figure>
<h4 id="三、离线部署-amd64"><a href="#三、离线部署-amd64" class="headerlink" title="三、离线部署(amd64)"></a>三、离线部署(amd64)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">tar -xf jumpserver-offline-installer-v2.17.2-amd64-84.tar.gz</span><br><span class="line"><span class="built_in">cd</span> jumpserver-offline-installer-v2.17.2-amd64-84</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据需要修改配置文件模板, 如果不清楚用途可以跳过修改</span></span><br><span class="line"><span class="built_in">cat</span> config-example.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下设置如果为空系统会自动生成随机字符串填入</span></span><br><span class="line"><span class="comment">## 迁移请修改 SECRET_KEY 和 BOOTSTRAP_TOKEN 为原来的设置</span></span><br><span class="line"><span class="comment">## 完整参数文档 https://docs.jumpserver.org/zh/master/admin-guide/env/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装配置, amd64 默认使用华为云加速下载, arm64 请注释掉 DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line"><span class="comment"># DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line">VOLUME_DIR=/opt/jumpserver</span><br><span class="line">DOCKER_DIR=/var/lib/docker</span><br><span class="line">SECRET_KEY=</span><br><span class="line">BOOTSTRAP_TOKEN=</span><br><span class="line">LOG_LEVEL=ERROR</span><br><span class="line"></span><br><span class="line"><span class="comment">##  MySQL 配置, USE_EXTERNAL_MYSQL=1 表示使用外置数据库, 请输入正确的 MySQL 信息</span></span><br><span class="line">USE_EXTERNAL_MYSQL=0</span><br><span class="line">DB_HOST=mysql</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_USER=root</span><br><span class="line">DB_PASSWORD=</span><br><span class="line">DB_NAME=jumpserver</span><br><span class="line"></span><br><span class="line"><span class="comment">##  Redis 配置, USE_EXTERNAL_REDIS=1 表示使用外置数据库, 请输入正确的 Redis 信息</span></span><br><span class="line">USE_EXTERNAL_REDIS=0</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line"></span><br><span class="line"><span class="comment">## Compose 项目设置, 如果 192.168.250.0/24 网段与你现有网段冲突, 请修改然后重启 JumpServer</span></span><br><span class="line">COMPOSE_PROJECT_NAME=jms</span><br><span class="line">COMPOSE_HTTP_TIMEOUT=3600</span><br><span class="line">DOCKER_CLIENT_TIMEOUT=3600</span><br><span class="line">DOCKER_SUBNET=192.168.250.0/24</span><br><span class="line"></span><br><span class="line"><span class="comment">## IPV6 设置, 容器是否开启 ipv6 nat, USE_IPV6=1 表示开启, 为 0 的情况下 DOCKER_SUBNET_IPV6 定义不生效</span></span><br><span class="line">USE_IPV6=0</span><br><span class="line">DOCKER_SUBNET_IPV6=2001:db8:10::/64</span><br><span class="line"></span><br><span class="line"><span class="comment">## Nginx 配置, USE_LB=1 表示开启, 为 0 的情况下, HTTPS_PORT 定义不生效</span></span><br><span class="line">HTTP_PORT=80</span><br><span class="line">SSH_PORT=2222</span><br><span class="line">RDP_PORT=3389</span><br><span class="line"></span><br><span class="line">USE_LB=0</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line"></span><br><span class="line"><span class="comment">## Task 配置, 是否启动 jms_celery 容器, 单节点必须开启</span></span><br><span class="line">USE_TASK=1</span><br><span class="line"></span><br><span class="line"><span class="comment">## XPack, USE_XPACK=1 表示开启, 开源版本设置无效</span></span><br><span class="line">USE_XPACK=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Core 配置, Session 定义, SESSION_COOKIE_AGE 表示闲置多少秒后 session 过期, SESSION_EXPIRE_AT_BROWSER_CLOSE=true 表示关闭浏览器即 session 过期</span></span><br><span class="line"><span class="comment"># SESSION_COOKIE_AGE=86400</span></span><br><span class="line">SESSION_EXPIRE_AT_BROWSER_CLOSE=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Koko Lion XRDP 组件配置</span></span><br><span class="line">CORE_HOST=http://core:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 额外的配置</span></span><br><span class="line">CURRENT_VERSION=</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">./jmsctl.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装完成后配置文件 /opt/jumpserver/config/config.txt</span></span><br><span class="line"><span class="built_in">cd</span> /opt/jumpserver-installer-v2.17.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">./jmsctl.sh down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./jmsctl.sh uninstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">./jmsctl.sh -h</span><br></pre></td></tr></table></figure>
<h4 id="四、离线部署-arm64"><a href="#四、离线部署-arm64" class="headerlink" title="四、离线部署(arm64)"></a>四、离线部署(arm64)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">tar -xf jumpserver-offline-installer-v2.17.2-amd64-84.tar.gz</span><br><span class="line"><span class="built_in">cd</span> jumpserver-offline-installer-v2.17.2-amd64-84</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据需要修改配置文件模板, 如果不清楚用途可以跳过修改</span></span><br><span class="line"><span class="built_in">cat</span> config-example.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下设置如果为空系统会自动生成随机字符串填入</span></span><br><span class="line"><span class="comment">## 迁移请修改 SECRET_KEY 和 BOOTSTRAP_TOKEN 为原来的设置</span></span><br><span class="line"><span class="comment">## 完整参数文档 https://docs.jumpserver.org/zh/master/admin-guide/env/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装配置, amd64 默认使用华为云加速下载, arm64 请注释掉 DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line"><span class="comment"># DOCKER_IMAGE_PREFIX=swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line">VOLUME_DIR=/opt/jumpserver</span><br><span class="line">DOCKER_DIR=/var/lib/docker</span><br><span class="line">SECRET_KEY=</span><br><span class="line">BOOTSTRAP_TOKEN=</span><br><span class="line">LOG_LEVEL=ERROR</span><br><span class="line"></span><br><span class="line"><span class="comment">##  MySQL 配置, USE_EXTERNAL_MYSQL=1 表示使用外置数据库, 请输入正确的 MySQL 信息</span></span><br><span class="line">USE_EXTERNAL_MYSQL=0</span><br><span class="line">DB_HOST=mysql</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_USER=root</span><br><span class="line">DB_PASSWORD=</span><br><span class="line">DB_NAME=jumpserver</span><br><span class="line"></span><br><span class="line"><span class="comment">##  Redis 配置, USE_EXTERNAL_REDIS=1 表示使用外置数据库, 请输入正确的 Redis 信息</span></span><br><span class="line">USE_EXTERNAL_REDIS=0</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line"></span><br><span class="line"><span class="comment">## Compose 项目设置, 如果 192.168.250.0/24 网段与你现有网段冲突, 请修改然后重启 JumpServer</span></span><br><span class="line">COMPOSE_PROJECT_NAME=jms</span><br><span class="line">COMPOSE_HTTP_TIMEOUT=3600</span><br><span class="line">DOCKER_CLIENT_TIMEOUT=3600</span><br><span class="line">DOCKER_SUBNET=192.168.250.0/24</span><br><span class="line"></span><br><span class="line"><span class="comment">## IPV6 设置, 容器是否开启 ipv6 nat, USE_IPV6=1 表示开启, 为 0 的情况下 DOCKER_SUBNET_IPV6 定义不生效</span></span><br><span class="line">USE_IPV6=0</span><br><span class="line">DOCKER_SUBNET_IPV6=2001:db8:10::/64</span><br><span class="line"></span><br><span class="line"><span class="comment">## Nginx 配置, USE_LB=1 表示开启, 为 0 的情况下, HTTPS_PORT 定义不生效</span></span><br><span class="line">HTTP_PORT=80</span><br><span class="line">SSH_PORT=2222</span><br><span class="line">RDP_PORT=3389</span><br><span class="line"></span><br><span class="line">USE_LB=0</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line"></span><br><span class="line"><span class="comment">## Task 配置, 是否启动 jms_celery 容器, 单节点必须开启</span></span><br><span class="line">USE_TASK=1</span><br><span class="line"></span><br><span class="line"><span class="comment">## XPack, USE_XPACK=1 表示开启, 开源版本设置无效</span></span><br><span class="line">USE_XPACK=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Core 配置, Session 定义, SESSION_COOKIE_AGE 表示闲置多少秒后 session 过期, SESSION_EXPIRE_AT_BROWSER_CLOSE=true 表示关闭浏览器即 session 过期</span></span><br><span class="line"><span class="comment"># SESSION_COOKIE_AGE=86400</span></span><br><span class="line">SESSION_EXPIRE_AT_BROWSER_CLOSE=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Koko Lion XRDP 组件配置</span></span><br><span class="line">CORE_HOST=http://core:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 额外的配置</span></span><br><span class="line">CURRENT_VERSION=</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">./jmsctl.sh install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装完成后配置文件 /opt/jumpserver/config/config.txt**加粗样式**</span></span><br><span class="line"><span class="built_in">cd</span> /opt/jumpserver-installer-v2.17.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./jmsctl.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">./jmsctl.sh down</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">./jmsctl.sh uninstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">./jmsctl.sh -h</span><br></pre></td></tr></table></figure>
<h4 id="五、Kubernetes"><a href="#五、Kubernetes" class="headerlink" title="五、Kubernetes"></a>五、Kubernetes</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add jumpserver https://jumpserver.github.io/helm-charts</span><br><span class="line">helm repo list</span><br><span class="line">vi values.yaml</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模板 https://github.com/jumpserver/helm-charts/blob/main/charts/jumpserver/values.yaml</span></span><br><span class="line"><span class="comment"># Default values for jumpserver.</span></span><br><span class="line"><span class="comment"># This is a YAML-formatted file.</span></span><br><span class="line"><span class="comment"># Declare variables to be passed into your templates.</span></span><br><span class="line"></span><br><span class="line">nameOverride: <span class="string">&quot;&quot;</span></span><br><span class="line">fullnameOverride: <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## @param global.imageRegistry Global Docker image registry</span></span><br><span class="line"><span class="comment">## @param global.imagePullSecrets Global Docker registry secret names as an array</span></span><br><span class="line"><span class="comment">## @param global.storageClass Global StorageClass for Persistent Volume(s)</span></span><br><span class="line"><span class="comment">## @param global.redis.password Global Redis&amp;trade; password (overrides `auth.password`)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">global:</span><br><span class="line">  imageRegistry: <span class="string">&quot;docker.io&quot;</span>    <span class="comment"># 国内可以使用华为云加速 swr.cn-south-1.myhuaweicloud.com</span></span><br><span class="line">  imageTag: v2.16.3             <span class="comment"># 版本号</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">#  imagePullSecrets:</span></span><br><span class="line">  <span class="comment">#  - myRegistryKeySecretName</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  imagePullSecrets: []</span><br><span class="line">      <span class="comment"># - name: yourSecretKey</span></span><br><span class="line">  storageClass: <span class="string">&quot;&quot;</span>              <span class="comment"># NFS SC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## If the Redis database included in the chart is disabled, JumpServer will</span></span><br><span class="line"><span class="comment">## use below parameters to connect to an external Redis server.</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">externalDatabase:               <span class="comment"># 数据库相关设置</span></span><br><span class="line">  engine: mysql</span><br><span class="line">  host: localhost</span><br><span class="line">  port: 3306</span><br><span class="line">  user: root</span><br><span class="line">  password: <span class="string">&quot;&quot;</span></span><br><span class="line">  database: jumpserver</span><br><span class="line"></span><br><span class="line"><span class="comment">## If the MySQL database included in the chart is disabled, JumpServer will</span></span><br><span class="line"><span class="comment">## use below parameters to connect to an external MySQL server.</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line">externalRedis:                  <span class="comment"># Redis 设置</span></span><br><span class="line">  host: localhost</span><br><span class="line">  port: 6379</span><br><span class="line">  password: <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">serviceAccount:</span><br><span class="line">  <span class="comment"># Specifies whether a service account should be created</span></span><br><span class="line">  create: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The name of the service account to use.</span></span><br><span class="line">  <span class="comment"># If not set and create is true, a name is generated using the fullname template</span></span><br><span class="line">  name:</span><br><span class="line"></span><br><span class="line">ingress:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  annotations:</span><br><span class="line">    <span class="comment"># kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line">    compute-full-forwarded-for: <span class="string">&quot;true&quot;</span></span><br><span class="line">    use-forwarded-headers: <span class="string">&quot;true&quot;</span></span><br><span class="line">    kubernetes.io/ingress.class: nginx</span><br><span class="line">    nginx.ingress.kubernetes.io/configuration-snippet: |</span><br><span class="line">       proxy_set_header Upgrade <span class="string">&quot;websocket&quot;</span>;</span><br><span class="line">       proxy_set_header Connection <span class="string">&quot;Upgrade&quot;</span>;</span><br><span class="line">  hosts:</span><br><span class="line">    - <span class="string">&quot;test.jumpserver.org&quot;</span>                 <span class="comment"># 对外域名</span></span><br><span class="line">  tls: []</span><br><span class="line">  <span class="comment">#  - secretName: chart-example-tls</span></span><br><span class="line">  <span class="comment">#    hosts:</span></span><br><span class="line">  <span class="comment">#      - chart-example.local</span></span><br><span class="line"></span><br><span class="line">core:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-core</span><br><span class="line"></span><br><span class="line">  config:</span><br><span class="line">    <span class="comment"># Generate a new random secret key by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`</span></span><br><span class="line">    secretKey: <span class="string">&quot;&quot;</span>                            <span class="comment"># 加密敏感信息的 secret_key, 长度推荐大于 50 位</span></span><br><span class="line">    <span class="comment"># Generate a new random bootstrap token by execute `cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`</span></span><br><span class="line">    bootstrapToken: <span class="string">&quot;&quot;</span>                       <span class="comment"># 组件认证使用的 token, 长度推荐大于 24 位</span></span><br><span class="line">    <span class="comment"># Enabled it for debug</span></span><br><span class="line">    debug: <span class="literal">false</span></span><br><span class="line">    <span class="built_in">log</span>:</span><br><span class="line">      level: ERROR</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: docker.io</span><br><span class="line">    repository: jumpserver/core</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /api/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /api/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    web:</span><br><span class="line">      port: 8080</span><br><span class="line">    ws:</span><br><span class="line">      port: 8070</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 1000m</span></span><br><span class="line">    <span class="comment">#   memory: 2048Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 500m</span></span><br><span class="line">    <span class="comment">#   memory: 1024Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line">    <span class="comment"># subPath: &quot;&quot;</span></span><br><span class="line">    <span class="comment"># existingClaim:</span></span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br><span class="line"></span><br><span class="line">koko:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-koko</span><br><span class="line"></span><br><span class="line">  config:</span><br><span class="line">    <span class="built_in">log</span>:</span><br><span class="line">      level: ERROR</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: docker.io</span><br><span class="line">    repository: jumpserver/koko</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /koko/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /koko/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext:</span><br><span class="line">    privileged: <span class="literal">true</span></span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    web:</span><br><span class="line">      port: 5000</span><br><span class="line">    ssh:</span><br><span class="line">      port: 2222</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br><span class="line"></span><br><span class="line">lion:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-lion</span><br><span class="line"></span><br><span class="line">  config:</span><br><span class="line">    <span class="built_in">log</span>:</span><br><span class="line">      level: ERROR</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: docker.io</span><br><span class="line">    repository: jumpserver/lion</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /lion/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /lion/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    web:</span><br><span class="line">      port: 8081</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 512Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 512Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br><span class="line"></span><br><span class="line">xpack:</span><br><span class="line">  enabled: <span class="literal">false</span>      <span class="comment"># 企业版本打开此选项</span></span><br><span class="line"></span><br><span class="line">omnidb:</span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-omnidb</span><br><span class="line"></span><br><span class="line">  config:</span><br><span class="line">    <span class="built_in">log</span>:</span><br><span class="line">      level: ERROR</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: registry.fit2cloud.com</span><br><span class="line">    repository: jumpserver/omnidb</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    tcpSocket:</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    tcpSocket:</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    web:</span><br><span class="line">      port: 8082</span><br><span class="line">    ws:</span><br><span class="line">      port: 8071</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br><span class="line"></span><br><span class="line">xrdp:</span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-xrdp</span><br><span class="line"></span><br><span class="line">  config:</span><br><span class="line">    <span class="built_in">log</span>:</span><br><span class="line">      level: ERROR</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: registry.fit2cloud.com</span><br><span class="line">    repository: jumpserver/xrdp</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    tcpSocket:</span><br><span class="line">      port: rdp</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    tcpSocket:</span><br><span class="line">      port: rdp</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    rdp:</span><br><span class="line">      port: 3389</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br><span class="line"></span><br><span class="line">web:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  labels:</span><br><span class="line">    app.jumpserver.org/name: jms-web</span><br><span class="line"></span><br><span class="line">  replicaCount: 1</span><br><span class="line"></span><br><span class="line">  image:</span><br><span class="line">    registry: docker.io</span><br><span class="line">    repository: jumpserver/web</span><br><span class="line">    tag: v2.13.2</span><br><span class="line">    pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line">  <span class="built_in">command</span>: []</span><br><span class="line"></span><br><span class="line">  <span class="built_in">env</span>: []</span><br><span class="line"></span><br><span class="line">  livenessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /api/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  readinessProbe:</span><br><span class="line">    failureThreshold: 30</span><br><span class="line">    httpGet:</span><br><span class="line">      path: /api/health/</span><br><span class="line">      port: web</span><br><span class="line"></span><br><span class="line">  podSecurityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># fsGroup: 2000</span></span><br><span class="line"></span><br><span class="line">  securityContext: &#123;&#125;</span><br><span class="line">    <span class="comment"># capabilities:</span></span><br><span class="line">    <span class="comment">#   drop:</span></span><br><span class="line">    <span class="comment">#   - ALL</span></span><br><span class="line">    <span class="comment"># readOnlyRootFilesystem: true</span></span><br><span class="line">    <span class="comment"># runAsNonRoot: true</span></span><br><span class="line">    <span class="comment"># runAsUser: 1000</span></span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line">    <span class="built_in">type</span>: ClusterIP</span><br><span class="line">    web:</span><br><span class="line">      port: 80</span><br><span class="line"></span><br><span class="line">  resources: &#123;&#125;</span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="comment"># limits:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line">    <span class="comment"># requests:</span></span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line">  persistence:</span><br><span class="line">    storageClassName: jumpserver-data</span><br><span class="line">    accessModes:</span><br><span class="line">      - ReadWriteMany</span><br><span class="line">    size: 1Gi</span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    finalizers:</span><br><span class="line">      - kubernetes.io/pvc-protection</span><br><span class="line"></span><br><span class="line">  volumeMounts: []</span><br><span class="line"></span><br><span class="line">  volumes: []</span><br><span class="line"></span><br><span class="line">  nodeSelector: &#123;&#125;</span><br><span class="line"></span><br><span class="line">  tolerations: []</span><br><span class="line"></span><br><span class="line">  affinity: &#123;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">helm install jms-k8s jumpserver/jumpserver -n default -f values.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">helm uninstall jms-k8s -n default</span><br></pre></td></tr></table></figure>
<h4 id="六、源码安装"><a href="#六、源码安装" class="headerlink" title="六、源码安装"></a>六、源码安装</h4><p>这个建议去参考下官网编译文档：<a href="https://docs.jumpserver.org/zh/master/dev/build/">https://docs.jumpserver.org/zh/master/dev/build/</a></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/4ddb66736c4148603ac4b0f422ff7130.png) -->
<!-- <img src="4ddb66736c4148603ac4b0f422ff7130.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386760/4ddb66736c4148603ac4b0f422ff7130.png">'); </script><br>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用全部图形化界面相当简单，特别容易上手，简单摸索一下就可以了，这里就不叙述了。这是官方文档地址：<a href="https://docs.jumpserver.org/zh/master/user-guide/assets/user-asset/">https://docs.jumpserver.org/zh/master/user-guide/assets/user-asset/</a><br>大家可以作为参考</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>堡垒机</tag>
      </tags>
  </entry>
  <entry>
    <title>在浏览器输入 URL 回车之后发生了什么（流程图，超详细版）</title>
    <url>/2024/12/26/2024122608/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个问题已经是老生常谈了，更是经常被作为面试的压轴题出现，网上也有很多文章，但最近闲的无聊，然后就自己做了一篇笔记，感觉比之前理解更透彻了。</p>
<span id="more"></span>
<p>这篇笔记是我这两天看了数十篇文章总结出来的，所以相对全面一点，但由于我是做前端的，所以会比较重点分析浏览器渲染页面那一部分，至于其他部分我会罗列出关键词，感兴趣的可以自行查阅，<br><strong>注意</strong>：本文的步骤是建立在，请求的是一个简单的 HTTP 请求，没有 HTTPS、HTTP2、最简单的 DNS、没有代理、并且服务器没有任何问题的基础上，尽管这是不切实际的。</p>
<h2 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a>大致流程</h2><p>1、URL 解析<br>2、DNS 查询<br>3、TCP 连接<br>4、处理请求<br>5、接受响应<br>6、渲染页面</p>
<h2 id="一、URL-解析"><a href="#一、URL-解析" class="headerlink" title="一、URL 解析"></a>一、URL 解析</h2><p><strong>地址解析</strong><br>首先判断你输入的是一个合法的 URL 还是一个待搜索的关键词，并且根据你输入的内容进行自动完成、字符编码等操作。<br><strong>HSTS</strong><br>由于安全隐患，会使用 HSTS 强制客户端使用 HTTPS 访问页面。详见：你所不知道的 HSTS。<br><strong>其他操作</strong><br>浏览器还会进行一些额外的操作，比如安全检查、访问限制（之前国产浏览器限制 996.icu）。<br><strong>检查缓存</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/b9b57a779e5085cacb5c5b2db12aa9c3.png) -->
<!-- <img src="b9b57a779e5085cacb5c5b2db12aa9c3.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/b9b57a779e5085cacb5c5b2db12aa9c3.png">'); </script><br>
<h2 id="二、DNS-查询"><a href="#二、DNS-查询" class="headerlink" title="二、DNS 查询"></a>二、DNS 查询</h2><p><strong>基本步骤</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/0f9b976d36f36f136f057f7ab1b754fc.png) -->
<!-- <img src="0f9b976d36f36f136f057f7ab1b754fc.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/0f9b976d36f36f136f057f7ab1b754fc.png">'); </script><br>
<p><strong>1、浏览器缓存</strong><br>浏览器会先检查是否在缓存中，没有则调用系统库函数进行查询。<br><strong>2、操作系统缓存</strong><br>操作系统也有自己的 DNS缓存，但在这之前，会向检查域名是否存在本地的 Hosts 文件里，没有则向 DNS 服务器发送查询请求。<br><strong>3、路由器缓存</strong><br>路由器也有自己的缓存。<br><strong>4、ISP DNS 缓存</strong><br>ISP DNS 就是在客户端电脑上设置的首选 DNS 服务器，它们在大多数情况下都会有缓存。<br><strong>根域名服务器查询</strong><br>在前面所有步骤没有缓存的情况下，本地 DNS 服务器会将请求转发到互联网上的根域，下面这个图很好的诠释了整个流程：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/096b6a430ae57261fa68cebe7afbbd2c.png) -->
<!-- <img src="096b6a430ae57261fa68cebe7afbbd2c.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/096b6a430ae57261fa68cebe7afbbd2c.png">'); </script><br>
<p><strong>需要注意的点</strong><br>1、递归方式：一路查下去中间不返回，得到最终结果才返回信息（浏览器到本地DNS服务器的过程）<br>2、迭代方式，就是本地DNS服务器到根域名服务器查询的方式。<br>3、什么是 DNS 劫持<br>4、前端 dns-prefetch 优化</p>
<h2 id="三、TCP-连接"><a href="#三、TCP-连接" class="headerlink" title="三、TCP 连接"></a>三、TCP 连接</h2><p>TCP&#x2F;IP 分为四层，在发送数据时，每层都要对数据进行封装：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8773a5b2ee999becaa836ffcaf4c7126.png) -->
<!-- <img src="8773a5b2ee999becaa836ffcaf4c7126.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/8773a5b2ee999becaa836ffcaf4c7126.png">'); </script><br>
<p><strong>1、应用层：发送 HTTP 请求</strong><br>在前面的步骤我们已经得到服务器的 IP 地址，浏览器会开始构造一个 HTTP 报文，其中包括：<br><strong>请求报头（Request Header）：</strong><br>请求方法、目标地址、遵循的协议等等<br><strong>请求主体（其他参数）</strong><br>其中需要注意的点：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">浏览器只能发送 GET、POST 方法，而打开网页使用的是 GET 方法</span><br></pre></td></tr></table></figure>
<p><strong>2、传输层：TCP 传输报文</strong><br>传输层会发起一条到达服务器的 TCP 连接，为了方便传输，会对数据进行分割（以报文段为单位），并标记编号，方便服务器接受时能够准确地还原报文信息。整编：微信公众号，搜云库技术团队，ID：souyunku<br>在建立连接前，会先进行 TCP 三次握手。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关于 TCP/IP 三次握手，网上已经有很多段子和图片生动地描述了。</span><br><span class="line">相关知识点：</span><br></pre></td></tr></table></figure>
<p><strong>1、SYN 泛洪攻击</strong><br><strong>3、网络层：IP协议查询Mac地址</strong><br>将数据段打包，并加入源及目标的IP地址，并且负责寻找传输路线。<br>判断目标地址是否与当前地址处于同一网络中，是的话直接根据 Mac 地址发送，否则使用路由表查找下一跳地址，以及使用 ARP 协议查询它的 Mac 地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意：在 OSI 参考模型中 ARP 协议位于链路层，但在 TCP/IP 中，它位于网络层。</span><br></pre></td></tr></table></figure>
<p><strong>4、链路层：以太网协议</strong><br><strong>以太网协议</strong><br>根据以太网协议将数据分为以“帧”为单位的数据包，每一帧分为两个部分：<br><strong>标头：</strong><br>数据包的发送者、接受者、数据类型<br><strong>数据：</strong><br>数据包具体内容<br><strong>Mac 地址</strong><br>以太网规定了连入网络的所有设备都必须具备“网卡”接口，数据包都是从一块网卡传递到另一块网卡，网卡的地址就是 Mac 地址。每一个 Mac 地址都是独一无二的，具备了一对一的能力。<br><strong>广播</strong><br>发送数据的方法很原始，直接把数据通过 ARP 协议，向本网络的所有机器发送，接收方根据标头信息与自身 Mac 地址比较，一致就接受，否则丢弃。<br><strong>注意</strong>：接收方回应是单播。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相关知识点：</span><br></pre></td></tr></table></figure>
<p>1、ARP 攻击<br><strong>服务器接受请求</strong><br>接受过程就是把以上步骤逆转过来，参见上图。</p>
<h2 id="四、服务器处理请求"><a href="#四、服务器处理请求" class="headerlink" title="四、服务器处理请求"></a>四、服务器处理请求</h2><p><strong>大致流程</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c9d52bbe4ea956afd57f0a8333c5b41e.png) -->
<!-- <img src="c9d52bbe4ea956afd57f0a8333c5b41e.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/c9d52bbe4ea956afd57f0a8333c5b41e.png">'); </script><br>
<p><strong>HTTPD</strong><br>最常见的 HTTPD 有 Linux 上常用的 Apache 和 Nginx，以及 Windows 上的 IIS。<br>它会监听得到的请求，然后开启一个子进程去处理这个请求。整编：微信公众号，搜云库技术团队，ID：souyunku<br><strong>处理请求</strong><br>接受 TCP 报文后，会对连接进行处理，对HTTP协议进行解析（请求方法、域名、路径等），并且进行一些验证：<br>1、验证是否配置虚拟主机<br>2、验证虚拟主机是否接受此方法<br>3、验证该用户可以使用该方法（根据 IP 地址、身份信息等）<br><strong>重定向</strong><br>假如服务器配置了 HTTP 重定向，就会返回一个 301永久重定向响应，浏览器就会根据响应，重新发送 HTTP 请求（重新执行上面的过程）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关于更多：详见这篇文章</span><br></pre></td></tr></table></figure>
<p><strong>URL 重写</strong><br>然后会查看 URL 重写规则，如果请求的文件是真实存在的，比如图片、html、css、js文件等，则会直接把这个文件返回。<br>否则服务器会按照规则把请求重写到 一个 REST 风格的 URL 上。<br>然后根据动态语言的脚本，来决定调用什么类型的动态文件解释器来处理这个请求。<br>以 PHP 语言的 MVC 框架举例，它首先会初始化一些环境的参数，根据 URL 由上到下地去匹配路由，然后让路由所定义的方法去处理请求。</p>
<h2 id="五、浏览器接受响应"><a href="#五、浏览器接受响应" class="headerlink" title="五、浏览器接受响应"></a>五、浏览器接受响应</h2><p>浏览器接收到来自服务器的响应资源后，会对资源进行分析。<br>首先查看 Response header，根据不同状态码做不同的事（比如上面提到的重定向）。<br>如果响应资源进行了压缩（比如 gzip），还需要进行解压。整编：微信公众号，搜云库技术团队，ID：souyunku<br>然后，对响应资源做缓存。<br>接下来，根据响应资源里的 MIME 类型去解析响应内容（比如 HTML、Image各有不同的解析方式）。</p>
<h2 id="六、渲染页面"><a href="#六、渲染页面" class="headerlink" title="六、渲染页面"></a>六、渲染页面</h2><p><strong>浏览器内核</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/d8a939e1e262163834a46250b2abcd79.jpeg) -->
<!-- <img src="d8a939e1e262163834a46250b2abcd79.jpeg"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/d8a939e1e262163834a46250b2abcd79.jpeg">'); </script><br>
<p>不同的浏览器内核，渲染过程也不完全相同，但大致流程都差不多。<br><strong>基本流程</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/487084912cc7985eef359b22fb7d4938.png) -->
<!-- <img src="487084912cc7985eef359b22fb7d4938.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/487084912cc7985eef359b22fb7d4938.png">'); </script><br>
<p><strong>1、HTML 解析</strong><br>首先要知道浏览器解析是从上往下一行一行地解析的。<br>解析的过程可以分为四个步骤：<br><strong>1. 解码（encoding）</strong><br>传输回来的其实都是一些二进制字节数据，浏览器需要根据文件指定编码（例如UTF-8）转换成字符串，也就是HTML 代码。<br><strong>2. 预解析（pre-parsing）</strong><br>预解析做的事情是提前加载资源，减少处理时间，它会识别一些会请求资源的属性，比如 img标签的 src属性，并将这个请求加到请求队列中。<br><strong>3. 符号化（Tokenization）</strong><br>符号化是词法分析的过程，将输入解析成符号，HTML 符号包括，开始标签、结束标签、属性名和属性值。<br>它通过一个状态机去识别符号的状态，比如遇到 &lt;， &gt;状态都会产生变化。<br><strong>4. 构建树（tree construction）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意：符号化和构建树是并行操作的，也就是说只要解析到一个开始标签，就会创建一个 DOM 节点。</span><br></pre></td></tr></table></figure>
<p>在上一步符号化中，解析器获得这些标记，然后以合适的方法创建 DOM对象并把这些符号插入到 DOM对象中。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">		Web page parsing</span><br><span class="line">		<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">				Web page parsing</span><br><span class="line">			<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">				This is an example Web page.</span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8349c36acaf157ad48e41c5735538f9a.jpeg) -->
<!-- <img src="8349c36acaf157ad48e41c5735538f9a.jpeg"/><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/8349c36acaf157ad48e41c5735538f9a.jpeg">'); </script><br>
<p><strong>浏览器容错进制</strong><br>你从来没有在浏览器看过类似”语法无效”的错误，这是因为浏览器去纠正错误的语法，然后继续工作。<br><strong>事件</strong><br>当整个解析的过程完成以后，浏览器会通过 DOMContentLoaded事件来通知 DOM解析完成。<br><strong>2、CSS 解析</strong><br>一旦浏览器下载了 CSS，CSS 解析器就会处理它遇到的任何 CSS，根据语法规范解析出所有的 CSS 并进行标记化，然后我们得到一个规则表。<br><strong>CSS 匹配规则</strong><br>在匹配一个节点对应的 CSS 规则时，是按照从右到左的顺序的，例如：div p{font-size:14px}会先寻找所有的 p标签然后判断它的父元素是否为 div。<br>所以我们写 CSS 时，尽量用 id 和 class，千万不要过度层叠。<br><strong>3、 渲染树</strong><br>其实这就是一个 DOM 树和 CSS 规则树合并的过程。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意：渲染树会忽略那些不需要渲染的节点，比如设置了 display:none的节点。</span><br></pre></td></tr></table></figure>
<p><strong>计算</strong><br>通过计算让任何尺寸值都减少到三个可能之一：auto、百分比、px，比如把 rem转化为 px。<br><strong>级联</strong><br>浏览器需要一种方法来确定哪些样式才真正需要应用到对应元素，所以它使用一个叫做 specificity的公式，这个公式会通过：<br>1、标签名、class、id<br>2、是否内联样式<br>3、 !important<br>然后得出一个权重值，取最高的那个。<br><strong>渲染阻塞</strong><br>当遇到一个 script标签时，DOM 构建会被暂停，直至脚本完成执行，然后继续构建 DOM 树。<br>但如果 JS 依赖 CSS 样式，而它还没有被下载和构建时，浏览器就会延迟脚本执行，直至 CSS Rules 被构建。<br>所有我们知道：<br>1、CSS 会阻塞 JS 执行<br>2、JS 会阻塞后面的 DOM 解析<br><strong>为了避免这种情况，应该以下原则：</strong><br>1、CSS 资源排在 JavaScript 资源前面<br>2、JS 放在 HTML 最底部，也就是 </body>前<br>另外，如果要改变阻塞模式，可以使用 defer 与 async，详见：这篇文章<br><strong>4、布局与绘制</strong><br>确定渲染树种所有节点的几何属性，比如：位置、大小等等，最后输入一个盒子模型，它能精准地捕获到每个元素在屏幕内的准确位置与大小。<br>然后遍历渲染树，调用渲染器的 paint() 方法在屏幕上显示其内容。<br><strong>5、合并渲染层</strong><br>把以上绘制的所有图片合并，最终输出一张图片。<br><strong>6、 回流与重绘</strong><br><strong>回流(reflow)</strong><br>当浏览器发现某个部分发现变化影响了布局时，需要倒回去重新渲染，会从 html标签开始递归往下，重新计算位置和大小。整编：微信公众号，搜云库技术团队，ID：souyunku<br>reflow基本是无法避免的，因为当你滑动一下鼠标、resize 窗口，页面就会产生变化。<br><strong>重绘(repaint)</strong><br>改变了某个元素的背景色、文字颜色等等不会影响周围元素的位置变化时，就会发生重绘。<br>每次重绘后，浏览器还需要合并渲染层并输出到屏幕上。<br>回流的成本要比重绘高很多，所以我们应该尽量避免产生回流。<br>比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display:none 会触发回流，而 visibility:hidden 只会触发重绘。</span><br></pre></td></tr></table></figure>
<p>7、JavaScript 编译执行<br><strong>大致流程</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/912706ef255b4493f3a9ef2f5212a88c.jpeg) -->
<!-- <img src="912706ef255b4493f3a9ef2f5212a88c.jpeg"/><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/912706ef255b4493f3a9ef2f5212a88c.jpeg">'); </script><br>
<p><strong>可以分为三个阶段：</strong><br>1、词法分析<br>JS 脚本加载完毕后，会首先进入语法分析阶段，它首先会分析代码块的语法是否正确，不正确则抛出“语法错误”，停止执行。<br><strong>几个步骤：</strong><br><strong>分词</strong>，例如将 vara&#x3D;2，，分成 var、 a、 &#x3D;、 2这样的词法单元。<br><strong>解析</strong>，将词法单元转换成抽象语法树（AST）。<br><strong>代码生成</strong>，将抽象语法树转换成机器指令。*2、预编译<br>JS 有三种运行环境：<br>1、全局环境<br>2、函数环境<br>3、eval<br>每进入一个不同的运行环境都会创建一个对应的执行上下文，根据不同的上下文环境，形成一个函数调用栈，栈底永远是全局执行上下文，栈顶则永远是当前执行上下文。<br>创建执行上下文<br><strong>创建执行上下文的过程中，主要做了以下三件事：</strong><br>创建变量对象</p>
<pre><code> - 参数、函数、变量
</code></pre>
<p>建立作用域链</p>
<pre><code>- 确认当前执行环境是否能访问变量
</code></pre>
<p>确定 This 指向<br>3、执行<br><strong>JS 线程</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/269e3d81242e87140a5061e292ab4e25.png) -->
<!-- <img src="269e3d81242e87140a5061e292ab4e25.png"/><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/269e3d81242e87140a5061e292ab4e25.png">'); </script><br>
<p>虽然 JS 是单线程的，但实际上参与工作的线程一共有四个：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">其中三个只是协助，只有 JS 引擎线程是真正执行的</span><br></pre></td></tr></table></figure>
<p><strong>JS 引擎线程：</strong><br>也叫 JS 内核，负责解析执行 JS 脚本程序的主线程，例如 V8 引擎<br><strong>事件触发线程：</strong><br>属于浏览器内核线程，主要用于控制事件，例如鼠标、键盘等，当事件被触发时，就会把事件的处理函数推进事件队列，等待 JS 引擎线程执行。整编：微信公众号，搜云库技术团队，ID：souyunku<br><strong>定时器触发线程：</strong><br>主要控制 setInterval和 setTimeout，用来计时，计时完毕后，则把定时器的处理函数推进事件队列中，等待 JS 引擎线程。<br><strong>HTTP 异步请求线程：</strong><br>通过XMLHttpRequest连接后，通过浏览器新开的一个线程，监控readyState状态变更时，如果设置了该状态的回调函数，则将该状态的处理函数推进事件队列中，等待JS引擎线程执行。<br><strong>注：浏览器对同一域名的并发连接数是有限的，通常为 6 个。</strong><br><strong>宏任务</strong><br>分为：<br>1、同步任务：按照顺序执行，只有前一个任务完成后，才能执行后一个任务<br>2、异步任务：不直接执行，只有满足触发条件时，相关的线程将该异步任务推进任务队列中，等待JS引擎主线程上的任务执行完毕时才开始执行，例如异步Ajax、DOM事件，setTimeout等。<br><strong>微任务</strong><br>微任务是ES6和Node环境下的，主要 API 有：Promise， process.nextTick。<br>微任务的执行在宏任务的同步任务之后，在异步任务之前。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/19421fb446e9602f86aa8ac82b3b5cef.png) -->
<!-- <img src="19421fb446e9602f86aa8ac82b3b5cef.png"/><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/19421fb446e9602f86aa8ac82b3b5cef.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c10709fc073f6e13f1a5951872ef7c6a.png) -->
<!-- <img src="c10709fc073f6e13f1a5951872ef7c6a.png"/><br> -->
<script> document.write('<img src="'+ imgurl +'1735386886/c10709fc073f6e13f1a5951872ef7c6a.png">'); </script><br>
<p><strong>代码例子</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">console.log(<span class="string">&#x27;1&#x27;</span>);    <span class="comment">// 宏任务 同步</span></span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">    console.log(<span class="string">&#x27;2&#x27;</span>);    <span class="comment">// 宏任务 异步</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">newPromise(function(resolve) &#123;</span><br><span class="line">    console.log(<span class="string">&#x27;3&#x27;</span>);    <span class="comment">// 宏任务 同步</span></span><br><span class="line">    resolve();</span><br><span class="line">&#125;).then(function() &#123;</span><br><span class="line">    console.log(<span class="string">&#x27;4&#x27;</span>)   <span class="comment">// 微任务</span></span><br><span class="line">&#125;)</span><br><span class="line">console.log(<span class="string">&#x27;5&#x27;</span>)   <span class="comment">// 宏任务 同步</span></span><br></pre></td></tr></table></figure>
<p>以上代码输出顺序为：1,3,5,4,2</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Python实现AI图像识别-身份证识别</title>
    <url>/2024/12/28/2024122801/</url>
    <content><![CDATA[<p>图像识别说白了就是把一张照片上面的文字进行提取，提供工作效率</p>
<span id="more"></span>
<h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>身份证识别主要是把一张身份证照片上面的文字信息进行提取，不用再使用人工去手动抄写了，下面给大家说的这个身份识别主要是使用python+flask+华为云OCR进行实现的。</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol>
<li>申请华为云OCR接口</li>
<li>获取token</li>
<li>调用身份证识别接口</li>
<li>提取身份证信息</li>
</ol>
<h1 id="申请华为云OCR接口"><a href="#申请华为云OCR接口" class="headerlink" title="申请华为云OCR接口"></a>申请华为云OCR接口</h1><p>图像识别主要使用的就是华为云OCR平台申请的接口，访问<a href="https://www.huaweicloud.com/">华为云</a>,访问申请的地址后点击菜单栏中的“控制台”，点击后会进入登录页面。<br><br></p>
<script> document.write('<img src="'+ imgurl +'1735390928/b0c1befb904cc197a0c8a122c57965ef.png">'); </script><br>

<script> document.write('<img src="'+ imgurl +'1735390928/a0d36bcb94af17c4c4d4f594efd4c104.png">'); </script><br>

<p>登录成功后进入控制台，依次单击“服务列表”-“人工智能”-“文字识别OCR”</p>
<script> document.write('<img src="'+ imgurl +'1735390928/33ab766af91d413fe6d75ae8d4074cd7.png">'); </script><br>

<p>进入后点击身份证识别后面的“开通服务”即可，（这里需要主要的是免费开通的身份证识别服务仅有1000次的免费调用次数，超过次数将会收费，建议购买套餐包，购买可以找我，我可以给优惠哦）</p>
<script> document.write('<img src="'+ imgurl +'1735390928/7d21941155eb2da1ae438965dd5c4fdd.png">'); </script><br>

<h1 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h1><p>获取token值时你需要知道你的以下信息：</p>
<ol>
<li>IAM用户所属账号名</li>
<li>IAM用户名</li>
<li>IAM用户的登录密码</li>
<li>IAM用户所属账号的项目名称</li>
</ol>
<p>首先就是获取IAM用户所属账号名，IAM用户所属账号名为你登陆的那个账号</p>
<p>获取IAM用户名，选择右上角“用户名”-点击“统一身份认证”</p>
<script> document.write('<img src="'+ imgurl +'1735390928/388e53f47436cfc19c9bd88970ceafb3.png">'); </script><br>

<p>里面的用户即为IAM用户名</p>
<script> document.write('<img src="'+ imgurl +'1735390928/e13b4ea6904a63fca1e441c31fa7cb0c.png">'); </script><br>

<p>获取IAM用户所属账号的项目名称，点击“项目”</p>
<script> document.write('<img src="'+ imgurl +'1735390928/58566a314a9f1691e42caa14047659aa.png">'); </script><br>

<p>里面的项目很多，你只需要记录你开启OCR身份证识别区域的项目名称ID就可以了，比如我选择的北京四所以我的项目名称就是：“cn-north-4”</p>
<script> document.write('<img src="'+ imgurl +'1735390928/3452dc9bbad70281d681a016853feb09.png">'); </script><br>

<p>知道了这些信息之后，后面就是如何通过这些信息去获取token了，下面我就直接上代码了哦</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 下面url为华为云获取token的接口，这个接口基本一致，需要注意的是“iam.cn-north-4.myhuaweicloud.com”这个需要根据具体需求进行修改，不同区域项目不同</span></span><br><span class="line">url = <span class="string">&quot;https://iam.cn-north-4.myhuaweicloud.com/v3/auth/tokens&quot;</span></span><br><span class="line"><span class="comment"># 头部信息</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line"><span class="comment"># json内容，需要上传进行做验证</span></span><br><span class="line">payload = &#123;</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;identity&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;methods&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;password&quot;</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">&quot;password&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;user&quot;</span>: &#123;</span><br><span class="line">                        <span class="comment"># name值为你的IAM账号名</span></span><br><span class="line">                            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">                            <span class="comment"># password值为你的IAM密码</span></span><br><span class="line">                            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                            <span class="comment"># name值为你的主账号的账号名</span></span><br><span class="line">                                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;XXX&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;scope&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;project&quot;</span>: &#123;</span><br><span class="line">                    <span class="comment"># name值为你的项目ID</span></span><br><span class="line">                        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cn-north-4&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 使用POST上传头部内容和body内容</span></span><br><span class="line">response = requests.post(url, headers=headers, json=payload)</span><br><span class="line"><span class="comment"># 获取token值</span></span><br><span class="line">token = response.headers[<span class="string">&#x27;X-Subject-Token&#x27;</span>]</span><br><span class="line"><span class="comment"># 打印token值</span></span><br><span class="line"><span class="built_in">print</span>(token)</span><br></pre></td></tr></table></figure>
<p>打印出来的值是类似于下面这种的字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MIIVfgYJKoZIhvcNAQcCoIIVbzCCFWsCAQExDTALBglghkgBZQMEAgEwghOQBgkqhkiG9w0BBwGgghOBBIITfXsidG9rZW4iOns123iZXhwaXJlc19hdCI6IjIwMjEtMDgtMTdUMTE6NTM6MTEuNTkyMDAwWiIsIm1ldGhvZHMiOlsicGFzc3dvcmQiXSwiY2F0YWxvZyI6W10sInJvbGVzIjpbeyJuYW1lIjoidGVfYWRtaW4iLCJpZCI6IjAifSx7Im5hbWUiOiJ0ZV9hZ2VuY3kiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jc2UyLjBfY2ZnIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX3Nwb3RfaW5zdGFuY2UiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9pdmFzX3Zjcl92Y2EiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9hX2NuLXNvdXRoLTRjIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX2thZTEiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9ldnNfZXNzZCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2NzZTIuMF9ndm4iLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9kd3NfcG9jIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfY2JyX2ZpbGUiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9lY4563Nfa2MxX3VzZXJfZGVmaW5lZCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX21lZXRpbmdfZW5kcG9pbnRfYnV5IiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfbWFwX25scCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3Npc19zYXNyX2VuIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfY2Z3IiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfc2FkX2JldGEiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9zZXJ2aWNlc3RhZ2VfbWdyX2R0bV9lbiIsImlkIjoiMCJ9LHsibmFt123ZSI6Im9wX2dhdGVkX2Vjc19ncHVfcDJzIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZXZzX3ZvbHVtZV9yZWN5Y2xlX2JpbiIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2Rjc19kY3MyLWVudGVycHJpc2UiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jc2UyLjAiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF92Y3AiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9mdW5jdGlvbmdyYXBoX3YyIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfY3ZyIiwiaW456QiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfbXVsdGlfYmluZCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2FfY24tbm9ydGgtOWMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9vcF9nYXRlZF9pb3RzdGFnZSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2VpcF9wb29sIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfcm9tYWV4Y2hhbmdlIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYV9hcC1zb3V0aGVhc3QtM2QiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9wcm9qZWN0X2RlbCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3NoYXJlQmFuZHdpZHRoX3FvcyIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2NjaV9vY2VhbiIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2Nlc19yZXNvdXJjZWdyb3VwX1233RhZyIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2V2c19yZXR5cGUiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9lY3NfaXIzeCIsImlkIjoiMCJ9LHsibmFtZS456I6Im9wX2dhdGVkX2VsYl9ndWFyYW50ZWVkIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYV9jbi1zb3V0aHdlc3QtMmIiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jaWUiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9zZnN0dXJibyIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3Zwbl92Z3dfaW50bCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2h2X3ZlbmRvciIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2FfY24tbm9ydGgtNGUiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9hX2NuLW5vcnRoLTRkIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX2dwdV9nNnYiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9JRUMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9kYXl1X2RsbV9jbHVzdGVyIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfaW50bF9jb25maWd1cmF0aW9uIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfY2NlX21jcF90aGFpIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZW456Rfc2VydmljZXN0YWdlX21ncl9kdG0iLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9hX2NuLW5vcnRoLTRmIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfdWdvX3B1YmxpY3Rlc3QiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9tdGQiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9lY3NfZ3B1X2c1ciIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3drc19rcCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2NjaV9rdW5wZW5nIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfcmlfZHdzIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfdnBjX2Zsb3dfbG9nIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYXRjIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYWFkX2JldGFfaWRjIiwiaWQiOiIwIn0seyJuY456W1lIjoib3BfZ2F0ZWRfY3Nic19yZXBfYWNjZWxlcmF0aW9uIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX2Rpc2tB123Y2MiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9haXNfYXBpX2ltYWdlX2FudGlfYWQiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9kc3NfbW9udGgiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jc2ciLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9kZWNfbW9udGhfdXNlciIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2llZl9lZGdlYXV0b25vbXkiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF92aXBfYmFuZHdpZHRoIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfb3NjIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX29sZF9yZW91cmNlIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfd2VsaW5rYnJpZGdlX2VuZHBvaW50X2J1eSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2llZi1pb456nRsIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWNzX2FsZyIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3BzdG5fZW5kcG9pbnRfYnV5IiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfbWFwX29jciIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2Rsdl9vcGVuX2JldGEiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9pZXMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9vYnNfZHVhbHN0YWNrIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZWRjbSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2NzYnNfcmVzdG9yZSIsImlkIjoiMCJ9LHsibmFtZSI6Im9123wX2dhdGVkX2l2c2NzIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ4562F0ZWRfZWNzX2M2YSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX3Zwbl92Z3ciLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9zbW5fY2FsbG5vdGlmeSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2NjZV9hc21faGsiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jc2JzX3Byb2dyZXNzYmFyIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfZXZzX3Bvb2xfY2EiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9iY2UiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9lY3Nfb2ZmbGluZV9kaXNrXzQiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9lcHMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9jc2JzX3Jlc3RvcmVfYWxsIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfbDJjZyIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX4562dhdGVkX2ludGxfdnBjX25hdCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2Zjc19wYXkiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9sMmNnX2ludGwiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9hX2FwLXNvdXRoZWFzdC0xZSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2FfcnUtbW9zY293LTFiIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYV9hcC1zb3V0aGVhc3QtMWQiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9hX2FwLXNvdXRoZWFzdC0xZiIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2RjczItcmVkaXM2LWdlbmVyaWMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9vcF9nYXRlZF9tZXN456zYWdlb3ZlcjVnIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfdGljc19vcGVuX2JldGEiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRl123ZF9lY3NfYzciLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9tYXBfdmlzaW9uIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfcmVzdHJpY3RlZCIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2Vjc19yaSIsImlkIjoiMCJ9LHsibmFtZSI6Im9wX2dhdGVkX2FfYXAtc291dGhlYXN0LTFjIiwiaWQiOiIwIn0seyJuYW1lIjoib3BfZ2F0ZWRfYV9ydS1ub3J0aHdlc3QtMmMiLCJpZCI6IjAifSx7Im5hbWUiOiJvcF9nYXRlZF9pZWZfcGxhdGludW0iLCJpZCI6IjAifV0sInByb2plY3QiOnsiZG9tYWluIjp7Im5hbWUiOiJibHh0Y2xvdWQiLCJpZCI6IjA0ZGZkNjA5NDE4MDBmZTgwZmFmYzAxY2ZlNWUyNGMwIn0sIm5hbWUiOiJjbi1ub3J0aC00IiwiaWQiOiIwNGRmZDYwOTk2MDAwZmU4MmZiNWMwMWMxZDU5NDFjOSJ9LCJpc3N1ZWRfYXQiOiIyMDIxLTA4LTE2VDExOjUzOjExLjU5MjAwMFoiLCJ1c4562VyIjp7ImRvbWFpbiI6eyJuYW1lIjoiYmx4dGNsb3VkIiwiaWQiOiIwNGRmZDYwOTQxODAwZmU4MGZhZmMwMWNmZTVlMjRjMCJ9LCJuYW1lIjoiYmx4dCIsInBhc3N3b3JkX2V4cGlyZXNfYXQiOiIiLCJpZCI6IjBkNGUyNGI3YmEwMGY1ODgxZjcyYzAxYzVhYjU1NmY5In19fTGCAcEwggG9AgEBMIGXMIGJMQswCQYDVQQGEwJDTjESMBAGA1UECAwJR3VhbmdEb25nMREwDwYDVQQH123DAhTaGVuWmhlbjEuMCwGA1UECgwlSHVhd2VpIFNvZnR3YXJlIFRlY2hub2xvZ2llcyBDby4sIEx0ZDEOMAwGA1UECwwFQ2xvdWQxEzARBgNVBAMMCmNhLmlhbS5wa2kCCQDcsytdEGFqEDALBglghkgBZQMEAgEwDQYJKoZIhvcNAQEBBQAEggEAJK1UkA7koUihoCyU8FwcUFpPA4x6ylmTvQDPk2KbYRMVA+gnSybo6vgxf32hcHi-1238KehFzgXhJe59fOYyc7hz+qZ5456iYD0pSGqjICZepOBeTvywtsE2fgHdlQq4RZMDm1bkVj46OVNGszzpz8IGecZxRDhxDfBbVsllo9T41QD28o9QZUNyhhXa-ZIS2UdDK-q7gBsR3mT2LRqjQ+J6vpcCzAe6v71IHAf77lgE+vwg7f6qOfhYjRNB9kSC2L1YxJ1eS9j5pzuqlnK+9BOv2U3BIaKsP9yNiP-luS78LzwuEG2rD9OInMst7bCr7HeWT2bZ8gCT4567BvsONvGqVvr3AA==</span><br></pre></td></tr></table></figure>
<h1 id="调用身份证识别接口"><a href="#调用身份证识别接口" class="headerlink" title="调用身份证识别接口"></a>调用身份证识别接口</h1><p>下面就是调用识别接口，调用这个接口需要了解以下信息</p>
<ol>
<li>URL</li>
<li>Header参数</li>
<li>Body参数</li>
</ol>
<p>首先是<strong>URL</strong><br>POST https:&#x2F;&#x2F;{endpoint}&#x2F;v2&#x2F;{project_id}&#x2F;ocr&#x2F;id-card</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>endpoint</td>
<td>项目接口域名，这里还是需要确定开通服务的区域，每个区域不同的域名</td>
</tr>
<tr>
<td>project_id</td>
<td>项目ID，不出意外的话就是你上面获取token的项目ID</td>
</tr>
<tr>
<td><strong>请求参数</strong></td>
<td></td>
</tr>
<tr>
<td>请求Header参数</td>
<td></td>
</tr>
<tr>
<td>参数</td>
<td>说明</td>
</tr>
<tr>
<td>–</td>
<td>–</td>
</tr>
<tr>
<td>X-Auth-Token</td>
<td>用户Token，就是上面获取到的token值</td>
</tr>
<tr>
<td>Content-Type</td>
<td>发送的实体的MIME类型，参数值为“application&#x2F;json”</td>
</tr>
<tr>
<td>请求Body参数</td>
<td></td>
</tr>
<tr>
<td>参数</td>
<td>说明</td>
</tr>
<tr>
<td>–</td>
<td>–</td>
</tr>
<tr>
<td>image</td>
<td>图像数据，base64编码，要求base64编码后大小不超过10MB。图片最小边不小于15px，最长边不超过8000px。支持JPEG、JPG、PNG、BMP、TIFF格式。</td>
</tr>
<tr>
<td>url</td>
<td>图片的url路径</td>
</tr>
<tr>
<td>side</td>
<td>front：身份证人像面，back：身份证国徽面</td>
</tr>
<tr>
<td>了解了上面的一系列信息之后，后面就是如何写代码了，下面就是直接代码</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># url值</span></span><br><span class="line">url = https://&#123;endpoint&#125;/v2/&#123;project_id&#125;/ocr/<span class="built_in">id</span>-card</span><br><span class="line"><span class="comment"># 上面获取到的token值</span></span><br><span class="line">token = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 设置头部信息</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>, <span class="string">&#x27;X-Auth-Token&#x27;</span>: token&#125;</span><br><span class="line"><span class="comment"># 图片路径</span></span><br><span class="line">imagepath = <span class="string">r&#x27;./static/XXX.jpg&#x27;</span></span><br><span class="line"><span class="comment"># 设置图片</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(imagepath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> bin_data:</span><br><span class="line">     image_data = bin_data.read()</span><br><span class="line"><span class="comment"># 使用图片的base64编码</span></span><br><span class="line">image_base64 = base64.b64encode(image_data).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment"># url与image参数二选一</span></span><br><span class="line">payload = &#123;<span class="string">&quot;image&quot;</span>: image_base64&#125;</span><br><span class="line"><span class="comment"># 上传参数</span></span><br><span class="line">response = requests.post(url, headers=headers, json=payload)</span><br><span class="line"><span class="comment"># 打印识别的信息</span></span><br><span class="line">response = response.text</span><br><span class="line"><span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure>
<p>最后识别出来的结果类似于下面的信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;result&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;XXX&quot;,</span><br><span class="line">    &quot;sex&quot;: &quot;男&quot;,</span><br><span class="line">    &quot;ethnicity&quot;: &quot;汉&quot;,</span><br><span class="line">    &quot;birth&quot;: &quot;XXX&quot;,</span><br><span class="line">    &quot;address&quot;: &quot;XXX&quot;,</span><br><span class="line">    &quot;number&quot;: &quot;XXX&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果想获取其中的某一个值的话需要先转换为字典，通过字典再进行单一读取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换为字典</span></span><br><span class="line">test = json.loads(response)</span><br><span class="line"><span class="comment"># 从字典中获取相应的值</span></span><br><span class="line">username = test[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>到这里就已经完成了这个项目</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>上面已经简单说明了如何调用相应的接口去识别身份证了，下面我把源码给到大家吧，大家可以作为参考哦，下面是使用python+flask+redis+华为云OCR实现的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask_redis <span class="keyword">import</span> FlaskRedis</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置redis连接地址</span></span><br><span class="line">REDIS_URL = <span class="string">&#x27;redis://127.0.0.1:6379/0&#x27;</span></span><br><span class="line"><span class="comment"># 实例化redis</span></span><br><span class="line">rd = FlaskRedis(app, decode_responses=<span class="literal">True</span>)	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">	<span class="comment"># 获取redis缓存中token</span></span><br><span class="line">    token = rd.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="comment"># 判断redis中是否有token值，有则直接使用，没有则获取token值并写入redis中</span></span><br><span class="line">    <span class="keyword">if</span> token <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        url = <span class="string">&quot;https://iam.cn-north-4.myhuaweicloud.com/v3/auth/tokens&quot;</span></span><br><span class="line">        headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;identity&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;methods&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;password&quot;</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">&quot;password&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;user&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;XXX&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;XXX&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;scope&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;project&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cn-north-4&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url, headers=headers, json=payload)</span><br><span class="line">        requst = response.ok</span><br><span class="line">        <span class="comment"># 判断是否获取token值成功</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> requst:</span><br><span class="line">            error = <span class="string">&quot;获取token失败&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>, db=error)</span><br><span class="line">        <span class="comment"># 从返回值中获取token值    </span></span><br><span class="line">        token = response.headers[<span class="string">&#x27;X-Subject-Token&#x27;</span>]</span><br><span class="line">        <span class="comment"># 在redis添加token值，下次不再调用，并设置缓存时间为24小时</span></span><br><span class="line">        relue = rd.<span class="built_in">set</span>(<span class="string">&#x27;token&#x27;</span>, token, ex=<span class="number">60</span> * <span class="number">1440</span>)</span><br><span class="line">        <span class="comment"># 判断是否再redis中添加token值成功</span></span><br><span class="line">        <span class="keyword">if</span> relue != <span class="number">1</span>:</span><br><span class="line">            error = <span class="string">&quot;写入错误&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>, db=error)</span><br><span class="line">	</span><br><span class="line">    url = <span class="string">&quot;https://ocr.cn-north-4.myhuaweicloud.com/v2/cn-north-4/ocr/id-card&quot;</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>, <span class="string">&#x27;X-Auth-Token&#x27;</span>: token&#125;</span><br><span class="line"></span><br><span class="line">    imagepath = <span class="string">r&#x27;./static/XXX.jpg&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(imagepath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> bin_data:</span><br><span class="line">        image_data = bin_data.read()</span><br><span class="line">    image_base64 = base64.b64encode(image_data).decode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment"># 使用图片的base64编码</span></span><br><span class="line">    payload = &#123;<span class="string">&quot;image&quot;</span>: image_base64&#125;  <span class="comment"># url与image参数二选一</span></span><br><span class="line">    response = requests.post(url, headers=headers, json=payload)</span><br><span class="line">    <span class="comment"># 判断是否识别成功</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> response.ok:</span><br><span class="line">        error = <span class="string">&quot;识别失败，请联系管理员&quot;</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>, db=error)</span><br><span class="line">    response = response.text</span><br><span class="line">    test = json.loads(response)</span><br><span class="line">    username = test[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;test.html&#x27;</span>, db=username)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>一文快速掌握华为云IPv6基础知识及使用指南</title>
    <url>/2024/12/28/2024122802/</url>
    <content><![CDATA[<p>随着5G、物联网等新兴技术领域的发展，IP空间需求巨大，IPv6成为万物互联的基础，势在必行；华为云作为IPv6成熟商用开拓者，针对金融、广电、媒资等不同行业推出IPv6解决方案，助力企业平滑升级到IPv6基础架构。本文带您十分钟了解华为云IPv6。<span id="more"></span></p>
<h3 id="一、华为云IPv6解决方案：IPv6-EIP和IPv6-双栈"><a href="#一、华为云IPv6解决方案：IPv6-EIP和IPv6-双栈" class="headerlink" title="一、华为云IPv6解决方案：IPv6-EIP和IPv6-双栈"></a>一、华为云IPv6解决方案：IPv6-EIP和IPv6-双栈</h3><ol>
<li><strong>IPv6-EIP</strong></li>
</ol>
<p>简单来说，IPv6-EIP就是申请一个弹性公网IP（EIP），此EIP既有一个IPv4地址，又有一个IPv6地址。当然也可以将已有的IPv4 EIP开启IPv6转换。开启IPv6转换后，此EIP将提供IPv4和IPv6弹性公网IP地址，原有IPv4业务可以快速为IPv6用户提供访问能力。</p>
<script> document.write('<img src="'+ imgurl +'1735393144/70c2b91f31207da58a604671566d132d.png">'); </script><br>

<p>IPv6-EIP的原理如上图所示：前端网络改造成能够同时支持IPv4和IPv6终端访问的双栈网络，后端业务网络和应用暂不改造，在后端网络和前端网络之间部署NAT64网络转换（即华为云IPv6-EIP），将前端IPv6地址转换为后端IPv4地址；客户内部业务网络侧实现“零”改造支持IPv6。</p>
<ol>
<li><strong>IPv6-双栈</strong></li>
</ol>
<p>相较于IPv6-EIP，IPv6-双栈进行的IPv6改造更加彻底和复杂。IPv6双栈为实例提供两个不同版本的IP地址：IPv4地址和IPv6地址，这两个IP地址不仅可以被其它网络访问，也可以主动访问其他IP，是所谓的“真”IPv6。</p>
<script> document.write('<img src="'+ imgurl +'1735393144/b8f3ae85f724e0aab0d5ca2499999749.png">'); </script><br>

<p>IPv6-双栈的原理如上图所示：前端接入网络改造成能够同时支持IPv4和IPv6终端访问的双栈网络，企业后端应用系统也改造成双栈，网络端到端支持IPv4和IPv6的业务接入。</p>
<ol>
<li><strong>IPv6-EIP和IPv6-双栈的异同</strong><br>如果做个形象的比喻，我们可以这么理解：<br>IPv4——“<strong>法语</strong>”<br>IPv6——“<strong>英语</strong>”<br>IPv4和IPv6是两门不同的“语言”，二者之间不可直接进行通信。如果把IPv4比作法语，把IPv6比作英语，一个只会其中一门语言的人是无法理解另外一门语言的，IPv4地址也不可与IPv6地址直接通信。<br>IPv6-EIP——“<strong>英语</strong>”**-<strong>“</strong>法语<strong>”</strong>翻译器**<br>IPv6-EIP相当于在两个人之间加了一个“英语”-“法语”翻译器，可以将IPv6地址NAT成IPv4地址。但是这个翻译器的翻译功能是单向的，只支持将外部网络的IPv6地址转换为IPv4地址。<br>IPv6-双栈——既懂法语又懂英语的人<br>IPv6-双栈相当于将后端的服务器训练成了一个既能理解法语也能理解英语的人，服务器不仅能“听懂”IPv4和IPv6，也能主动进行IPv4和IPv6访问。</li>
</ol>
<script> document.write('<img src="'+ imgurl +'1735393144/a721999c4936e63afa4cc73dda481c5a.png">'); </script><br>

<ol>
<li><strong>如何选择IPv6-EIP和IPv6-双栈？</strong><br>如果只需要为使用IPv6客户端的用户提供访问服务，则可使用：IPv6-EIP或者IPv6-双栈。推荐使用IPv6-EIP，更加简单便捷。<br>如果应用既需要为使用IPv6终端的用户提供访问服务，又需要对这些访问来源进行数据分析处理，则必须使用IPv6-双栈。<br>如果应用系统与其他系统（例如：数据库系统）、应用系统之间需要使用IPv6进行访问，则必须使用IPv6-双栈。</li>
</ol>
<h3 id="二、如何使用华为云IPv6-EIP和IPv6-双栈"><a href="#二、如何使用华为云IPv6-EIP和IPv6-双栈" class="headerlink" title="二、如何使用华为云IPv6-EIP和IPv6-双栈"></a>二、如何使用华为云IPv6-EIP和IPv6-双栈</h3><ol>
<li><strong>IPv6-EIP使用指导</strong></li>
</ol>
<p>1)IPv6-EIP目前正在公测中，目前已支持华南-广州、华北-北京一、华北-北京四、华东-上海二、华东-上海一，使用前请确认是否已申请IPv6-EIP公测。可以在管理控制台选择“网络 &gt; 弹性公网IP”，单击“IPv6 EIP”进入公测申请页面。<br>2)使用方法<br>a)购买EIP时开启IPv6转换，如下图所示：</p>
<script> document.write('<img src="'+ imgurl +'1735393144/5b8a73abef21d28b81fca199df025d6d.png">'); </script><br>

<p>或者购买后在EIP界面“更多”处开启IPv6转换：</p>
<script> document.write('<img src="'+ imgurl +'1735393144/cfbdfb3a5553518ccec5a355c54f5082.png">'); </script><br>

<p>b) EIP绑定的ECS的安全组出入方向放通198.19.0.0&#x2F;16。<br>如果ECS所在的子网设置了网络ACL，ACL中同样要放通198.19.0.0&#x2F;16。<br>因为IPv6 弹性公网IP采用NAT64技术，入方向的源IP地址经过NAT64转换后，会从IPv6地址转换为198.19.0.0&#x2F;16之间的某个IPv4地址，源端口随机，目的IP为本机的内部私有IPv4地址，目的端口不变。</p>
<script> document.write('<img src="'+ imgurl +'1735393144/d074c2da8f163ac988d74e38dc7c92f8.png">'); </script><br>

<p>如果在后端服务器内抓包，可以看到源IP确实是198.19.0.0&#x2F;16网段的一个地址，如下图：</p>
<script> document.write('<img src="'+ imgurl +'1735393144/7bbd8eca4df220544149e177a0184bb3.png">'); </script><br>

<p>3)功能验证<br>如何测试IPv6-EIP是否能被访问？可以使用Ping探测网站进行ping测试，如图：</p>
<script> document.write('<img src="'+ imgurl +'1735393144/abd23fe7a13f28dd0edfbf82604d2c0c.png">'); </script><br>

<p>由于IPv6的广域网尚未成熟，出现少量丢包属于正常现象，可以忽略。</p>
<ol>
<li><strong>IPv6-双栈使用指导</strong></li>
</ol>
<ol start="2">
<li>重点说明<br>a) IPv6-双栈目前正在公测中，使用前请确认是否已申请了IPv6-双栈公测。公测期间，只有选择如下类型的ECS才能体验IPv6-双栈，请务必选择支持的区域和规格：<br>“华北-北京四”区域，“可用区2”：sn3；<br>“华东-上海一”区域，“可用区1”：c3，m3，“可用区2”：c3。<br>b) 当前IPv6-双栈仅支持按带宽计费（按流量计费正在开发中）。<br>2)使用方法<br>IPv6-双栈要在VPC侧、ECS侧和镜像侧三方面进行配置。<br>a) 申请公测。<br>b) 进行VPC侧配置：</li>
</ol>
<ul>
<li>创建IPv6子网，开启子网的IPv6功能：</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735393144/63ffba85e58a252f59ffbb6cff7d961e.png">'); </script><br>

<ul>
<li>添加IPv6安全组规则和ACL规则：</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735393144/1cfb81cef301aac19e6dbf9a72961600.png">'); </script><br>

<script> document.write('<img src="'+ imgurl +'1735393144/c872d41292b220f671b3af1dabda5e14.png">'); </script><br>

<p>IPv6代表所有IP地址的IP：::&#x2F;0（冒号为英文冒号），对应IPv4的0.0.0.0&#x2F;0。</p>
<script> document.write('<img src="'+ imgurl +'1735393144/43d3c05fd7195728a923754b3508c4d1.png">'); </script><br>

<p>IPv6地址的表示方法：八组四位16进制，可以省略前导0，::代表一系列0。</p>
<ul>
<li>购买共享带宽：</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735393144/bd3ee8dc7628514f32917dd32ccc7618.png">'); </script><br>

<p>c) 进行ECS侧配置：<br>购买指定region指定机型的ECS：<br>“华北-北京四”区域，“可用区2”：sn3；<br>“华东-上海一”区域，“可用区1”：c3，m3，“可用区2”：c3。</p>
<script> document.write('<img src="'+ imgurl +'1735393144/1d43324bac01f95e5ad1dd36f733aa56.png">'); </script><br>

<p>如果出现上述提示则说明选择的机型可以使用IPv6-双栈，选择“自动分配IPv6地址”。<br>d) 进行镜像侧配置，根据不同的操作系统配置IPv6：<br>以常见的CentOS公共镜像为例，手动获取IPv6地址：</p>
<ul>
<li>下载对应系统版本的工具ipv6-setup-rhel。执行命令：wget <a href="https://ecs-instance-driver.obs.cn-north-1.myhwclouds.com/ipv6/ipv6-setup-rhel">https://ecs-instance-driver.obs.cn-north-1.myhwclouds.com/ipv6/ipv6-setup-rhel</a></li>
<li>添加执行权限：chmod +x ipv6-setup-rhel</li>
<li>指定一个网卡设备，配置动态获取IPv6地址：.&#x2F;ipv6-setup-rhel –dev eth0</li>
<li>执行ifconfig eth0，如果能看到与console网卡界面一致IPv6地址，即说明配置成功：</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735393144/945458a567cb550ac6d3bc5a4a0df153.png">'); </script><br>

<p>更多操作系统的配置可以参考：<a href="https://support.huaweicloud.com/ims_faq/ims_faq_0046.html">https://support.huaweicloud.com/ims_faq/ims_faq_0046.html</a><br>3)功能验证<br>被访问连通性测试：同IPv6-EIP。<br>访问连通性测试：ping常见的支持IPv6访问的网站，比如ping6 <a href="http://www.qq.com/">www.qq.com</a></p>
<script> document.write('<img src="'+ imgurl +'1735393144/c1fb2af626d48b884021d62453de96b5.png">'); </script><br>]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
        <tag>IPV6</tag>
      </tags>
  </entry>
  <entry>
    <title>（超全）Python汇总篇，200+Python标准库介绍</title>
    <url>/2024/12/28/2024122803/</url>
    <content><![CDATA[<h3 id="关于Python标准库"><a href="#关于Python标准库" class="headerlink" title="关于Python标准库"></a>关于Python标准库</h3><p>众所周知，Python是一个依赖强大的组件库完成对应功能的语言，为了便捷实现各项功能，前辈大牛们打造了多种多样的工具库公开提供给大众使用，而越来越多的库已经因为使用的广泛和普遍及其功能的强大，已经成为Python的标准库。</p>
<span id="more"></span>
<p>时至今日，Python 标准库已经非常庞大，所提供的组件涉及范围十分广泛，正如本文后面的内容中所显示的。这个库包含了多个内置模块 (以 C 编写)，Python 程序员必须依靠它们来实现系统级功能，例如文件 I&#x2F;O，此外还有大量以 Python 编写的模块，提供了日常编程中许多问题的标准解决方案。其中有些模块经过专门设计，通过将特定平台功能抽象化为平台中立的 API 来鼓励和加强 Python 程序的可移植性。</p>
<p>Windows 版本的 Python 安装程序通常包含整个标准库，往往还包含许多额外组件。对于类 Unix 操作系统，Python 通常会分成一系列的软件包，因此可能需要使用操作系统所提供的包管理工具来获取部分或全部可选组件。</p>
<p>在这个标准库以外还存在成千上万并且不断增加的其他组件 (从单独的程序、模块、软件包直到完整的应用开发框架)，均可以在网络上搜索到并下载使用。</p>
<blockquote>
<p><strong>文本</strong><br>string：通用字符串操作<br>re：正则表达式操作<br>difflib：差异计算工具<br>textwrap：文本填充<br>unicodedata：Unicode字符数据库<br>stringprep：互联网字符串准备工具<br>readline：GNU按行读取接口<br>rlcompleter：GNU按行读取的实现函数</p>
</blockquote>
<blockquote>
<p><strong>二进制数据</strong><br>struct：将字节解析为打包的二进制数据<br>codecs：注册表与基类的编解码器</p>
</blockquote>
<blockquote>
<p><strong>数据类型</strong><br>datetime：基于日期与时间工具<br>calendar：通用月份函数<br>collections：容器数据类型<br>collections.abc：容器虚基类<br>heapq：堆队列算法<br>bisect：数组二分算法<br>array：高效数值数组<br>weakref：弱引用<br>types：内置类型的动态创建与命名<br>copy：浅拷贝与深拷贝<br>pprint：格式化输出<br>reprlib：交替repr()的实现</p>
</blockquote>
<blockquote>
<p><strong>数学</strong><br>numbers：数值的虚基类<br>math：数学函数<br>cmath：复数的数学函数<br>decimal：定点数与浮点数计算<br>fractions：有理数<br>random：生成伪随机数</p>
</blockquote>
<blockquote>
<p><strong>函数式编程</strong><br>itertools：为高效循环生成迭代器<br>functools：可调用对象上的高阶函数与操作<br>operator：针对函数的标准操作</p>
</blockquote>
<blockquote>
<p><strong>文件与目录</strong><br>os.path：通用路径名控制<br>fileinput：从多输入流中遍历行<br>stat：解释stat()的结果<br>filecmp：文件与目录的比较函数<br>tempfile：生成临时文件与目录<br>glob：Unix风格路径名格式的扩展<br>fnmatch：Unix风格路径名格式的比对<br>linecache：文本行的随机存储<br>shutil：高级文件操作<br>macpath：MacOS 9路径控制函数</p>
</blockquote>
<blockquote>
<p><strong>持久化</strong><br>pickle：Python对象序列化<br>copyreg：注册机对pickle的支持函数<br>shelve：Python对象持久化<br>marshal：内部Python对象序列化<br>dbm：Unix“数据库”接口<br>sqlite3：针对SQLite数据库的API2.0</p>
</blockquote>
<blockquote>
<p><strong>压缩</strong><br>zlib：兼容gzip的压缩<br>gzip：对gzip文件的支持<br>bz2：对bzip2压缩的支持<br>lzma：使用LZMA算法的压缩<br>zipfile：操作ZIP存档<br>tarfile：读写tar存档文件</p>
</blockquote>
<blockquote>
<p><strong>文件格式化</strong><br>csv：读写CSV文件<br>configparser：配置文件解析器<br>netrc：netrc文件处理器<br>xdrlib：XDR数据编码与解码<br>plistlib：生成和解析Mac OS X.plist文件</p>
</blockquote>
<blockquote>
<p><strong>加密</strong><br>hashlib：安全散列与消息摘要<br>hmac：针对消息认证的键散列</p>
</blockquote>
<blockquote>
<p><strong>操作系统工具</strong><br>os：多方面的操作系统接口<br>io：流核心工具<br>time：时间的查询与转化<br>argparser：命令行选项、参数和子命令的解析器<br>optparser：命令行选项解析器<br>getopt：C风格的命令行选项解析器<br>logging：Python日志工具<br>logging.config：日志配置<br>logging.handlers：日志处理器<br>getpass：简易密码输入<br>curses：字符显示的终端处理<br>curses.textpad：curses程序的文本输入域<br>curses.ascii：ASCII字符集工具<br>curses.panel：curses的控件栈扩展<br>platform：访问底层平台认证数据<br>errno：标准错误记号<br>ctypes：Python外部函数库</p>
</blockquote>
<blockquote>
<p><strong>并发</strong><br>threading：基于线程的并行<br>multiprocessing：基于进程的并行<br>concurrent：并发包<br>concurrent.futures：启动并行任务<br>subprocess：子进程管理<br>sched：事件调度<br>queue：同步队列<br>select：等待I &#x2F; O完成<br>dummy_threading：threading模块的替代（当_thread不可用时）<br>_thread：底层的线程API（threading基于其上）<br>_dummy_thread：_thread模块的替代（当_thread不可用时）</p>
</blockquote>
<blockquote>
<p><strong>进程间通信</strong><br>socket：底层网络接口<br>ssl：socket对象的TLS &#x2F; SSL填充器<br>asyncore：异步套接字处理器<br>asynchat：异步套接字命令 &#x2F; 响应处理器<br>signal：异步事务信号处理器<br>mmap：内存映射文件支持</p>
</blockquote>
<blockquote>
<p><strong>互联网</strong><br>email：邮件与MIME处理包<br>json：JSON编码与解码<br>mailcap：mailcap文件处理<br>mailbox：多种格式控制邮箱<br>mimetypes：文件名与MIME类型映射<br>base64：RFC<br>3548：Base16、Base32、Base64编码<br>binhex：binhex4文件编码与解码<br>binascii：二进制码与ASCII码间的转化<br>quopri：MIME<br>quoted - printable数据的编码与解码<br>uu：uuencode文件的编码与解码</p>
</blockquote>
<blockquote>
<p><strong>HTML与XML</strong><br>html：HTML支持<br>html.parser：简单HTML与XHTML解析器<br>html.entities：HTML通用实体的定义<br>xml：XML处理模块<br>xml.etree.ElementTree：树形XML元素API<br>xml.dom：XML DOM API<br>xml.dom.minidom：XML DOM最小生成树<br>xml.dom.pulldom：构建部分DOM树的支持<br>xml.sax：SAX2解析的支持<br>xml.sax.handler：SAX处理器基类<br>xml.sax.saxutils：SAX工具<br>xml.sax.xmlreader：SAX解析器接口<br>xml.parsers.expat：运用Expat快速解析XML</p>
</blockquote>
<blockquote>
<p><strong>互联网协议与支持</strong><br>webbrowser：简易Web浏览器控制器<br>cgi：CGI支持<br>cgitb：CGI脚本反向追踪管理器<br>wsgiref：WSGI工具与引用实现<br>urllib：URL处理模块<br>urllib.request：打开URL连接的扩展库<br>urllib.response：urllib模块的响应类<br>urllib.parse：将URL解析成组件<br>urllib.error：urllib.request引发的异常类<br>urllib.robotparser：robots.txt的解析器<br>http：HTTP模块<br>http.client：HTTP协议客户端<br>ftplib：FTP协议客户端<br>poplib：POP协议客户端<br>imaplib：IMAP4协议客户端<br>nntplib：NNTP协议客户端<br>smtplib：SMTP协议客户端<br>smtpd：SMTP服务器<br>telnetlib：Telnet客户端<br>uuid：RFC4122的UUID对象<br>socketserver：网络服务器框架<br>http.server：HTTP服务器<br>http.cookies：HTTPCookie状态管理器<br>http.cookiejar：HTTP客户端的Cookie处理<br>xmlrpc：XML - RPC服务器和客户端模块<br>xmlrpc.client：XML - RPC客户端访问<br>xmlrpc.server：XML - RPC服务器基础<br>ipaddress：IPv4 &#x2F; IPv6控制库</p>
</blockquote>
<blockquote>
<p><strong>多媒体</strong><br>audioop：处理原始音频数据<br>aifc：读写AIFF和AIFC文件<br>sunau：读写Sun AU文件<br>wave：读写WAV文件<br>chunk：读取IFF大文件<br>colorsys：颜色系统间转化<br>imghdr：指定图像类型<br>sndhdr：指定声音文件类型<br>ossaudiodev：访问兼容OSS的音频设备</p>
</blockquote>
<blockquote>
<p><strong>国际化</strong><br>gettext：多语言的国际化服务<br>locale：国际化服务</p>
</blockquote>
<blockquote>
<p><strong>编程框架</strong><br>turtle：Turtle图形库<br>cmd：基于行的命令解释器支持<br>shlex：简单词典分析</p>
</blockquote>
<blockquote>
<p><strong>Tk图形用户接口</strong><br>tkinter：Tcl &#x2F; Tk接口<br>tkinter.ttk：Tk主题控件<br>tkinter.tix：Tk扩展控件<br>tkinter.scrolledtext：滚轴文本控件</p>
</blockquote>
<blockquote>
<p><strong>开发工具</strong><br>pydoc：文档生成器和在线帮助系统<br>doctest：交互式Python示例<br>unittest：单元测试框架<br>unittest.mock：模拟对象库<br>test：Python回归测试包<br>test.support：Python测试工具套件<br>venv：虚拟环境搭建</p>
</blockquote>
<blockquote>
<p><strong>调试</strong><br>bdb：调试框架<br>faulthandler：Python反向追踪库<br>pdb：Python调试器<br>timeit：小段代码执行时间测算<br>trace：Python执行状态追踪</p>
</blockquote>
<blockquote>
<p><strong>运行时</strong><br>sys：系统相关的参数与函数<br>sysconfig：访问Python配置信息<br>builtins：内置对象<br>main：顶层脚本环境<br>warnings：警告控制<br>contextlib：with状态的上下文工具<br>abc：虚基类<br>atexit：出口处理器<br>traceback：打印或读取一条栈的反向追踪<br>future：未来状态定义<br>gc：垃圾回收接口<br>inspect：检查存活的对象<br>site：址相关的配置钩子（hook）<br>fpectl：浮点数异常控制<br>distutils：生成和安装Python模块</p>
</blockquote>
<blockquote>
<p><strong>解释器</strong><br>code：基类解释器<br>codeop：编译Python代码</p>
</blockquote>
<blockquote>
<p><strong>导入模块</strong><br>imp：访问import模块的内部<br>zipimport：从ZIP归档中导入模块<br>pkgutil：包扩展工具<br>modulefinder：通过脚本查找模块<br>runpy：定位并执行Python模块<br>importlib：import的一种实施</p>
</blockquote>
<blockquote>
<p><strong>Python语言</strong><br>parser：访问Python解析树<br>ast：抽象句法树<br>symtable：访问编译器符号表<br>symbol：Python解析树中的常量<br>token：Python解析树中的常量<br>keyword：Python关键字测试<br>tokenize：Python源文件分词<br>tabnany：模糊缩进检测<br>pyclbr：Python类浏览支持<br>py_compile：编译Python源文件<br>compileall：按字节编译Python库<br>dis：Python字节码的反汇编器<br>pickletools：序列化开发工具</p>
</blockquote>
<blockquote>
<p><strong>其他</strong><br>formatter：通用格式化输出</p>
</blockquote>
<blockquote>
<p><strong>Windows相关</strong><br>msilib：读写Windows的Installer文件<br>msvcrt：MS VC + + Runtime的有用程序<br>winreg：Windows注册表访问<br>winsound：Windows声音播放接口</p>
</blockquote>
<blockquote>
<p><strong>Unix相关</strong><br>posix：最常用的POSIX调用<br>pwd：密码数据库<br>spwd：影子密码数据库<br>grp：组数据库<br>crypt：Unix密码验证<br>termios：POSIX风格的tty控制<br>tty：终端控制函数<br>pty：伪终端工具<br>fcntl：系统调用fcntl()和ioctl()<br>pipes：shell管道接口<br>resource：资源可用信息<br>nis：Sun的NIS的接口<br>syslog：Unix 日志服务</p>
</blockquote>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>python</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>IPV6改造 华为云如此简单</title>
    <url>/2024/12/28/2024122804/</url>
    <content><![CDATA[<p>现在很多企业都在搞这个IPV6改造，说实话这个IPV6改造我这边也不是特别精通，也是通过查阅各种资料来了解IPV6这个东西，下面是我查的一些资料大家可以借鉴一下。<span id="more"></span></p>
<ul>
<li><a href="https://blog.csdn.net/vecloud/article/details/114394285?ops_request_misc=&request_id=&biz_id=102&utm_term=ipv6%E6%94%B9%E9%80%A0%E6%96%B9%E6%A1%88&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-4-.pc_search_all_es&spm=1018.2226.3001.4187">IPv6改造三步曲——Vecloud</a></li>
<li><a href="https://blog.csdn.net/wx_15323880413/article/details/108173997?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162754166416780261921888%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162754166416780261921888&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108173997.pc_search_all_es&utm_term=ipv6%E6%94%B9%E9%80%A0%E6%96%B9%E6%A1%88&spm=1018.2226.3001.4187">IPv6改造思路及CDN改造</a></li>
<li><a href="https://download.csdn.net/download/weixin_38743737/11634557?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162754166416780261921888%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162754166416780261921888&biz_id=1&utm_medium=distribute.pc_search_result.none-task-download-2~all~baidu_landing_v2~default-5-11634557.pc_search_all_es&utm_term=ipv6%E6%94%B9%E9%80%A0%E6%96%B9%E6%A1%88&spm=1018.2226.3001.4187">企业应用IPv6改造方案.pdf</a></li>
<li><a href="https://blog.csdn.net/qq_34690340/article/details/109110521?ops_request_misc=&request_id=&biz_id=&utm_medium=distribute.pc_search_result.none-task-blog-2~all~es_rank~default-9-109110521.pc_search_all_es&utm_term=ipv6%E6%94%B9%E9%80%A0%E6%96%B9%E6%A1%88&spm=1018.2226.3001.4187">docker nginx网站 ipv6改造方案和步骤</a></li>
<li><a href="https://blog.csdn.net/weixin_38912070/article/details/106935054?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162754259516780262546350%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162754259516780262546350&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-2-106935054.pc_v2_rank_blog_default&utm_term=ipv6%E6%94%B9%E9%80%A0%E6%96%B9%E6%A1%88&spm=1018.2226.3001.4450">汇报一下，闲鱼的ipv6改造之路</a><br>以上是我觉得不错的文章，大家也可以看看</li>
</ul>
<p>通过这些文章大概了解了IPV6改造的方法，我这边要说的是关于本地IDC机房的业务想要使用IPV6进行提供服务，我这边是通过华为云的弹性公网IP（EIP）实现的，下面我们来看看具体的一些操作吧，我觉得这是最简单的IPV6改造的方法了。</p>
<h3 id="操作场景及工作原理"><a href="#操作场景及工作原理" class="headerlink" title="操作场景及工作原理"></a>操作场景及工作原理</h3><p>其实说白了这个我就是想实现我本地的IDC机房中的业务支持IPV6提供服务，但是如果做IPV4、IPV6双栈的话比较麻烦，而且本地IDC机房的网络情况很糟糕，设备老旧、设备不支持IPV6、机房无网络拓扑，这样做起来就很麻烦。<br>弹性公网IP（EIP）服务的IPv6功能可以将IPv4地址映射为公网IPv6地址。开启IPv6转换后，将提供IPv4和IPv6弹性公网IP地址，原有IPv4业务可以快速为IPv6用户提供访问能力。<br>有了华为云的这个服务就感觉很简单了，我完全可以直接把本地IDC的所有IPV6出口通过华为云往外走就行了呗，一开始我是这么想的，直接采用VPN的方式把本地和华为云进行内网互联，然后再通过弹性公网IP（EIP）服务的IPV6去提供V6的服务，但是后来发现不太行，网络延迟太大，后来就直接将VPN换成了专线，这样延迟就小很多了。</p>
<h3 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h3><p>我这边不方便透露企业内部的一些信息，我这边就直接拿华为云官网上的相关案例跟大家说了<br>用户IDC网段：192.168.1.0&#x2F;24，VPC网段：192.168.0.0&#x2F;24。<br>实现方式如下：<br>通过虚拟专用网络（VPN）将用户IDC与VPC连通。<br>在VPC中搭建NAT网关，并绑定IPv6 EIP，对外提供公网IPv6服务。</p>
<script> document.write('<img src="'+ imgurl +'1735394055/040d491611fa4a434582da4095a9e3e9.png">'); </script><br>

<blockquote>
<p><strong>说明：</strong><br> IPv6 EIP只能作为服务端地址对外提供服务，无法主动访问IPv6地址。 IDC的网段与云上VPC中的子网网段不能重叠，否则无法通信。</p>
</blockquote>
<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>您需要在安全组的出方向和入方向中放通198.19.0.0&#x2F;16网段的IP地址。因为IPv6 EIP采用NAT64技术，入方向的源IP地址经过NAT64转换后，会从IPv6地址转换为198.19.0.0&#x2F;16之间的某个IPv4地址，源端口随机，目的IP为本机的内部私有IPv4地址，目的端口不变。</p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ol>
<li><p>购买EIP<br>根据出公网的实际业务需求，购买相应带宽的弹性公网IP并勾选IPv6转换。<br>具体操作请参见<a href="https://support.huaweicloud.com/usermanual-eip/eip_0008.html">申请弹性公网IP</a>。</p>
</li>
<li><p>配置VPN<br>VPN由VPN网关和VPN连接组成，VPN网关提供了虚拟私有云的公网出口，与用户IDC的远端网关对应。</p>
</li>
</ol>
<script> document.write('<img src="'+ imgurl +'1735394055/c729c1de25bcaa83c3b73a4f80c2b379.png">'); </script><br>

<ul>
<li>创建VPC。<br>创建VPC，选择网段为192.168.0.0&#x2F;24，IDC私有网段为192.168.1.0&#x2F;24。<br>IDC的网段与云上VPC中的子网网段不能重叠，否则无法通信。<br>具体操作请参见<a href="https://support.huaweicloud.com/usermanual-vpc/zh-cn_topic_0013935842.html">创建虚拟私有云和子网</a>。</li>
<li>创建VPN网关。<br>虚拟私有云：选择2.a中创建的VPC。<br>带宽大小：根据实际的业务需求，选择VPN连接需要的带宽大小。<br>具体操作请参见<a href="https://support.huaweicloud.com/qs-vpn/vpn_03_0005.html">创建VPN网关</a>。</li>
<li>创建VPN连接。<br>本端子网：选择网段，手动输入网段：192.168.0.0&#x2F;24,198.19.0.0&#x2F;16。<br>远端网关：选择线下IDC的VPN远端公网IP。<br>远端子网：选择线下IDC的私有网段192.168.1.0&#x2F;24。<br>具体操作请参见<a href="https://support.huaweicloud.com/qs-vpn/vpn_03_0006.html">创建VPN连接</a>。</li>
</ul>
<blockquote>
<p><strong>说明：</strong><br>由于EIP开启IPv6转换后，源IP会被替换成198.19.0.0&#x2F;16网段，因此需要将该网段加入到本端子网中。由于Console页面的校验，需要先填写VPC的子网，再填写198.19.0.0&#x2F;16。</p>
</blockquote>
<ul>
<li>配置IDC侧VPN设备。<br>完成云端的VPN配置后，需要对线下IDC侧的VPN设备进行相应配置，具体操作请参见<a href="https://support.huaweicloud.com/admin-vpn/zh-cn_topic_0175318163.html">《虚拟专用网络管理员指南》</a>。</li>
</ul>
<ol>
<li>配置NAT网关<br>购买NAT网关，通过添加DNAT规则，可以通过映射方式使您的云主机或通过VPN扩展到云上的主机对互联网提供服务。</li>
</ol>
<ul>
<li>购买NAT网关。<br>虚拟私有云：选择2中创建的VPC。<br>子网：选择2中创建的VPC下的子网。<br>具体操作请参见<a href="https://support.huaweicloud.com/usermanual-natgateway/zh-cn_topic_0150270259.html">购买NAT网关</a>。</li>
<li>添加DNAT规则。<br>选择1中购买的EIP，并根据线下IDC的私网IP地址和端口，设置DNAT规则。例如选择具体端口及TCP协议，添加私网IP：192.168.1.22，绑定EIP，如图2所示。<br>具体操作请参见<a href="https://support.huaweicloud.com/usermanual-natgateway/zh-cn_topic_0127489530.html">添加DNAT规则</a>。<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735394055/4b59ec0922fbc00dea0312bf39bb2fb1.png">'); </script><br>

<h3 id="配置验证"><a href="#配置验证" class="headerlink" title="配置验证"></a>配置验证</h3><p>操作完成后，就可以实现EIP服务的公网IPv6地址对外提供IPv6服务。<br>IPv6地址可以在EIP页面查询：<br>图3 查看IPv6地址</p>
<script> document.write('<img src="'+ imgurl +'1735394055/e6fba6176d0cb9eccf9d869ecc4a53c9.png">'); </script><br>

<p>使用具有访问公网能力的IPv6客户端，测试IPv6 EIP的IPv6地址的连通性。</p>
<script> document.write('<img src="'+ imgurl +'1735394055/f0e6050407b9a25b934ec16b9f0d1cdd.png">'); </script><br>

<h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><p>到这里就结束了，这里总结一下，这个适用于对出口网络要求不高的情况，如果业务量太大的话这个要做一些相应的改变的，不然会出问题的。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>IPV6</tag>
      </tags>
  </entry>
  <entry>
    <title>大型分布式网站架构总结</title>
    <url>/2024/12/28/2024122805/</url>
    <content><![CDATA[<p>本文是学习大型分布式网站架构的技术总结。对架构一个高性能、高可用、可伸缩及可扩展的分布式网站进行了概要性描述，并给出一个架构参考。文中一部分为读书笔记，一部分是个人经验总结，对大型分布式网站架构有较好的参考价值。<span id="more"></span></p>
<h3 id="一、大型分布式网站架构技术"><a href="#一、大型分布式网站架构技术" class="headerlink" title="一、大型分布式网站架构技术"></a>一、大型分布式网站架构技术</h3><p><strong>1、大型网站的特点</strong></p>
<ul>
<li>用户多，分布广泛</li>
<li>大流量，高并发</li>
<li>海量数据，服务高可用</li>
<li>安全环境恶劣，易受网络攻击</li>
<li>功能多，变更快，频繁发布</li>
<li>从小到大，渐进发展</li>
<li>以用户为中心</li>
<li>免费服务，付费体验</li>
</ul>
<p><strong>2、大型网站架构目标</strong></p>
<ul>
<li>高性能：提供快速的访问体验。</li>
<li>高可用：网站服务一直可以正常访问。</li>
<li>可伸缩：通过硬件增加&#x2F;减少，提高&#x2F;降低处理能力。</li>
<li>安全性：提供网站安全访问和数据加密、安全存储等策略。</li>
<li>扩展性：方便地通过新增&#x2F;移除方式，增加&#x2F;减少新的功能&#x2F;模块。</li>
<li>敏捷性：随需应变，快速响应；<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735394507/f6b00fb5ee9a9db7fd0ce78379456fb3.png">'); </script><br>

<p><strong>3、大型网站架构模式</strong><br></p>
<script> document.write('<img src="'+ imgurl +'1735394507/3d7bf6e5f86a3309d36fc6b276634f03.png">'); </script><br>

<p>+——————————————————————————————————————————</p>
<ul>
<li>分层：一般可分为应用层、服务层、数据层、管理层与分析层；</li>
<li>分割：一般按照业务&#x2F;模块&#x2F;功能特点进行划分，比如应用层分为首页、用户中心。</li>
<li>分布式：将应用分开部署（比如多台物理机），通过远程调用协同工作。</li>
<li>集群：一个应用&#x2F;模块&#x2F;功能部署多份（如：多台物理机），通过负载均衡共同提供对外访问。</li>
<li>缓存：将数据放在距离应用或用户最近的位置，加快访问速度。</li>
<li>异步：将同步的操作异步化。客户端发出请求，不等待服务端响应，等服务端处理完毕后，使用通知或轮询的方式告知请求方。一般指：请求——响应——通知模式。</li>
<li>冗余：增加副本，提高可用性、安全性与性能。</li>
<li>安全：对已知问题有有效的解决方案，对未知&#x2F;潜在问题建立发现和防御机制。</li>
<li>自动化：将重复的、不需要人工参与的事情，通过工具的方式，使用机器完成。</li>
<li>敏捷性：积极接受需求变更，快速响应业务发展需求。</li>
</ul>
<p><strong>4、高性能架构</strong></p>
<p>以用户为中心，提供快速的网页访问体验。主要参数有较短的响应时间、较大的并发处理能力、较高的吞吐量与稳定的性能参数。</p>
<p>可分为前端优化、应用层优化、代码层优化与存储层优化。</p>
<ul>
<li>前端优化：网站业务逻辑之前的部分；</li>
<li>浏览器优化：减少HTTP请求数，使用浏览器缓存，启用压缩，CSS JS位置，JS异步，减少Cookie传输；CDN加速，反向代理；</li>
<li>应用层优化：处理网站业务的服务器。使用缓存，异步，集群</li>
<li>代码优化：合理的架构，多线程，资源复用（对象池，线程池等），良好的数据结构，JVM调优，单例，Cache等；</li>
<li>存储优化：缓存、固态硬盘、光纤传输、优化读写、磁盘冗余、分布式存储（HDFS）、NoSQL等。</li>
</ul>
<p><strong>5、高可用架构</strong></p>
<p>大型网站应该在任何时候都可以正常访问，正常提供对外服务。因为大型网站的复杂性，分布式，廉价服务器，开源数据库，操作系统等特点，要保证高可用是很困难的，也就是说网站的故障是不可避免的。</p>
<p>如何提高可用性，就是需要迫切解决的问题。首先，需要从架构级别考虑，在规划的时候，就考虑可用性。行业内一般用几个9表示可用性指标，比如四个9（99.99），一年内允许的不可用时间是53分钟。</p>
<p>不同层级使用的策略不同，一般采用冗余备份和失效转移解决高可用问题。</p>
<ul>
<li>应用层：一般设计为无状态的，对于每次请求，使用哪一台服务器处理是没有影响的。一般使用负载均衡技术（需要解决Session同步问题）实现高可用。</li>
<li>服务层：负载均衡，分级管理，快速失败（超时设置），异步调用，服务降级，幂等设计等。</li>
<li>数据层：冗余备份（冷，热备[同步，异步]，温备），失效转移（确认，转移，恢复）。数据高可用方面著名的理论基础是CAP理论（持久性，可用性，数据一致性[强一致，用户一致，最终一致]）</li>
</ul>
<p><strong>6、可伸缩架构</strong></p>
<p>伸缩性是指在不改变原有架构设计的基础上，通过添加&#x2F;减少硬件（服务器）的方式，提高&#x2F;降低系统的处理能力。</p>
<ul>
<li>应用层：对应用进行垂直或水平切分。然后针对单一功能进行负载均衡（DNS、HTTP[反向代理]、IP、链路层）。</li>
<li>服务层：与应用层类似；</li>
<li>数据层：分库、分表、NoSQL等；常用算法Hash，一致性Hash。</li>
</ul>
<p><strong>7、可扩展架构</strong></p>
<p>可以方便地进行功能模块的新增&#x2F;移除，提供代码&#x2F;模块级别良好的可扩展性。</p>
<ul>
<li>模块化，组件化：高内聚，低耦合，提高复用性，扩展性。</li>
<li>稳定接口：定义稳定的接口，在接口不变的情况下，内部结构可以“随意”变化。</li>
<li>设计模式：应用面向对象思想，原则，使用设计模式，进行代码层面的设计。</li>
<li>消息队列：模块化的系统，通过消息队列进行交互，使模块之间的依赖解耦。</li>
<li>分布式服务：公用模块服务化，提供其他系统使用，提高可重用性，扩展性。</li>
</ul>
<p><strong>8、安全架构</strong></p>
<p>对已知问题有有效的解决方案，对未知&#x2F;潜在问题建立发现和防御机制。对于安全问题，首先要提高安全意识，建立一个安全的有效机制，从政策层面，组织层面进行保障，比如服务器密码不能泄露，密码每月更新，并且三次内不能重复；每周安全扫描等。以制度化的方式，加强安全体系的建设。同时，需要注意与安全有关的各个环节。安全问题不容忽视，包括基础设施安全，应用系统安全，数据保密安全等。</p>
<ul>
<li>基础设施安全：硬件采购，操作系统，网络环境方面的安全。一般采用正规渠道购买高质量的产品，选择安全的操作系统，及时修补漏洞，安装杀毒软件防火墙。防范病毒，后门。设置防火墙策略，建立DDOS防御系统，使用攻击检测系统，进行子网隔离等手段。</li>
<li>应用系统安全：在程序开发时，对已知常用问题，使用正确的方式，在代码层面解决掉。防止跨站脚本攻击（XSS），注入攻击，跨站请求伪造（CSRF），错误信息，HTML注释，文件上传，路径遍历等。还可以使用Web应用防火墙（比如：ModSecurity），进行安全漏洞扫描等措施，加强应用级别的安全。</li>
<li>数据保密安全：存储安全（存储在可靠的设备，实时，定时备份），保存安全（重要的信息加密保存，选择合适的人员复杂保存和检测等），传输安全（防止数据窃取和数据篡改）；</li>
</ul>
<p>常用的加解密算法（单项散列加密[MD5、SHA]，对称加密[DES、3DES、RC]），非对称加密[RSA]等。</p>
<p><strong>9、敏捷性</strong></p>
<p>网站的架构设计，运维管理要适应变化，提供高伸缩性，高扩展性。方便的应对快速的业务发展，突增高流量访问等要求。</p>
<p>除上面介绍的架构要素外，还需要引入敏捷管理，敏捷开发的思想。使业务，产品，技术，运维统一起来，随需应变，快速响应。</p>
<p><strong>10、大型架构举例</strong></p>
<script> document.write('<img src="'+ imgurl +'1735394507/6a26512f1ad714427355be3ce3f35250.png">'); </script><br>

<p>以上采用七层逻辑架构，第一层客户层，第二层前端优化层，第三层应用层，第四层服务层，第五层数据存储层，第六层大数据存储层，第七层大数据处理层。</p>
<ul>
<li>客户层：支持PC浏览器和手机APP。差别是手机APP可以直接通过IP访问，反向代理服务器。</li>
<li>前端层：使用DNS负载均衡，CDN本地加速以及反向代理服务；</li>
<li>应用层：网站应用集群；按照业务进行垂直拆分，比如商品应用，会员中心等；</li>
<li>服务层：提供公用服务，比如用户服务，订单服务，支付服务等；</li>
<li>数据层：支持关系型数据库集群（支持读写分离），NOSQL集群，分布式文件系统集群；以及分布式Cache；</li>
<li>大数据存储层：支持应用层和服务层的日志数据收集，关系数据库和NOSQL数据库的结构化和半结构化数据收集；</li>
<li>大数据处理层：通过Mapreduce进行离线数据分析或Storm实时数据分析，并将处理后的数据存入关系型数据库。（实际使用中，离线数据和实时数据会按照业务要求进行分类处理，并存入不同的数据库中，供应用层或服务层使用）。</li>
</ul>
<h3 id="二、大型电商网站系统架构演变过程"><a href="#二、大型电商网站系统架构演变过程" class="headerlink" title="二、大型电商网站系统架构演变过程"></a>二、大型电商网站系统架构演变过程</h3><p>一个成熟的大型网站（如淘宝、天猫、腾讯等）的系统架构并不是一开始设计时就具备完整的高性能、高可用、高伸缩等特性的，它是随着用户量的增加，业务功能的扩展逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。</p>
<p>所以成熟的系统架构是随着业务的扩展而逐步完善的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如淘宝，要解决海量的商品信息的搜索、下单、支付；例如腾讯，要解决数亿用户的实时消息传输；百度它要处理海量的搜索请求。</p>
<p>他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景中，找出其中共用的技术，这些技术和手段广泛运用在大型网站系统的架构中，下面就通过介绍大型网站系统的演化过程，来认识这些技术和手段。</p>
<p><strong>1、最开始的网站架构</strong></p>
<p>最初的架构，应用程序、数据库、文件都部署在一台服务器上，如图：</p>
<script> document.write('<img src="'+ imgurl +'1735394507/83046b702265116a69e47ee5e8ddb31e.png">'); </script><br>

<p><strong>2、应用、数据、文件分离</strong></p>
<p>随着业务的扩展，一台服务器已经不能满足性能需求，故将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/f9f9eed1fbd7b904a17ddec3d0b6215b.png">'); </script><br>

<p><strong>3、利用缓存改善网站性能</strong><br>在硬件优化性能的同时，同时也通过软件进行性能优化，在大部分的网站系统中，都会利用缓存技术改善系统的性能，使用缓存主要源于热点数据的存在，大部分网站访问都遵循28原则（即80%的访问请求，最终落在20%的数据上），所以我们可以对热点数据进行缓存，减少这些数据的访问路径，提高用户体验。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/aff4fcb3dd591e8550bd37b146678817.png">'); </script><br>

<p>缓存实现常见的方式是本地缓存、分布式缓存。当然还有CDN、反向代理等，这个后面再讲。本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存在内存中，也可以存在文件，OSCache就是常用的本地缓存组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。分布式缓存的特点是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Memcached、Redis。</p>
<p><strong>4、使用集群改善应用服务器性能</strong></p>
<p>应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/6b4063e64c8c1176fa7683e7102a9371.png">'); </script><br>

<p>常用的负载均衡技术硬件的有F5，价格比较贵，软件的有LVS、Nginx、HAProxy。LVS是四层负载均衡，根据目标地址和端口选择内部服务器，Nginx和HAProxy是七层负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。</p>
<p><strong>5、数据库读写分离和分库分表</strong></p>
<p>随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分库分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切分则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务的不同来切分，如用户业务、商品业务相关的表放在不同的数据库中。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/902030c9da4b2cdae94c88b3e7e5016c.png">'); </script><br>

<p><strong>6、使用CDN和反向代理提高网站性能</strong></p>
<p>假如我们的服务器都部署在成都的机房，对于四川的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于四川和北京分别属于电信和联通的不同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到成都的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、网宿。</p>
<p>而反向代理，则是部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有缓存数据才会继续访问应用服务器获取，这样做减少了获取数据的成本。反向代理有Squid、Nginx。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/0e9f20ae18c23accf62bc9f97ef44553.png">'); </script><br>

<p><strong>7、使用分布式文件系统</strong></p>
<p>用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求，这时就需要分布式文件系统的支撑。常用的分布式文件系统有GFS、HDFS、TFS。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/bfab86e13c8e974483d9d70b93067be0.png">'); </script><br>

<p><strong>8、使用NoSQL和搜索引擎</strong></p>
<p>对于海量数据的查询和分析，我们使用NoSQL数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NoSQL有MongoDB、HBase、Redis，搜索引擎有Lucene、Solr、Elasticsearch。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/77e0a00344908651684698d50d1be82c.png">'); </script><br>

<p><strong>9、将应用服务器进行业务拆分</strong></p>
<p>随着业务进一步扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者共享数据库来实现。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/eb8fc5b296664ab84a801cb8ad5d610f.png">'); </script><br>

<p><strong>10、搭建分布式服务</strong></p>
<p>这时我们发现各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分布式服务框架搭建分布式服务。阿里的Dubbo是一个不错的选择。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/88dd0886cca0e15b9621afdc3f8c9f9f.png">'); </script><br>

<h3 id="三、一张图说明电商架构"><a href="#三、一张图说明电商架构" class="headerlink" title="三、一张图说明电商架构"></a>三、一张图说明电商架构</h3><script> document.write('<img src="'+ imgurl +'1735394507/b61a92d5497932ff44c257c6c551317f.png">'); </script><br>

<h3 id="四、大型电商网站架构案例"><a href="#四、大型电商网站架构案例" class="headerlink" title="四、大型电商网站架构案例"></a>四、大型电商网站架构案例</h3><p><strong>1、电商案例的原因</strong></p>
<p>分布式大型网站，目前看主要有几类：</p>
<ul>
<li>大型门户，比如网易，新浪等；</li>
<li>SNS网站，比如校内，开心网等；</li>
<li>电商网站，比如阿里巴巴，京东商城，国美在线，汽车之家等。</li>
</ul>
<p>大型门户一般是新闻类信息，可以使用CDN，静态化等方式优化，开心网等交互性比较多，可能会引入更多的NoSQL，分布式缓存，使用高性能的通信框架等。电商网站具备以上两类的特点，比如产品详情可以采用CDN，静态化，交互性高的需要采用NoSQL等技术。因此，我们采用电商网站作为案例，进行分析。</p>
<p><strong>2、电商网站需求</strong></p>
<p>客户需求：</p>
<ul>
<li>建立一个全品类的电子商务网站（B2C），用户可以在线购买商品，可以在线支付，也可以货到付款；</li>
<li>用户购买时可以在线与客服沟通；</li>
<li>用户收到商品后，可以给商品打分，评价；</li>
<li>目前有成熟的进销存系统；需要与网站对接；</li>
<li>希望能够支持3~5年，业务的发展；</li>
<li>预计3~5年用户数达到1000万；</li>
<li>定期举办双11、双12、三八男人节等活动；</li>
<li>其他的功能参考京东或国美在线等网站。</li>
</ul>
<p>客户就是客户，不会告诉你具体要什么，只会告诉你他想要什么，我们很多时候要引导，挖掘客户的需求。好在提供了明确的参考网站。因此，下一步要进行大量的分析，结合行业，以及参考网站，给客户提供方案。</p>
<p><strong>需求功能矩阵</strong></p>
<p>需求管理传统的做法，会使用用例图或模块图（需求列表）进行需求的描述。这样做常常忽视掉一个很重要的需求（非功能需求），因此推荐大家使用需求功能矩阵，进行需求描述。</p>
<p>本电商网站的需求矩阵如下：</p>
<script> document.write('<img src="'+ imgurl +'1735394507/9a87fcbf1e71abb65cf8232b938bf2b3.png">'); </script><br>

<p><strong>3、网站初级架构</strong></p>
<p>一般网站，刚开始的做法，是三台服务器，一台部署应用，一台部署数据库，一台部署NFS文件系统。</p>
<p>这是前几年比较传统的做法，之前见到一个网站10万多会员，垂直服装设计门户，N多图片。使用了一台服务器部署了应用，数据库以及图片存储。出现了很多性能问题。</p>
<p>如下图：</p>
<script> document.write('<img src="'+ imgurl +'1735394507/d1e2c70898988b198b21ebcfb9de6b2c.png">'); </script><br>

<p>但是，目前主流的网站架构已经发生了翻天覆地的变化。一般都会采用集群的方式，进行高可用设计。至少是下面这个样子：</p>
<script> document.write('<img src="'+ imgurl +'1735394507/0cbb7cf3918fff6c51d247cd355fdc23.png">'); </script><br>

<ul>
<li>使用集群对应用服务器进行冗余，实现高可用；（负载均衡设备可与应用一块部署）</li>
<li>使用数据库主备模式，实现数据备份和高可用；</li>
</ul>
<p><strong>4、系统容量预估</strong><br>预估步骤：</p>
<ul>
<li>注册用户数-日均UV量-每日的PV量-每天的并发量；</li>
<li>峰值预估：平常量的2~3倍；</li>
<li>根据并发量（并发，事务数），存储容量计算系统容量。</li>
</ul>
<p>根据客户需求：3~5年用户数达到1000万注册用户，可以做每秒并发数预估：</p>
<ul>
<li>每天的UV为200万（二八原则）；</li>
<li>每日每天点击浏览30次；</li>
<li>PV量：200*30&#x3D;6000万；</li>
<li>集中访问量：24<em>0.2&#x3D;4.8小时会有6000万</em>0.8&#x3D;4800万（二八原则）；</li>
<li>每分并发量：4.8*60&#x3D;288分钟，每分钟访问4800&#x2F;288&#x3D;16.7万（约等于）；</li>
<li>每秒并发量：16.7万&#x2F;60&#x3D;2780（约等于）；</li>
<li>假设：高峰期为平常值的三倍，则每秒的并发数可以达到8340次。</li>
<li>1毫秒&#x3D;1.3次访问；</li>
</ul>
<p>没好好学数学后悔了吧？！（不知道以上算是否有错误，呵呵~~）</p>
<p>服务器预估：（以tomcat服务器举例）</p>
<p>按一台web服务器，支持每秒300个并发计算。平常需要10台服务器（约等于）；[tomcat默认配置是150]，高峰期需要30台服务器；</p>
<p>容量预估：70&#x2F;90原则</p>
<p>系统CPU一般维持在70%左右的水平，高峰期达到90%的水平，是不浪费资源，并比较稳定的。内存，IO类似。</p>
<p>以上预估仅供参考，因为服务器配置，业务逻辑复杂度等都有影响。在此CPU，硬盘，网络等不再进行评估。</p>
<p><strong>5、网站架构分析</strong></p>
<p>根据以上预估，有几个问题：</p>
<ul>
<li>需要部署大量的服务器，高峰期计算，可能要部署30台Web服务器。并且这三十台服务器，只有秒杀，活动时才会用到，存在大量的浪费。</li>
<li>所有的应用部署在同一台服务器，应用之间耦合严重。需要进行垂直切分和水平切分。</li>
<li>大量应用存在冗余代码</li>
<li>服务器Session同步耗费大量内存和网络带宽</li>
<li>数据需要频繁访问数据库，数据库访问压力巨大。</li>
</ul>
<p>大型网站一般需要做以下架构优化（优化是架构设计时，就要考虑的，一般从架构&#x2F;代码级别解决，调优主要是简单参数的调整，比如JVM调优；如果调优涉及大量代码改造，就不是调优了，属于重构）：</p>
<ul>
<li>业务拆分</li>
<li>应用集群部署（分布式部署，集群部署和负载均衡）</li>
<li>多级缓存</li>
<li>单点登录（分布式Session）</li>
<li>数据库集群（读写分离，分库分表）</li>
<li>服务化</li>
<li>消息队列</li>
<li>其他技术</li>
</ul>
<p><strong>6、网站架构优化</strong></p>
<p><strong>6.1业务拆分</strong></p>
<p>根据业务属性进行垂直切分，划分为产品子系统，购物子系统，支付子系统，评论子系统，客服子系统，接口子系统（对接如进销存，短信等外部系统）。</p>
<p>根据业务子系统进行等级定义，可分为核心系统和非核心系统。核心系统：产品子系统，购物子系统，支付子系统；非核心：评论子系统，客服子系统，接口子系统。</p>
<ul>
<li><p>业务拆分作用：提升为子系统可由专门的团队和部门负责，专业的人做专业的事，解决模块之间耦合以及扩展性问题；每个子系统单独部署，避免集中部署导致一个应用挂了，全部应用不可用的问题。</p>
</li>
<li><p>等级定义作用：用于流量突发时，对关键应用进行保护，实现优雅降级；保护关键应用不受到影响。<br>拆分后的架构图：</p>
</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735394507/233f1dc2abce04fc0a2fc85a7be7ca9f.png">'); </script><br>

<p>参考部署方案2</p>
<script> document.write('<img src="'+ imgurl +'1735394507/26b30028c0cd37a1a78e903c51d612a7.png">'); </script><br>

<p>如上图每个应用单独部署，核心系统和非核心系统组合部署</p>
<p><strong>6.2应用集群部署（分布式，集群，负载均衡）</strong></p>
<ul>
<li>分布式部署：将业务拆分后的应用单独部署，应用直接通过RPC进行远程通信；</li>
<li>集群部署：电商网站的高可用要求，每个应用至少部署两台服务器进行集群部署；</li>
<li>负载均衡：是高可用系统必须的，一般应用通过负载均衡实现高可用，分布式服务通过内置的负载均衡实现高可用，关系型数据库通过主备方式实现高可用。<br>集群部署后架构图：<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735394507/161df03aea7c4208ce5c061d489f2455.png">'); </script><br>

<p><strong>6.3 多级缓存</strong></p>
<p>缓存按照存放的位置一般可分为两类本地缓存和分布式缓存。本案例采用二级缓存的方式，进行缓存的设计。一级缓存为本地缓存，二级缓存为分布式缓存。（还有页面缓存，片段缓存等，那是更细粒度的划分）</p>
<p>一级缓存，缓存数据字典，和常用热点数据等基本不可变&#x2F;有规则变化的信息，二级缓存缓存需要的所有缓存。当一级缓存过期或不可用时，访问二级缓存的数据。如果二级缓存也没有，则访问数据库。</p>
<p>缓存的比例，一般1:4，即可考虑使用缓存。（理论上是1:2即可）。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/3e50806d47e2b52236a098ba7b706378.png">'); </script><br>

<p>根据业务特性可使用以下缓存过期策略：</p>
<ul>
<li>缓存自动过期；</li>
<li>缓存触发过期；</li>
</ul>
<p><strong>6.4单点登录（分布式Session）</strong></p>
<p>系统分割为多个子系统，独立部署后，不可避免的会遇到会话管理的问题。一般可采用Session同步，Cookies，分布式Session方式。电商网站一般采用分布式Session实现。</p>
<p>再进一步可以根据分布式Session，建立完善的单点登录或账户管理系统。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/d6570a094b4499b4941326fdc63d8e37.png">'); </script><br>

<p><strong>流程说明</strong></p>
<ul>
<li>用户第一次登录时，将会话信息（用户Id和用户信息），比如以用户Id为Key，写入分布式Session；</li>
<li>用户再次登录时，获取分布式Session，是否有会话信息，如果没有则调到登录页；</li>
<li>一般采用Cache中间件实现，建议使用Redis，因此它有持久化功能，方便分布式Session宕机后，可以从持久化存储中加载会话信息；</li>
<li>存入会话时，可以设置会话保持的时间，比如15分钟，超过后自动超时；</li>
</ul>
<p>结合Cache中间件，实现的分布式Session，可以很好的模拟Session会话。</p>
<p><strong>6.5数据库集群（读写分离，分库分表）</strong></p>
<p>大型网站需要存储海量的数据，为达到海量数据存储，高可用，高性能一般采用冗余的方式进行系统设计。一般有两种方式读写分离和分库分表。</p>
<p>读写分离：一般解决读比例远大于写比例的场景，可采用一主一备，一主多备或多主多备方式。</p>
<p>本案例在业务拆分的基础上，结合分库分表和读写分离。如下图：</p>
<script> document.write('<img src="'+ imgurl +'1735394507/40df61ec0b241d9304a72137a8208312.png">'); </script><br>

<ul>
<li>业务拆分后：每个子系统需要单独的库；</li>
<li>如果单独的库太大，可以根据业务特性，进行再次分库，比如商品分类库，产品库；</li>
<li>分库后，如果表中有数据量很大的，则进行分表，一般可以按照Id，时间等进行分表；（高级的用法是一致性Hash）</li>
<li>在分库、分表的基础上，进行读写分离；</li>
</ul>
<p>相关中间件可参考Cobar（阿里，目前已不在维护），TDDL（阿里），Atlas（奇虎360），MyCat。</p>
<p>分库分表后序列的问题，JOIN，事务的问题，会在分库分表主题分享中，介绍。</p>
<p><strong>6.6服务化</strong></p>
<p>将多个子系统公用的功能&#x2F;模块，进行抽取，作为公用服务使用。比如本案例的会员子系统就可以抽取为公用的服务。</p>
<script> document.write('<img src="'+ imgurl +'1735394507/94b93f4085fe4edc6a1cdbec8ac90b2a.png">'); </script><br>

<p><strong>6.7消息队列</strong></p>
<p>消息队列可以解决子系统&#x2F;模块之间的耦合，实现异步，高可用，高性能的系统。是分布式系统的标准配置。本案例中，消息队列主要应用在购物，配送环节。</p>
<ul>
<li>用户下单后，写入消息队列，后直接返回客户端；</li>
<li>库存子系统：读取消息队列信息，完成减库存；</li>
<li>配送子系统：读取消息队列信息，进行配送；<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735394507/893cebc20da76ccd009768d1b6e9af39.png">'); </script><br>

<p>目前使用较多的MQ有Active MQ、Rabbit MQ、Zero MQ、MS MQ等，需要根据具体的业务场景进行选择。建议可以研究下Rabbit MQ。</p>
<p><strong>6.8其他架构（技术）</strong></p>
<p>除了以上介绍的业务拆分，应用集群，多级缓存，单点登录，数据库集群，服务化，消息队列外。还有CDN，反向代理，分布式文件系统，大数据处理等系统。</p>
<p>此处不详细介绍，大家可以问度娘&#x2F;Google，有机会的话也可以分享给大家。</p>
<p><strong>7、架构汇总</strong></p>
<script> document .write('<img src="'+ imgurl +'1735394507/7dbe0f2c4238c617736b2fd37b2ece4e.png">'); </script><br>

<p>大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些技术和手段，希望能给大家带来启发。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>全局负载均衡、CDN内容分发的原理与实践</title>
    <url>/2024/12/28/2024122806/</url>
    <content><![CDATA[<h3 id="CDN简介"><a href="#CDN简介" class="headerlink" title="CDN简介"></a>CDN简介</h3><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。<span id="more"></span></p>
<p>CDN的关键技术主要有内容存储和分发技术。简而言之，就是将数据部署在各地的服务器中，通过负载均衡技术，让用户就近获取服务器中的数据。</p>
<h3 id="CDN-原理"><a href="#CDN-原理" class="headerlink" title="CDN 原理"></a>CDN 原理</h3><p>CDN的基本原理是广泛采用各种缓存服务器，将这些缓存服务器分布到用户访问相对集中的地区或网络中，在用户访问网站时，利用全局负载技术将用户的访问指向距离最近的工作正常的缓存服务器上，由缓存服务器直接响应用户请求。</p>
<blockquote>
<p>全局负载均衡主要用于在多个区域拥有自己服务器的站点，为了使全球用户只以一个IP地址或域名就能访问到离自己最近的服务器，从而获得最快的访问速度。</p>
</blockquote>
<p>CDN的基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。</p>
<p>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。</p>
<script> document.write('<img src="'+ imgurl +'1735396214/410ede08ff0448f69055cf060f676e07.png">'); </script><br>

<h3 id="CDN-的价值"><a href="#CDN-的价值" class="headerlink" title="CDN 的价值"></a>CDN 的价值</h3><p>归纳起来，CDN具有以下主要功能：</p>
<ul>
<li>节省骨干网带宽，减少带宽需求量；</li>
<li>提供服务器端加速，解决由于用户访问量大造成的服务器过载问题；</li>
<li>服务商能使用Web Cache技术在本地缓存用户访问过的Web页面和对象，实现相同对象的访问无须占用主干的出口带宽，并提高用户访问因特网页面的相应时间的需求；</li>
<li>能克服网站分布不均的问题，并且能降低网站自身建设和维护成本；</li>
<li>降低“通信风暴”的影响，提高网络访问的稳定性。</li>
</ul>
<h3 id="CDN-服务模式"><a href="#CDN-服务模式" class="headerlink" title="CDN 服务模式"></a>CDN 服务模式</h3><p>简单地说，内容分发网络（CDN）是一个经策略性部署的整体系统，包括分布式存储、负载均衡、网络请求的重定向和内容管理4个要件，而内容管理和全局的网络流量管理（Traffic Management）是CDN的核心所在。</p>
<p>通过用户就近性和服务器负载的判断，CDN确保内容以一种极为高效的方式为用户的请求提供服务。总的来说，内容服务基于缓存服务器，也称作代理缓存（Surrogate），它位于网络的边缘，距用户仅有”一跳”（Single Hop）之遥。</p>
<p>同时，代理缓存是内容提供商源服务器（通常位于CDN服务提供商的数据中心）的一个透明镜像。这样的架构使得CDN服务提供商能够代表他们客户，即内容供应商，向最终用户提供尽可能好的体验，而这些用户是不能容忍请求响应时间有任何延迟的。</p>
<h3 id="全局负载均衡"><a href="#全局负载均衡" class="headerlink" title="全局负载均衡"></a>全局负载均衡</h3><p>全局负载均衡（Global Server Load Balance, GSLB）,全局负载均衡是指对分别放置在不同的地理位置的服务器群间作负载均衡。</p>
<p>服务器负载均衡是指对本地的服务器群做负载均衡。主要用于在多个区域拥有自己服务器的站点，为了使全球用户只以一个IP地址或域名就能访问到离自己最近的服务器，从而获得最快的访问速度。</p>
<h3 id="服务器群选择"><a href="#服务器群选择" class="headerlink" title="服务器群选择"></a>服务器群选择</h3><p>对于全局负载均衡而言，其核心就是服务器群的选择。对于某个特定的客户，应该将其定向到哪一个服务群？应该使用什么标准来进行这种选择？一般情况下，主要考虑两个因素：临近程度和负载大小。</p>
<p>临近机制主要考察服务器群与用户之间的物理距离。选择地理位置最接近用户的服务器集群，可以减少服务响应到达用户所经过的中转次数，从而降低中转节点对服务质量的影响。</p>
<p>常见的有两种方式，一种是静态配置，例如根据静态的IP地址配置表进行IP地址到服务器群的映射。另一种方式是动态的检测，例如实时地探测到目标IP的距离（可以采用到达目标IP经过的跳数作为度量单位），然后比较探测结果进行选择。</p>
<p>负载机制比较各个服务器群的负载，确定由哪一个服务器群来响应请求。在全局负载均衡中，考察的是服务器群的负载，而不是单个服务器的负载，因此，需要更多地考虑普遍的问题，比如，需要考虑站点的最大连接数、站点的平均响应时间、服务质量等。</p>
<p>常见的GSLB实现方式有三种：DNS轮询、HTTP重定向、IP欺骗（又称三角传输）。这三种实现方式都是在用户通过域名来访问目标服务器时，由GSLB设备进行智能决策，将用户引导到一个最佳的服务IP。</p>
<h3 id="基于-DNS-的-GSLB"><a href="#基于-DNS-的-GSLB" class="headerlink" title="基于 DNS 的 GSLB"></a>基于 DNS 的 GSLB</h3><p>用户访问某个网站时，需要首先通过域名解析服务（DNS）获得网站的IP。域名解析通常不是一次性完成的，常常需要查询若干不同的域名服务器才能找到对应的IP。</p>
<p>如下图所示，用户首先在本地配置一个本地DNS服务器地址，本地DNS服务器收到DNS请求后若不能解析，会将请求转发给更高一级的DNS服务器直到找到域名对应的IP或确定域名不存在。</p>
<script> document.write('<img src="'+ imgurl +'1735396214/f28be903910bfbd9009362e0b36f3840.png">'); </script><br>

<p>对于加入了GSLB的情况，一个GSLB设备（可能是一个4层交换机）会最终代替DNS服务器完成域名解析。</p>
<p>下图展示两种流程的不同：</p>
<script> document.write('<img src="'+ imgurl +'1735396214/382ae923ed92539a65f4c54b51feae33.png">'); </script><br>

<h3 id="基于-DNS-的-GSLB-优缺点"><a href="#基于-DNS-的-GSLB-优缺点" class="headerlink" title="基于 DNS 的 GSLB 优缺点"></a>基于 DNS 的 GSLB 优缺点</h3><p>优点是：实现简单、实施容易、成本低。</p>
<p>缺点是：当GSLB设备采用“用户就近访问”的原则作为选择最优服务器的策略时，会存在判断不准的现象。</p>
<p>原因是在这种策略下，GSLB设备是根据用户IP地址和内容服务器IP地址比较来判断其就近性的，但由于DNS响应是通过本地DNS服务器到达用户的，GSLB设备实际上只能得到用户的本地DNS服务器地址，若用户指定的DNS服务器IP不能正确代表用户的实际位置，就会出现判断不准的现象。</p>
<h3 id="基于-HTTP-重定向的-GSLB"><a href="#基于-HTTP-重定向的-GSLB" class="headerlink" title="基于 HTTP 重定向的 GSLB"></a>基于 HTTP 重定向的 GSLB</h3><p>为了解决基于DNS实现方式判断不准的问题，又出现了基于HTTP重定向的GSLB。</p>
<p>这种方案中GSLB使用HTTP重定向技术，将用户访问重定向到最合适的服务器上。</p>
<script> document.write('<img src="'+ imgurl +'1735396214/59e2855e093b458cd1b72db1b1639487.png">'); </script><br>

<p>使用基于HTTP重定向方案，首先在DNS中将GSLB设备的IP地址登记为域名的A记录（既域名对应的IP）。</p>
<p>如上图所示，用户首先通过DNS得到GSLB设备的IP地址，此时用户以为这就是站点服务器的IP，并向其发送HTTP请求。</p>
<p>GSLB设备收到HTTP请求后使用一定策略选择一个最合适的服务器，然后GSLB设备向用户发送一个HTTP重定向指令（HTTP302），并附上选出的服务器的IP地址。最后，用户根据重定向IP访问站点的服务器。</p>
<h3 id="基于-HTTP-重定向的-GSLB-优缺点"><a href="#基于-HTTP-重定向的-GSLB-优缺点" class="headerlink" title="基于 HTTP 重定向的 GSLB 优缺点"></a>基于 HTTP 重定向的 GSLB 优缺点</h3><p>优点：由于直接向用户发送HTTP重定向指令，可以得到用户的真实IP，从而解决了判断不准确的问题。</p>
<p>缺点是只能为HTTP访问重定向。<br><strong>基于IP欺骗的GSLB</strong><br>HTTP重定向方案解决了判断不准确的问题，但只能针对HTTP协议应用使用。对于HTTP协议以外的访问，就需要使用基于IP欺骗（又称三角传输）的GSLB。</p>
<script> document.write('<img src="'+ imgurl +'1735396214/e891614d18736256d8ac71e2b82e5da4.png">'); </script><br>

<p>基于IP欺骗的方案同样需要首先将GSLB设备的IP地址在DNS中登记为域名的A记录，这样用户对该域名的请求包都会先发送到GSLB设备。</p>
<p>如上图所示，GSLB设备首次收到服务请求包后，会选择一个最合适的服务器，并将服务请求包发送到该服务器。服务器在向用户发送响应包时，将其源IP地址字段改为GSLB设备的IP，发送给用户。</p>
<p>这样，整个过程对用户来说，感觉到的只是GSLB设备在为其提供服务，并不知道其中经历这样一个三角传输的过程。</p>
<p>而且这种方案可以对所有类型的访问如HTTP、FTP等进行重定向，但其速度和效率相对比前两种方案要差一点，因为用户所有的访问请求都通过三个点才能响应，经历了更多的路径和处理，所以其主要作为HTTP重定向方案的补充方案在同一GSLB设备中实现。</p>
<h3 id="服务器群选择策略"><a href="#服务器群选择策略" class="headerlink" title="服务器群选择策略"></a>服务器群选择策略</h3><p>上文中介绍的三种方案，解决了如何将用户引导到指定服务器群的问题，而在此之前首先需要使用某种方式选出最适合用户的服务器群，也就是GSLB在选择服务器群时所采用的策略。接下来介绍一些常用的GSLB策略。<br><strong>（1)地理区域或用户自定义区域</strong>：将若干条IP地址前缀划分一个区域为。根据用户本地DNS的IP地址，将特定IP范围的用户优先分配到某个通过健康检查的站点。</p>
<p><strong>（2)IP地址权重</strong>：可以为DNS应答中的每个IP地址分配权重，权重决定与其他候选IP相比分配到该IP的流量比例。</p>
<p><strong>（3)往返时间（Round Trip Time, RTT）</strong>：RTT策略是基于区域之外最常用的策略。有两种模式的RTT测量：Active RTT测量与Passive RTT测量。在实际部署中，由于网络限制和性能原因，Active RTT往往无法使用，Passive RTT更实用一些。</p>
<p><strong>（a) Active RTT 测量</strong>：<br>当GSLB Controller收到来自LDNS的DNS请求时，GSLB Controller会通知所有站点负载均衡设备对该LDNS进行RTT测量。根据采集到的RTT值，GSLB Controller会选择RTT值最小的站点的VIP返回给LDNS。</p>
<p>由于Active RTT采用DNS Query或ICMP进行RTT测量，在有些网络中可能会被安全策略所过滤而无法工作。</p>
<p>Active RTT测量会产生额外的DNS Query或ICMP流量，在有些网络中用户不希望有太多类似的非用户流量。</p>
<p><strong>（b) Passive RTT测量</strong>：<br>Passive RTT测量指从内容站点收到一个用户发出连接请求(发送TCN SYN)到接收到用户的确认(收到TCP ACK)所经历的时间。而不是简单的PING的响应时间，可以更精确的衡量访问最快的站点。</p>
<p>Passive RTT测量不会主动去进行测量，也不会产生额外的数据流量，而是在用户向返回的VIP建立连接时进行采集。</p>
<p>Passive RTT的测量值真正反映了用户的上网感受，在运营商网络中也不会产生额外流量。也不会受到其他运营商或网络的安全策略的影响。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络的 89 个核心概念</title>
    <url>/2024/12/28/2024122807/</url>
    <content><![CDATA[<p>计算机网络中的概念非常庞杂，理解起来比较困难，所以这里，我给大家汇总了计算机网络中 89 个常见的概念，希望对你有所帮助。<span id="more"></span></p>
<p> <strong>主机</strong>：计算机网络上任何一种能够连接网络的设备都被称为主机或者说端系统，比如手机、平板电脑、电视、游戏机、汽车等，随着 5G<br>    的到来，将会有越来越多的终端设备接入网络。</p>
<p><strong>通信链路</strong>：通信链路是由物理链路（同轴电缆、双绞线、光纤等）连接到一起组成的一种物理通路。</p>
<p><strong>传输速率</strong>：单位是 bit&#x2F;s 或者 bps ，用来度量不同链路从一个端系统到另一个端系统传输数据的速率。</p>
<p><strong>分组</strong>：当一台端系统向另外一台端系统发送数据时，通常会将数据进行分片，然后为每段加上首部字节，从而形成计算机网络的专业术语：分组。这些分组通过网络发送到端系统，然后再进行数据处理。</p>
<p><strong>路由器</strong>：它和链路层交换机一样，都是一种交换机，主要用于转发数据的目的。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/9a2b4c2837c1a8ea5776057681accbc5.png">'); </script><br>

<p><strong>路径</strong>：一个分组所经历一系列通信链路和分组交换机称为通过这个网络的路径。<br><strong>因特网服务商</strong>：也叫 ISP，不是 lsp。这个好理解，就是网络运营商，移动、电信、联通。</p>
<ol>
<li><strong>网络协议</strong>：网络协议是计算机网络中进行数据交换而建立的规则、标准或者约定。<br><strong>IP</strong>：网际协议，它规定了路由器和端系统之间发送和接收的分组格式。</li>
</ol>
<p> <strong>TCP&#x2F;IP 协议簇</strong>：不仅仅只有 TCP 协议和 IP 协议，而是以 TCP、IP 协议为主的一系列协议，比如 ICMP 协议、ARP 协议、UDP 协议、DNS 协议、SMTP 协议等。</p>
<p><strong>分布式应用程序</strong>：多个端系统之间相互交换数据的端系统被称为分布式应用程序。</p>
<p> <strong>套接字接口</strong>：指的就是 socket 接口，这个接口规定了端系统之间通过因特网进行数据交换的方式。</p>
<p><strong>协议</strong>：协议定义了两个以上通信实体之间交换报文格式和顺序所遵从的标准。</p>
<p> <strong>客户端</strong>：在客户-服务器架构中扮演请求方的角色，通常是 PC，智能手机等端系统。</p>
<p><strong>服务器</strong>：在客户-服务器架构中扮演服务方的角色，通常是大型服务器集群扮演服务器的角色。</p>
<p><strong>转发表</strong>：路由内部记录报文路径的映射关系的一种记录。</p>
<p> <strong>时延</strong>：时延指的是一个报文或者分组从网络的一端传递到另一端所需要的时间，时延分类有发送时延、传播时延、处理时延、排队时延，总时延 &#x3D; 发送时延+传播时延+处理时延+排队时延。</p>
<p> <strong>丢包</strong>：在计算机网络中指的是分组出现丢失的现象。</p>
<p><strong>吞吐量</strong>：吞吐量在计算机网络中指的是单位时间内成功传输数据的数量。</p>
<p><strong>报文</strong>：通常指的是应用层的分组。</p>
<p><strong>报文段</strong>：通常把运输层的分组称为报文段。</p>
<p><strong>数据报</strong>：通常将网络层的分组称为数据报。</p>
<p><strong>帧</strong>：一般把链路层的分组称为帧。</p>
<p><strong>客户-服务体系</strong>：它是一种面向网络应用的体系结构。把系统中的不同端系统区分为客户和服务器两类，客户向服务器发出服务请求，由服务器完成所请求的服务，并把处理结果回送给客户。在客户-服务器体系结构中，有一个总是打开的主机称为 服务器(Server)，它提供来自于 客户(client) 的服务。我们最常见的服务器就是 Web 服务器，Web 服务器服务于来自 浏览器 的请求。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/47921225ecf9d72ea636792ad736f309.png">'); </script><br>

<p><strong>CIDR</strong>：使用任意长度分割 IP 地址的网络标识和主机标识</p>
<p><strong>P2P 体系</strong>：对等体系结构，相当于没有服务器了，大家都是客户机，每个客户既能发送请求，也能对请求作出响应。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/120728ff5a4a94d583fde9fb768ce6b1.png">'); </script><br>

<p><strong>IP 地址</strong>：IP 地址就是网际协议地址，在互联网中唯一标识主机的一种地址。每一台入网的设备都会有一个 IP 地址，这个 IP 又分为内网 IP 和公网 IP。</p>
<p><strong>端口号</strong>：在同一台主机内，端口号用于标识不同应用程序进程。</p>
<p><strong>URI</strong>：它的全称是（Uniform Resource Identifier），中文名称是统一资源标识符，使用它就能够唯一地标记互联网上资源。</p>
<p><strong>URL</strong>：它的全称是（Uniform Resource Locator），中文名称是统一资源定位符，它实际上是 URI 的一个子集。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/c5652c7c9c54cf6f8a4d99a4ee38e565.png">'); </script><br>

<p><strong>HTML</strong>：HTML 称为超文本标记语言，是一种标识性的语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的 Internet 资源连接为一个逻辑整体。HTML 文本是由 HTML 命令组成的描述性文本，HTML 命令可以说明文字，图形、动画、声音、表格、链接等。</p>
<p><strong>Web 页面</strong>：Web 页面也叫做 Web Page，它是由对象组成，一个对象(object) 简单来说就是一个文件，这个文件可以是 HTML 文件、一个图片、一段 Java 应用程序等，它们都可以通过 URI 来找到。一个 Web 页面包含了很多对象，Web 页面可以说是对象的集合体。</p>
<p><strong>Web 服务器</strong>：Web 服务器的正式名称叫做 Web Server，Web 服务器可以向浏览器等 Web 客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。目前最主流的三个 Web 服务器是 Apache、 Nginx 、IIS。</p>
<p><strong>CDN</strong>：CDN 的全称是Content Delivery Network，即内容分发网络，它应用了 HTTP 协议里的缓存和代理技术，代替源站响应客户端的请求。CDN 是构建在现有网络基础之上的网络，它依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。</p>
<p><strong>WAF</strong>：WAF 是一种 应用程序防护系统，它是一种通过执行一系列针对 HTTP &#x2F; HTTPS的安全策略来专门为 Web 应用提供保护的一款产品，它是应用层面的防火墙，专门检测 HTTP 流量，是防护 Web 应用的安全技术。</p>
<p><strong>WebService</strong> ：WebService 是一种 Web 应用程序，WebService 是一种跨编程语言和跨操作系统平台的远程调用技术。</p>
<p><strong>HTTP</strong>：TCP&#x2F;IP 协议簇的一种，它是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。</p>
<p><strong>Session</strong>：Session 其实就是客户端会话的缓存，主要是为了弥补 HTTP 无状态的特性而设计的。服务器可以利用 Session 存储客户端在同一个会话期间的一些操作记录。当客户端请求服务端时，服务端会为这次请求开辟一块内存空间，这个对象便是 Session 对象，存储结构为 ConcurrentHashMap。</p>
<p><strong>Cookie</strong>：HTTP 协议中的 Cookie 包括 Web Cookie 和浏览器 Cookie，它是服务器发送到 Web 浏览器的一小块数据。服务器发送到浏览器的 Cookie，浏览器会进行存储，并与下一个请求一起发送到服务器。通常，它用于判断两个请求是否来自于同一个浏览器，例如用户保持登录状态。</p>
<p><strong>SMTP 协议</strong> ：提供电子邮件服务的协议叫做 SMTP 协议， SMTP 在传输层也使用了 TCP 协议。SMTP 协议主要用于系统之间的邮件信息传递，并提供有关来信的通知。</p>
<p><strong>DNS 协议</strong>：由于 IP 地址是计算机能够识别的地址，而我们人类不方便记忆这种地址，所以为了方便人类的记忆，使用 DNS 协议，来把我们容易记忆的网络地址映射称为主机能够识别的 IP 地址。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/2575539ea120ce1a75d631ca049a5523.png">'); </script><br>

<p><strong>TELNET 协议</strong>：远程登陆协议，它允许用户(Telnet 客户端)通过一个协商过程来与一个远程设备进行通信，它为用户提供了在本地计算机上完成远程主机工作的能力。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/ea9cd573e7d5a9b74d2da313698b1365.png">'); </script><br>

<p><strong>SSH 协议</strong>：SSH 是一种建立在应用层上的安全加密协议。因为 TELNET 有一个非常明显的缺点，那就是在主机和远程主机的发送数据包的过程中是明文传输，未经任何安全加密，这样的后果是容易被互联网上不法分子嗅探到数据包来搞一些坏事，为了数据的安全性，我们一般使用 SSH 进行远程登录。</p>
<p><strong>FTP 协议</strong>：文件传输协议，是应用层协议之一。FTP 协议包括两个组成部分，分为 FTP 服务器和 FTP 客户端。其中 FTP 服务器用来存储文件，用户可以使用 FTP 客户端通过 FTP 协议访问位于 FTP 服务器上的资源。FTP 协议传输效率很高，一般用来传输大文件。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/43092777f8f78bbaafea87893f796b30.png">'); </script><br>

<p><strong>MIME 类型</strong>，它表示的是互联网的资源类型，一般类型有 超文本标记语言文本 .html text&#x2F;html、xml文档 .xml text&#x2F;xml、普通文本 .txt text&#x2F;plain、PNG图像 .png image&#x2F;png、GIF图形 .gif image&#x2F;gif、JPEG图形 .jpeg,.jpg image&#x2F;jpeg、AVI 文件 .avi video&#x2F;x-msvideo 等。</p>
<p><strong>多路分解</strong>：在接收端，运输层会检查源端口号和目的端口号等字段，然后标识出接收的套接字，从而将运输层报文段的数据交付到正确套接字的过程被称为多路分解。</p>
<p><strong>多路复用</strong>：在发送方，从不同的套接字中收集数据块，然后为数据块封装上首部信息从而生成报文段，然后将报文段传递给网络层的过程被称为多路复用。</p>
<p><strong>周知端口号</strong>：在主机的应用程序中，从 0 - 1023 的端口号是受限制的，被称为周知端口号，这些端口号一般不能占用。</p>
<p><strong>单向数据传输</strong>：数据的流向只能是单向的，也就是从发送端 -&gt; 接收端。</p>
<p><strong>双向数据传输</strong>：数据的流向是双向的，又叫做全双工通信，发送端和接收端可以相互发送数据。</p>
<p><strong>面向连接的</strong>：面向连接指的是应用进程在向另一个应用进程发送数据前，需要先进行握手，即它们必须先相互发送预备报文段，用来建立确保数据传输的参数。</p>
<p><strong>三次握手</strong>：TCP 连接的建立需要经过三个报文段的发送，这种连接的建立过程被称为三次握手。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/cc19c89c0dbcdd3c394d1371ad47b846.png">'); </script><br>

<p><strong>最大报文段长度</strong>：即 MSS，它指的是从缓存中取出并放入报文段中的最大值。</p>
<p><strong>最大传输单元</strong>：即 MTU，它指的是通信双方能够接收有效载荷的大小，MSS 通常会根据 MTU 来设。</p>
<p><strong>冗余 ACK</strong>：就是再次确认某个报文段的 ACK，报文段的丢失会导致冗余 ACK 的出现。</p>
<p><strong>快速重传</strong>：即在报文段定时器过期之前重传丢失的报文段。</p>
<p><strong>选择确认</strong>：在报文段出现丢失的情况下，TCP 能够选择确认失序的报文段，这个机制通常和重传一起使用。</p>
<p><strong>拥塞控制</strong>：拥塞控制说的是，当某一段时间网络中的分组过多，使得接收端来不及处理，从而引起部分甚至整个网络性能下降的现象时采取的一种抑制发送端发送数据，等过一段时间或者网络情况改善后再继续发送报文段的一种方法。</p>
<p><strong>四次挥手</strong>：TCP 断开链接需要经过四个报文段的发送，这种断开过程是四次挥手。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/adf568dac0d6525667871a9afcfc59ad.png">'); </script><br>

<p><strong>路由选择算法</strong>：网络层中决定分组发送路径的一种算法。</p>
<p><strong>转发</strong>：它指的是将分组从一个输入链路转移到合适的输出链路的动作。</p>
<p><strong>分组调度</strong>：分组调度讨论的是分组如何经输出链路传输的问题，主要有三种调度方式：先进先出、优先级排队和”循环和加权公平排队”。</p>
<p><strong>IPv4</strong>：网际协议的第四个版本，也是被广泛使用的一个版本。IPv4 是一种无连接的协议，无连接不保证数据的可靠性交付。使用 32 位的地址。</p>
<p><strong>IPv6</strong>：网际协议的第六个版本，IPv6 的地址长度是 128 位，由于 IPv4 最大的问题在于网络地址资源不足，严重制约了互联网的应用和发展。IPv6 的使用，不仅能解决网络地址资源数量的问题，而且也解决了多种接入设备连入互联网的障碍。</p>
<p><strong>接口</strong>：主机和物理链路之间的边界。</p>
<p><strong>ARP 协议</strong>：ARP 是一种解决地址问题的协议，通过 IP 位线索，可以定位下一个用来接收数据的网络设备的 MAC 地址。如果目标主机与主机不在同一个链路上时，可以通过 ARP 查找下一跳路由的地址。不过 ARP 只适用于 IPv4 ，不适用于 IPv6。</p>
<p><strong>RARP</strong>：RARP 就是将 ARP 协议反过来，通过 MAC 地址定位 IP 地址的一种协议。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/6fb609173f974346b7dc6ee88ddfedcc.png">'); </script><br>

<p><strong>代理 ARP</strong>：用于解决 ARP 包被路由器隔离的情况，通过代理 ARP 可以实现将 ARP 请求转发给临近的网段。</p>
<p><strong>ICMP 协议</strong>：Internet 报文控制协议，如果在 IP 通信过程中由于某个 IP 包由于某种原因未能到达目标主机，那么将会发送 ICMP 消息，ICMP 实际上是 IP 的一部分。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/23d5c4a768d06f2d6a72167e67357dfd.png">');</script><br>


<p><strong>DHCP 协议</strong>：DHCP 是一种动态主机配置协议。使用 DHCP 就能实现自动设置 IP 地址、统一管理 IP 地址分配，实现即插即用。</p>
<p><strong>NAT 协议</strong>：网络地址转换协议，它指的是所有本地地址的主机在接入网络时，都会要在 NAT 路由器上将其转换成为全球 IP 地址，才能和其他主机进行通信。</p>
<p><strong>IP 隧道</strong>：IP 隧道技术说的是由路由器把网络层协议封装到另一个协议中从而跨过网络传输到另外一个路由器的过程。</p>
<p><strong>单播</strong>：单播最大的特点就是 1 对 1，早期的固定电话就是单播的一个例子</p>
<script> document.write('<img src="'+ imgurl +'1735396470/c75633e66131a7a1195c32fd695d8d6e.png">');</script><br>

<p><strong>广播</strong>：我们一般小时候经常会广播体操，这就是广播的一个事例，主机和与他连接的所有端系统相连，主机将信号发送给所有的端系统。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/7b5f8dccea68b7f15d178160016f4978.png">');</script><br>

<p><strong>多播</strong>：多播与广播很类似，也是将消息发送给多个接收主机，不同之处在于多播需要限定在某一组主机作为接收端。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/341fdd031808aa8d8c85f13ce5878a35.png">');</script><br>

<p><strong>任播</strong>：任播是在特定的多台主机中选出一个接收端的通信方式。虽然和多播很相似，但是行为与多播不同，任播是从许多目标机群中选出一台最符合网络条件的主机作为目标主机发送消息。然后被选中的特定主机将返回一个单播信号，然后再与目标主机进行通信。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/96dd3237b7f0acc0f851e3fd421d0126.png">');</script><br>

<p><strong>IGP</strong>：内部网关协议，一般用于企业内部自己搭建的路由自治系统。</p>
<p><strong>EGP</strong>：外部网关协议，EGP 通常用于在网络主机之间相互交换路由信息。</p>
<p><strong>RIP</strong> ：一种距离向量型路由协议，广泛应用于 LAN 网。</p>
<p><strong>OSPF</strong>：是根据 OSI 的 IS-IS 协议提出的一种链路状态型协议。这种协议还能够有效的解决网络环路问题。</p>
<p><strong>MPLS</strong>：它是一种标记交换技术，标记交换会对每个 IP 数据包都设定一个标记，然后根据这个标记进行转发。</p>
<p><strong>节点</strong>：一般指链路层协议中的设备。</p>
<p><strong>链路</strong>：一般把沿着通信路径连接相邻节点的通信信道称为链路。</p>
<p><strong>MAC 协议</strong>：媒体访问控制协议，它规定了帧在链路上传输的规则。</p>
<p><strong>奇偶校验位</strong>：一种差错检测方式，多用于计算机硬件的错误检测中，奇偶校验通常用在数据通信中来保证数据的有效性。</p>
<p><strong>向前纠错</strong>：接收方检测和纠正差错的能力被称为向前纠错。</p>
<p><strong>以太网</strong>：以太网是一种当今最普遍的局域网技术，它规定了物理层的连线、电子信号和 MAC 协议的内容。</p>
<p><strong>VLAN</strong>：虚拟局域网（VLAN）是一组逻辑上的设备和用户，这些设备和用户并不受物理位置的限制，可以根据功能、部门及应用等因素将它们组织起来，相互之间的通信就好像它们在同一个网段中一样，所以称为虚拟局域网。</p>
<p><strong>基站</strong>：无线网络的基础设施。</p>
<script> document.write('<img src="'+ imgurl +'1735396470/eb750b49aabfdeddb3912c50a5f9579a.png">');</script><br>

<p><strong>后记</strong><br>希望这篇文章能够帮助大家更好的理解计算机网络，同时也希望大家能够点赞、在看、分享、转发！</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>干活总结 | SQL 语法速成手册</title>
    <url>/2024/12/28/2024122808/</url>
    <content><![CDATA[<p>本文针对关系型数据库的一般语法。限于篇幅，本文侧重说明用法，不会展开讲解特性、原理。本文内容包括基本概念、增删改查、子查询、连接和组合、函数、排序和分组、数据定义、事务处理、权限管理等等。</p>
<span id="more"></span>
<h3 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h3><p><strong>数据库术语</strong></p>
<ul>
<li>数据库（database）：保存有组织的数据的容器（通常是一个文件或一组文件）。</li>
<li>数据表（table） ：某种特定类型数据的结构化清单。</li>
<li>模式（schema）：关于数据库和表的布局及特性的信息。模式定义了数据在表中如何存储，包含存储什么样的数据，数据如何分解，各部分信息如何命名等信息。数据库和表都有模式。</li>
<li>列（column）：表中的一个字段。所有表都是由一个或多个列组成的。</li>
<li>行（row）：表中的一个记录。</li>
<li>主键（primary key）：一列（或一组列），其值能够唯一标识表中每一行。<br><strong>SQL 语法</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span>（Structured Query <span class="keyword">Language</span>)，标准 <span class="keyword">SQL</span> 由 ANSI 标准委员会管理，从而称为 ANSI <span class="keyword">SQL</span>。各个 DBMS 都有自己的实现，如 PL<span class="operator">/</span><span class="keyword">SQL</span>、Transact<span class="operator">-</span><span class="keyword">SQL</span> 等。</span><br></pre></td></tr></table></figure>
<strong>SQL 语法结构</strong></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735397190/b51024429aca4edb2b021c938fbaf852.png">'); </script><br>

<p><strong>SQL 语法结构包括：</strong></p>
<ul>
<li>子句 - 是语句和查询的组成成分。（在某些情况下，这些都是可选的。）</li>
<li>表达式 - 可以产生任何标量值，或由列和行的数据库表</li>
<li>谓词 - 给需要评估的 SQL 三值逻辑（3VL）（true&#x2F;false&#x2F;unknown）或布尔真值指定条件，并限制语句和查询的效果，或改变程序流程。</li>
<li>查询 - 基于特定条件检索数据。这是 SQL 的一个重要组成部分。</li>
<li>语句 - 可以持久地影响纲要和数据，也可以控制数据库事务、程序流程、连接、会话或诊断。<br><strong>SQL 语法要点</strong></li>
<li>SQL 语句不区分大小写，但是数据库表名、列名和值是否区分，依赖于具体的 DBMS 以及配置。<br>例如：SELECT 与 select 、Select 是相同的。</li>
<li>多条 SQL 语句必须以分号（;）分隔。</li>
<li>处理 SQL 语句时，所有空格都被忽略。SQL 语句可以写成一行，也可以分写为多行。<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 一行 SQL 语句</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span>, password<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span> <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多行 SQL 语句</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span>, password<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure></li>
<li>SQL 支持三种注释<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">## 注释<span class="number">1</span></span><br><span class="line"><span class="comment">-- 注释2</span></span><br><span class="line"><span class="comment">/* 注释3 */</span></span><br></pre></td></tr></table></figure>
<strong>SQL 分类</strong><br><strong>数据定义语言（DDL）</strong><br>数据定义语言（Data Definition Language，DDL）是 SQL 语言集中负责数据结构定义与数据库对象定义的语言。<br>DDL 的主要功能是定义数据库对象。<br>DDL 的核心指令是 CREATE、ALTER、DROP。<br><strong>数据操纵语言（DML）</strong><br>数据操纵语言（Data Manipulation Language, DML）是用于数据库操作，对数据库其中的对象和数据运行访问工作的编程语句。DML 的主要功能是 访问数据，因此其语法都是以读写数据库为主。<br>DML 的核心指令是 INSERT、UPDATE、DELETE、SELECT。这四个指令合称 CRUD(Create, Read, Update, Delete)，即增删改查。<br><strong>事务控制语言（TCL）</strong><br>事务控制语言 (Transaction Control Language, TCL) 用于管理数据库中的事务。这些用于管理由 DML 语句所做的更改。它还允许将语句分组为逻辑事务。<br>TCL 的核心指令是 COMMIT、ROLLBACK。<br><strong>数据控制语言（DCL）</strong><br>数据控制语言 (Data Control Language, DCL) 是一种可对数据访问权进行控制的指令，它可以控制特定用户账户对数据表、查看表、预存程序、用户自定义函数等数据库对象的控制权。<br>DCL 的核心指令是 GRANT、REVOKE。<br>DCL 以控制用户的访问权限为主，因此其指令作法并不复杂，可利用 DCL 控制的权限有：CONNECT、SELECT、INSERT、UPDATE、DELETE、EXECUTE、USAGE、REFERENCES。<br>根据不同的 DBMS 以及不同的安全性实体，其支持的权限控制也有所不同。<br>（以下为 DML 语句用法）</li>
</ul>
<h3 id="二、增删改查"><a href="#二、增删改查" class="headerlink" title="二、增删改查"></a>二、增删改查</h3><blockquote>
<p>增删改查，又称为 CRUD，数据库基本操作中的基本操作。</p>
</blockquote>
<p><strong>插入数据</strong></p>
<blockquote>
<p>INSERT INTO 语句用于向表中插入新记录。</p>
</blockquote>
<p><strong>插入完整的行</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;xxxx@163.com&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><strong>插入行的一部分</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span>(username, password, email)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;xxxx@163.com&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><strong>插入查询出来的数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> <span class="keyword">user</span>(username)</span><br><span class="line"><span class="keyword">SELECT</span> name</span><br><span class="line"><span class="keyword">FROM</span> account;</span><br></pre></td></tr></table></figure>
<p><strong>更新数据</strong></p>
<blockquote>
<p>UPDATE 语句用于更新表中的记录。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SET</span> username<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span>, password<span class="operator">=</span><span class="string">&#x27;robot&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>删除数据</strong></p>
<blockquote>
<p>DELETE 语句用于删除表中的记录。<br>TRUNCATE TABLE 可以清空表，也就是删除所有行。</p>
</blockquote>
<p><strong>删除表中的指定数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;robot&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>清空表中的数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<p><strong>查询数据</strong></p>
<blockquote>
<p>SELECT 语句用于从数据库中查询数据。<br>DISTINCT 用于唯一不同的值。它作用于所有列，也就是说所有列的值都相同才算相同。<br>LIMIT 限制返回的行数。可以有两个参数，第一个参数为起始行，从 0 开始；第二个参数为返回的总行数。<br> ASC ：升序（默认）<br> DESC：降序返回<br><strong>查询单列</strong></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name</span><br><span class="line"><span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>
<p><strong>查询多列</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>
<p><strong>查询所有列</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>
<p><strong>查询不同的值</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">vend_id <span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>
<p><strong>限制查询结果</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 返回前 5 行</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> mytable LIMIT <span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> mytable LIMIT <span class="number">0</span>, <span class="number">5</span>;</span><br><span class="line"><span class="comment">-- 返回第 3 ~ 5 行</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> mytable LIMIT <span class="number">2</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<h3 id="三、子查询"><a href="#三、子查询" class="headerlink" title="三、子查询"></a>三、子查询</h3><blockquote>
<p>子查询是嵌套在较大查询中的 SQL 查询。子查询也称为内部查询或内部选择，而包含子查询的语句也称为外部查询或外部选择。</p>
</blockquote>
<ul>
<li>子查询可以嵌套在 SELECT，INSERT，UPDATE 或 DELETE 语句内或另一个子查询中。</li>
<li>子查询通常会在另一个 SELECT 语句的 WHERE 子句中添加。</li>
<li>您可以使用比较运算符，如 &gt;，&lt;，或 &#x3D;。比较运算符也可以是多行运算符，如 IN，ANY 或 ALL。</li>
<li>子查询必须被圆括号 () 括起来。</li>
<li>内部查询首先在其父查询之前执行，以便可以将内部查询的结果传递给外部查询。执行过程可以参考下图：</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735397190/71094a0badbcdf9705d28c3e251b9f77.png">'); </script><br>

<p><strong>子查询的子查询</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> cust_id</span><br><span class="line">                  <span class="keyword">FROM</span> orders</span><br><span class="line">                  <span class="keyword">WHERE</span> order_num <span class="keyword">IN</span> (<span class="keyword">SELECT</span> order_num</span><br><span class="line">                                      <span class="keyword">FROM</span> orderitems</span><br><span class="line">                                      <span class="keyword">WHERE</span> prod_id <span class="operator">=</span> <span class="string">&#x27;RGAN01&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>WHERE</strong></p>
<ul>
<li>WHERE 子句用于过滤记录，即缩小访问数据的范围。</li>
<li>WHERE 后跟一个返回 true 或 false 的条件。</li>
<li>WHERE 可以与 SELECT，UPDATE 和 DELETE 一起使用。</li>
<li>可以在 WHERE 子句中使用的操作符</li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735397190/9571060495aad4295e8affb64dcf704f.png">'); </script><br>

<p><strong>SELECT</strong>语句中的 <strong>WHERE</strong>子句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Kids Place&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>UPDATE 语句中的 WHERE 子句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Customers</span><br><span class="line"><span class="keyword">SET</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Jack Jones&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Kids Place&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>DELETE 语句中的 WHERE 子句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Kids Place&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>IN 和 BETWEEN</strong></p>
<ul>
<li>IN 操作符在 WHERE 子句中使用，作用是在指定的几个特定值中任选一个值。</li>
<li>BETWEEN 操作符在 WHERE 子句中使用，作用是选取介于某个范围内的值。<br><strong>IN 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> vend_id <span class="keyword">IN</span> (<span class="string">&#x27;DLL01&#x27;</span>, <span class="string">&#x27;BRS01&#x27;</span>);</span><br></pre></td></tr></table></figure>
<strong>BETWEEN 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> prod_price <span class="keyword">BETWEEN</span> <span class="number">3</span> <span class="keyword">AND</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<strong>AND、OR、NOT</strong></li>
<li>AND、OR、NOT 用于对过滤条件的逻辑处理指令。</li>
<li>AND 优先级高于 OR，为了明确处理顺序，可以使用 ()。</li>
<li>AND 操作符表示左右条件都要满足。</li>
<li>OR 操作符表示左右条件满足任意一个即可。</li>
<li>NOT 操作符用于否定一个条件。<br><strong>AND 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> vend_id <span class="operator">=</span> <span class="string">&#x27;DLL01&#x27;</span> <span class="keyword">AND</span> prod_price <span class="operator">&lt;=</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure>
<strong>OR 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> vend_id <span class="operator">=</span> <span class="string">&#x27;DLL01&#x27;</span> <span class="keyword">OR</span> vend_id <span class="operator">=</span> <span class="string">&#x27;BRS01&#x27;</span>;</span><br></pre></td></tr></table></figure>
<strong>NOT 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> prod_price <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">3</span> <span class="keyword">AND</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<strong>LIKE</strong></li>
<li>LIKE 操作符在 WHERE 子句中使用，作用是确定字符串是否匹配模式。</li>
<li>只有字段是文本值时才使用 LIKE。</li>
<li>LIKE 支持两个通配符匹配选项：% 和 _。</li>
<li>不要滥用通配符，通配符位于开头处匹配会非常慢。</li>
<li>% 表示任何字符出现任意次数。</li>
<li>_ 表示任何字符出现一次。<br><strong>% 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">&#x27;%bean bag%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<strong>_ 示例</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">&#x27;__ inch teddy bear&#x27;</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="四、连接和组合"><a href="#四、连接和组合" class="headerlink" title="四、连接和组合"></a>四、连接和组合</h3><p> <strong>连接（JOIN）</strong></p>
<blockquote>
<p>如果一个 JOIN 至少有一个公共字段并且它们之间存在关系，则该 JOIN 可以在两个或多个表上工作。<br>连接用于连接多个表，使用 JOIN 关键字，并且条件语句使用 ON 而不是 WHERE。<br>JOIN 保持基表（结构和数据）不变。<br>JOIN 有两种连接类型：内连接和外连接。<br>内连接又称等值连接，使用 INNER JOIN 关键字。在没有条件语句的情况下返回笛卡尔积。<br>自连接可以看成内连接的一种，只是连接的表是自身而已。<br>自然连接是把同名列通过 &#x3D; 测试连接起来的，同名列可以有多个。<br>内连接 vs 自然连接<br>内连接提供连接的列，而自然连接自动连接所有同名列。<br>外连接返回一个表中的所有行，并且仅返回来自次表中满足连接条件的那些行，即两个表中的列是相等的。外连接分为左外连接、右外连接、全外连接（Mysql 不支持）。<br>左外连接就是保留左表没有关联的行。<br>右外连接就是保留右表没有关联的行。<br>连接 vs 子查询<br>连接可以替换子查询，并且比子查询的效率一般会更快。</p>
</blockquote>
<script> document.write('<img src="'+ imgurl +'1735397190/bdf505770796ec70834c1836777adf0a.png">'); </script><br>

<p><strong>内连接（INNER JOIN）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> vend_name, prod_name, prod_price</span><br><span class="line"><span class="keyword">FROM</span> vendors <span class="keyword">INNER</span> <span class="keyword">JOIN</span> products</span><br><span class="line"><span class="keyword">ON</span> vendors.vend_id <span class="operator">=</span> products.vend_id;</span><br></pre></td></tr></table></figure>
<p><strong>自连接</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c1.cust_id, c1.cust_name, c1.cust_contact</span><br><span class="line"><span class="keyword">FROM</span> customers c1, customers c2</span><br><span class="line"><span class="keyword">WHERE</span> c1.cust_name <span class="operator">=</span> c2.cust_name</span><br><span class="line"><span class="keyword">AND</span> c2.cust_contact <span class="operator">=</span> <span class="string">&#x27;Jim Jones&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>自然连接（NATURAL JOIN）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> Customers;</span><br></pre></td></tr></table></figure>
<p><strong>左连接（LEFT JOIN）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> customers.cust_id, orders.order_num</span><br><span class="line"><span class="keyword">FROM</span> customers <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> orders</span><br><span class="line"><span class="keyword">ON</span> customers.cust_id <span class="operator">=</span> orders.cust_id;</span><br></pre></td></tr></table></figure>
<p><strong>右连接（RIGHT JOIN）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> customers.cust_id, orders.order_num</span><br><span class="line"><span class="keyword">FROM</span> customers <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> orders</span><br><span class="line"><span class="keyword">ON</span> customers.cust_id <span class="operator">=</span> orders.cust_id;</span><br></pre></td></tr></table></figure>
<p><strong>组合（UNION）</strong></p>
<ul>
<li>UNION 运算符将两个或更多查询的结果组合起来，并生成一个结果集，其中包含来自 UNION 中参与查询的提取行。</li>
<li>UNION 基本规则<br>  所有查询的列数和列顺序必须相同。<br>  每个查询中涉及表的列的数据类型必须相同或兼容。<br>  通常返回的列名取自第一个查询。</li>
<li>默认会去除相同行，如果需要保留相同行，使用 UNION ALL。</li>
<li>只能包含一个 ORDER BY 子句，并且必须位于语句的最后。</li>
<li>应用场景<br>  在一个查询中从不同的表返回结构数据。<br>  对一个表执行多个查询，按一个查询返回数据。<br><strong>组合查询</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact, cust_email</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_state <span class="keyword">IN</span> (<span class="string">&#x27;IL&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>, <span class="string">&#x27;MI&#x27;</span>)</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> cust_name, cust_contact, cust_email</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_name <span class="operator">=</span> <span class="string">&#x27;Fun4All&#x27;</span>;</span><br></pre></td></tr></table></figure>
<strong>JOIN vs UNION</strong></li>
<li>JOIN vs UNION<br>JOIN 中连接表的列可能不同，但在 UNION 中，所有查询的列数和列顺序必须相同。<br>UNION 将查询之后的行放在一起（垂直放置），但 JOIN 将查询之后的列放在一起（水平放置），即它构成一个笛卡尔积。</li>
</ul>
<h3 id="五、函数"><a href="#五、函数" class="headerlink" title="五、函数"></a>五、函数</h3><blockquote>
<p>🔔 注意：不同数据库的函数往往各不相同，因此不可移植。本节主要以 Mysql 的函数为例。</p>
</blockquote>
<p><strong>文本处理</strong></p>
<script> document.write('<img src="'+ imgurl +'1735397190/b34482920060d4393ea6f5b834498aef.png">'); </script><br>

<p>其中， SOUNDEX() 可以将一个字符串转换为描述其语音表示的字母数字模式。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> SOUNDEX(col1) <span class="operator">=</span> SOUNDEX(<span class="string">&#x27;apple&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>日期和时间处理</strong></p>
<ul>
<li>日期格式：YYYY-MM-DD<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735397190/cad08d4fc59322da53ac35c89496f739.png">'); </script><br>

<ul>
<li>时间格式：HH:MM:SS<br></li>
</ul>
<script> document.write('<img src="'+ imgurl +'1735397190/826c34517354fadeaacb35276e00a5fa.png">'); </script><br>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> NOW();</span><br><span class="line"><span class="number">2018</span><span class="number">-4</span><span class="number">-14</span> <span class="number">20</span>:<span class="number">25</span>:<span class="number">11</span></span><br></pre></td></tr></table></figure>
<p><strong>数值处理</strong></p>
<script> document.write('<img src="'+ imgurl +'1735397190/2f3cd59a8540b794abbb56acbf570fe5.png">'); </script><br>

<p><strong>汇总</strong></p>
<script> document.write('<img src="'+ imgurl +'1735397190/64e5af6d216847add169f0c592a40395.png">'); </script><br>

<p>AVG() 会忽略 NULL 行。</p>
<p>使用 DISTINCT 可以让汇总函数值汇总不同的值。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="keyword">DISTINCT</span> col1) <span class="keyword">AS</span> avg_col</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure>
<p>AVG() 会忽略 NULL 行。<br>使用 DISTINCT 可以让汇总函数值汇总不同的值。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(<span class="keyword">DISTINCT</span> col1) <span class="keyword">AS</span> avg_col</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure>
<h3 id="六、排序和分组"><a href="#六、排序和分组" class="headerlink" title="六、排序和分组"></a>六、排序和分组</h3><p><strong>ORDER BY</strong></p>
<ul>
<li>ORDER BY 用于对结果集进行排序。<br>  ASC ：升序（默认）<br>  DESC ：降序</li>
<li>可以按多个列进行排序，并且为每个列指定不同的排序方式<br><strong>指定多个列的排序方向</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span>, prod_name <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>
<strong>GROUP BY</strong></li>
<li>GROUP BY 子句将记录分组到汇总行中。</li>
<li>GROUP BY 为每个组返回一个记录。</li>
<li>GROUP BY 通常还涉及聚合：COUNT，MAX，SUM，AVG 等。</li>
<li>GROUP BY 可以按一列或多列进行分组。</li>
<li>GROUP BY 按分组字段进行排序后，ORDER BY 可以以汇总字段来进行排序。<br><strong>分组</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, <span class="built_in">COUNT</span>(cust_address) <span class="keyword">AS</span> addr_num</span><br><span class="line"><span class="keyword">FROM</span> Customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> cust_name;</span><br></pre></td></tr></table></figure>
<strong>分组后排序</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, <span class="built_in">COUNT</span>(cust_address) <span class="keyword">AS</span> addr_num</span><br><span class="line"><span class="keyword">FROM</span> Customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> cust_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cust_name <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>
<strong>HAVING</strong></li>
<li>HAVING 用于对汇总的 GROUP BY 结果进行过滤。</li>
<li>HAVING 要求存在一个 GROUP BY 子句。</li>
<li>WHERE 和 HAVING 可以在相同的查询中。</li>
<li>HAVING vs WHERE<br>  WHERE 和 HAVING 都是用于过滤。<br>  HAVING 适用于汇总的组记录；而 WHERE 适用于单个记录。<br><strong>使用 WHERE 和 HAVING 过滤数据</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> num</span><br><span class="line"><span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">WHERE</span> cust_email <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> cust_name</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
（以下为 DDL 语句用法）</li>
</ul>
<h3 id="七、数据定义"><a href="#七、数据定义" class="headerlink" title="七、数据定义"></a>七、数据定义</h3><blockquote>
<p>DDL 的主要功能是定义数据库对象（如：数据库、数据表、视图、索引等）。<br><strong>数据库（DATABASE）</strong><br><strong>创建数据库</strong></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE test;</span><br></pre></td></tr></table></figure>
<p><strong>删除数据库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE test;</span><br></pre></td></tr></table></figure>
<p><strong>选择数据库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE test;</span><br></pre></td></tr></table></figure>
<p><strong>数据表（TABLE）<br>创建数据表</strong><br><strong>普通创建</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> <span class="keyword">user</span> (</span><br><span class="line">  id <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;Id&#x27;</span>,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  password <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  email <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span></span><br><span class="line">) COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>根据已有的表创建新表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> vip_user <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<p><strong>删除数据表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<p><strong>修改数据表<br>添加列</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ADD</span> age <span class="type">int</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<p><strong>删除列</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> age;</span><br></pre></td></tr></table></figure>
<p><strong>修改列</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> `<span class="keyword">user</span>`</span><br><span class="line">MODIFY <span class="keyword">COLUMN</span> age tinyint;</span><br></pre></td></tr></table></figure>
<p><strong>添加主键</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY KEY</span> (id);</span><br></pre></td></tr></table></figure>
<p><strong>删除主键</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PRIMARY KEY</span>;</span><br></pre></td></tr></table></figure>
<p><strong>视图（VIEW）</strong></p>
<blockquote>
<p>定义<br>视图是基于 SQL 语句的结果集的可视化的表。<br>视图是虚拟的表，本身不包含数据，也就不能对其进行索引操作。对视图的操作和对普通表的操作一样。<br>作用<br>简化复杂的 SQL 操作，比如复杂的连接；<br> 只使用实际表的一部分数据；<br> 通过只给用户访问视图的权限，保证数据的安全性；<br> 改数据格式和表示。</p>
<p><strong>创建视图</strong></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> top_10_user_view <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> id, username</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="operator">&lt;</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p><strong>删除视图</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> top_10_user_view;</span><br></pre></td></tr></table></figure>
<p><strong>索引（INDEX）</strong></p>
<blockquote>
<p>作用<br>通过索引可以更加快速高效地查询数据。<br>用户无法看到索引，它们只能被用来加速查询。<br>注意<br>更新一个包含索引的表需要比更新一个没有索引的表花费更多的时间，这是由于索引本身也需要更新。因此，理想的做法是仅仅在常常被搜索的列（以及表）上面创建索引。<br>唯一索引 唯一索引表明此索引的每一个索引值只对应唯一的数据记录。</p>
</blockquote>
<p><strong>创建索引</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX user_index</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">user</span> (id);</span><br></pre></td></tr></table></figure>
<p><strong>创建唯一索引</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX user_index</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">user</span> (id);</span><br></pre></td></tr></table></figure>
<p><strong>删除索引</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">DROP</span> INDEX user_index;</span><br></pre></td></tr></table></figure>
<p><strong>约束</strong></p>
<blockquote>
<p>SQL 约束用于规定表中的数据规则。</p>
</blockquote>
<ul>
<li>如果存在违反约束的数据行为，行为会被约束终止。</li>
<li>约束可以在创建表时规定（通过 CREATE TABLE 语句），或者在表创建之后规定（通过 ALTER TABLE 语句）。</li>
<li>约束类型<br>NOT NULL - 指示某列不能存储 NULL 值。<br>UNIQUE - 保证某列的每行必须有唯一的值。<br>PRIMARY KEY - NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。<br>FOREIGN KEY - 保证一个表中的数据匹配另一个表中的值的参照完整性。<br>CHECK - 保证列中的值符合指定的条件。<br>DEFAULT - 规定没有给列赋值时的默认值。<br><strong>创建表时使用约束条件：</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> Users (</span><br><span class="line">  Id <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增Id&#x27;</span>,</span><br><span class="line">  Username <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  Password <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  Email <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;default&#x27;</span> COMMENT <span class="string">&#x27;邮箱地址&#x27;</span>,</span><br><span class="line">  Enabled TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否有效&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (Id)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">2</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure>
（以下为 TCL 语句用法）</li>
</ul>
<h3 id="八、事务处理"><a href="#八、事务处理" class="headerlink" title="八、事务处理"></a>八、事务处理</h3><blockquote>
<ul>
<li>不能回退 SELECT 语句，回退 SELECT 语句也没意义；也不能回退 CREATE 和 DROP 语句。 </li>
<li>MySQL&gt; 默认是隐式提交，每执行一条语句就把这条语句当成一个事务然后进行提交。当出现 START TRANSACTION 语句时，会关闭隐式提交；当<br>COMMIT 或 ROLLBACK 语句执行后，事务会自动关闭，重新恢复隐式提交。 </li>
<li>通过 set autocommit&#x3D;0&gt; 可以取消自动提交，直到 set autocommit&#x3D;1 才会提交；autocommit 标记是针对每个连接而不是针对服务器的。 </li>
<li>指令<br>START TRANSACTION - 指令用于标记事务的起始点。<br>SAVEPOINT - 指令用于创建保留点。<br>ROLLBACK TO - 指令用于回滚到指定的保留点；如果没有设置保留点，则回退到 START TRANSACTION 语句处。<br>COMMIT - 提交事务。</li>
</ul>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 开始事务</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入操作 A</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> `<span class="keyword">user</span>`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;root1&#x27;</span>, <span class="string">&#x27;root1&#x27;</span>, <span class="string">&#x27;xxxx@163.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建保留点 updateA</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> updateA;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入操作 B</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> `<span class="keyword">user</span>`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;root2&#x27;</span>, <span class="string">&#x27;root2&#x27;</span>, <span class="string">&#x27;xxxx@163.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚到保留点 updateA</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> updateA;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务，只有操作 A 生效</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure>
<p>（以下为 DCL 语句用法）</p>
<h3 id="九、权限控制"><a href="#九、权限控制" class="headerlink" title="九、权限控制"></a>九、权限控制</h3><p>GRANT 和 REVOKE 可在几个层次上控制访问权限：</p>
<p>整个服务器，使用 GRANT ALL 和 REVOKE ALL；</p>
<p>整个数据库，使用 ON database.*；</p>
<p>特定的表，使用 ON database.table；</p>
<p>特定的列；</p>
<p>特定的存储过程。</p>
<p>新创建的账户没有任何权限。</p>
<p>账户用 username@host 的形式定义，username@% 使用的是默认主机名。</p>
<p>MySQL 的账户信息保存在 mysql 这个数据库中。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<p><strong>创建账户</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> myuser IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypassword&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><strong>修改账户名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;newuser&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;myuser&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<p><strong>删除账户</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> myuser;</span><br></pre></td></tr></table></figure>
<p><strong>查看权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> myuser;</span><br></pre></td></tr></table></figure>
<p><strong>授予权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> myuser;</span><br></pre></td></tr></table></figure>
<p><strong>删除权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> myuser;</span><br></pre></td></tr></table></figure>
<p><strong>更改密码</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> myuser <span class="operator">=</span> <span class="string">&#x27;mypass&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="十、存储过程"><a href="#十、存储过程" class="headerlink" title="十、存储过程"></a>十、存储过程</h3><blockquote>
<ul>
<li>存储过程可以看成是对一系列 SQL 操作的批处理；</li>
<li>使用存储过程的好处<br>代码封装，保证了一定的安全性；<br>代码复用；<br>由于是预先编译，因此具有很高的性能。</li>
<li>创建存储过程<br>命令行中创建存储过程需要自定义分隔符，因为命令行是以 ; 为结束符，而存储过程中也包含了分号，因此会错误把这部分分号当成是结束符，造成语法错误。<br>包含 in、out 和 inout 三种参数。<br>给变量赋值都需要用 select into 语句。<br>每次只能给一个变量赋值，不支持集合的操作。</li>
</ul>
</blockquote>
<p><strong>创建存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> `proc_adder`;</span><br><span class="line">DELIMITER ;;</span><br><span class="line"><span class="keyword">CREATE</span> DEFINER<span class="operator">=</span>`root`@`localhost` <span class="keyword">PROCEDURE</span> `proc_adder`(<span class="keyword">IN</span> a <span class="type">int</span>, <span class="keyword">IN</span> b <span class="type">int</span>, <span class="keyword">OUT</span> sum <span class="type">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> c <span class="type">int</span>;</span><br><span class="line">    if a <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="keyword">set</span> a <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    if b <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="keyword">set</span> b <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> sum  <span class="operator">=</span> a <span class="operator">+</span> b;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">;;</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>
<p><strong>使用存储过程</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="variable">@b</span><span class="operator">=</span><span class="number">5</span>;</span><br><span class="line"><span class="keyword">call</span> proc_adder(<span class="number">2</span>,<span class="variable">@b</span>,<span class="variable">@s</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@s</span> <span class="keyword">as</span> sum;</span><br></pre></td></tr></table></figure>
<h3 id="十一、游标"><a href="#十一、游标" class="headerlink" title="十一、游标"></a>十一、游标</h3><blockquote>
<ul>
<li>游标（cursor）是一个存储在 DBMS 服务器上的数据库查询，它不是一条 SELECT 语句，而是被该语句检索出来的结果集。</li>
<li>在存储过程中使用游标可以对一个结果集进行移动遍历。</li>
<li>游标主要用于交互式应用，其中用户需要对数据集中的任意行进行浏览和修改。</li>
<li>使用游标的四个步骤：<br> 声明游标，这个过程没有实际检索出数据；<br> 打开游标；<br>取出数据；<br>关闭游标；</li>
</ul>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span>  <span class="keyword">PROCEDURE</span> getTotal()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> total <span class="type">INT</span>;</span><br><span class="line">    <span class="comment">-- 创建接收游标数据的变量</span></span><br><span class="line">    <span class="keyword">DECLARE</span> sid <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> sname <span class="type">VARCHAR</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">-- 创建总数变量</span></span><br><span class="line">    <span class="keyword">DECLARE</span> sage <span class="type">INT</span>;</span><br><span class="line">    <span class="comment">-- 创建结束标志变量</span></span><br><span class="line">    <span class="keyword">DECLARE</span> done <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">-- 创建游标</span></span><br><span class="line">    <span class="keyword">DECLARE</span> cur <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> id,name,age <span class="keyword">from</span> cursor_table <span class="keyword">where</span> age<span class="operator">&gt;</span><span class="number">30</span>;</span><br><span class="line">    <span class="comment">-- 指定游标循环结束时的返回值</span></span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">NOT</span> FOUND <span class="keyword">SET</span> done <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">SET</span> total <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">OPEN</span> cur;</span><br><span class="line">    <span class="keyword">FETCH</span> cur <span class="keyword">INTO</span> sid, sname, sage;</span><br><span class="line">    WHILE(<span class="keyword">NOT</span> done)</span><br><span class="line">    DO</span><br><span class="line">        <span class="keyword">SET</span> total <span class="operator">=</span> total <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">FETCH</span> cur <span class="keyword">INTO</span> sid, sname, sage;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">CLOSE</span> cur;</span><br><span class="line">    <span class="keyword">SELECT</span> total;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用存储过程</span></span><br><span class="line"><span class="keyword">call</span> getTotal();</span><br></pre></td></tr></table></figure>
<h3 id="十二、触发器"><a href="#十二、触发器" class="headerlink" title="十二、触发器"></a>十二、触发器</h3><blockquote>
<p>触发器是一种与表操作有关的数据库对象，当触发器所在表上出现指定事件时，将调用该对象，即表的操作事件触发表上的触发器的执行。</p>
</blockquote>
<p>可以使用触发器来进行审计跟踪，把修改记录到另外一张表中。<br>MySQL 不允许在触发器中使用 CALL 语句 ，也就是不能调用存储过程。<br><strong>BEGIN 和 END</strong><br>当触发器的触发条件满足时，将会执行 BEGIN 和 END 之间的触发器执行动作。</p>
<blockquote>
<p>🔔 注意：在 MySQL 中，分号 ; 是语句结束的标识符，遇到分号表示该段语句已经结束，MySQL 可以开始执行了。因此，解释器遇到触发器执行动作中的分号后就开始执行，然后会报错，因为没有找到和 BEGIN 匹配的 END。<br>这时就会用到 DELIMITER 命令（DELIMITER 是定界符，分隔符的意思）。它是一条命令，不需要语句结束标识，语法为：DELIMITER new_delemiter。new_delemiter 可以设为 1 个或多个长度的符号，默认的是分号 ;，我们可以把它修改为其他符号，如 $ - DELIMITER $ 。在这之后的语句，以分号结束，解释器不会有什么反应，只有遇到了 $，才认为是语句结束。注意，使用完之后，我们还应该记得把它给修改回来。</p>
</blockquote>
<p><strong>NEW 和 OLD</strong></p>
<ul>
<li>MySQL 中定义了 NEW 和 OLD 关键字，用来表示触发器的所在表中，触发了触发器的那一行数据。</li>
<li>在 INSERT 型触发器中，NEW 用来表示将要（BEFORE）或已经（AFTER）插入的新数据；</li>
<li>在 UPDATE 型触发器中，OLD 用来表示将要或已经被修改的原数据，NEW 用来表示将要或已经修改为的新数据；</li>
<li>在 DELETE 型触发器中，OLD 用来表示将要或已经被删除的原数据；</li>
<li>使用方法：NEW.columnName （columnName 为相应数据表某一列名）<br><strong>创建触发器</strong></li>
</ul>
<blockquote>
<p>提示：为了理解触发器的要点，有必要先了解一下创建触发器的指令。</p>
</blockquote>
<p><strong>CREATE TRIGGER 指令用于创建触发器。<br>语法：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name</span><br><span class="line">trigger_time</span><br><span class="line">trigger_event</span><br><span class="line"><span class="keyword">ON</span> table_name</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  trigger_statements</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>
<p><strong>说明：</strong></p>
<ul>
<li>trigger_name：触发器名</li>
<li>trigger_time: 触发器的触发时机。取值为 BEFORE 或 AFTER。</li>
<li>trigger_event: 触发器的监听事件。取值为 INSERT、UPDATE 或 DELETE。</li>
<li>table_name: 触发器的监听目标。指定在哪张表上建立触发器。</li>
<li>FOR EACH ROW: 行级监视，Mysql 固定写法，其他 DBMS 不同。</li>
<li>trigger_statements: 触发器执行动作。是一条或多条 SQL 语句的列表，列表内的每条语句都必须用分号 ; 来结尾。<br><strong>示例：</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> `trigger_insert_user`</span><br><span class="line">AFTER <span class="keyword">INSERT</span> <span class="keyword">ON</span> `<span class="keyword">user</span>`</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">INSERT INTO</span> `user_history`(user_id, operate_type, operate_time)</span><br><span class="line">    <span class="keyword">VALUES</span> (NEW.id, <span class="string">&#x27;add a user&#x27;</span>, now());</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>
<strong>查看触发器</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TRIGGERS;</span><br></pre></td></tr></table></figure>
<strong>删除触发器</strong><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> IF <span class="keyword">EXISTS</span> trigger_insert_user;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>云计算</tag>
        <tag>随笔</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>自学PHP笔记(五) PHP运算符</title>
    <url>/2025/01/11/2025011101/</url>
    <content><![CDATA[<p>首先我们需要了解运算符是什么，运算符是指的对变量、常量或者数据进行计算的一个符号，比如数学中学到的加减乘除等用来运算的代表符号，PHP中的运算符也是这样的，它可以通过一个或者多个值产生一个新的值，这就是运算符的作用，PHP中把运算符分为：算数运算符、赋值运算符、字符串运算符、位运算符、比较运算符、逻辑运算符、错误控制运算符和其他运算符。下面将对一系列运算符进行说明</p>
<span id="more"></span>
<h3 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h3><p>算数运算符也就是我们数学公式中学到的四则运算符，也就是加减乘除，算数运算符主要用来数学计算</p>
<table>
<thead>
<tr>
<th>算数运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-</td>
<td>减法，在某些特殊场合会用于取反，比如数值的负值</td>
</tr>
<tr>
<td>+</td>
<td>加法</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>除法</td>
</tr>
<tr>
<td>%</td>
<td>取余，也就是获取除法中的余数</td>
</tr>
</tbody></table>
<p>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">200</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span> * <span class="variable">$b</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$b</span> / <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>运算结果分别为：<code>20000</code>和<code>2</code></p>
<h3 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h3><p>基本赋值运算符只有一个就是用<code>=</code>表示，这个赋值运算符就是把右边的表达式赋给左边的运算符，也就是将左右两边的表达式相等，写法也就是常用变量赋值的方法<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="variable">$a</span> + <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果分别为：<code>100</code>和<code>200</code>，可以看出<code>$b</code>变量被赋值变量<code>a</code>加上100，最后变量<code>b</code>的值为<code>200</code><br>赋值运算符除了基本的赋值运算符外，还有用于二元算数、数组集合和字符串运算的组合运算符，这里解释下什么是二元运算符：由两个元素形成第三个元素的一种规则，例如数的加法及乘法;更一般地,由两个集合形成第三个集合的产生方法或构成规则称为二次运算。这个是官方说法，其实就可以理解为两个或者多个表达式用运算符生成另外一个表达式，这就二次运算。</p>
<table>
<thead>
<tr>
<th>组合运算符</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>.&#x3D;</td>
<td>先连接后赋值</td>
<td>$a .&#x3D; $b，就等于 $a &#x3D; $a . $b</td>
</tr>
<tr>
<td>+&#x3D;</td>
<td>先加后赋值</td>
<td>$a +&#x3D; $b，就等于 $a &#x3D; $a + $b</td>
</tr>
<tr>
<td>-&#x3D;</td>
<td>先减后赋值</td>
<td>$a -&#x3D; $b，就等于 $a &#x3D; $a - $b</td>
</tr>
<tr>
<td>*&#x3D;</td>
<td>先乘后赋值</td>
<td>$a *&#x3D; $b，就等于 $a &#x3D; $a * $b</td>
</tr>
<tr>
<td>&#x2F;&#x3D;</td>
<td>先除后赋值</td>
<td>$a &#x2F;&#x3D; $b，就等于 $a &#x3D; $a &#x2F; $b</td>
</tr>
</tbody></table>
<p>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">200</span>;</span><br><span class="line">	<span class="variable">$a</span> += <span class="variable">$b</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>300</code></p>
<h3 id="3-字符串运算符"><a href="#3-字符串运算符" class="headerlink" title="3. 字符串运算符"></a>3. 字符串运算符</h3><p>字符串运算符一开始我在想字符串还能运算？难不成还能A+B&#x3D;C啊，后来通过一步步了解发现并不是那么回事，字符串的运算符就是将多个不同的字符表达式连接到一起，也就是将两个值进行合并。<br>字符串运算符只有两个，一个是<code>.</code>连接运算符，也就是将左右两边的字符串合表达式并为一个字符串表达式。另外一个就是连接赋值运算符，这个类似于组合运算符符中的先连接后赋值，使用<code>.=</code>进行表示<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="string">&quot; word&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span> . <span class="variable">$b</span>;</span><br><span class="line">	<span class="variable">$a</span> .= <span class="variable">$b</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果是一致的，输出结果为<code>hello word</code></p>
<h3 id="4-位运算符"><a href="#4-位运算符" class="headerlink" title="4.位运算符"></a>4.位运算符</h3><p>这个我也是没搞太明白，有知道的大神可以给几个提示或者说明。下面我把PHP的位运算符做了一个列表：</p>
<table>
<thead>
<tr>
<th>位运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;</td>
<td>按位与(And)</td>
</tr>
<tr>
<td>|</td>
<td>按位或(Or)</td>
</tr>
<tr>
<td>^</td>
<td>按位异或(Xor)</td>
</tr>
<tr>
<td>~</td>
<td>按位非(Not)</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>左移</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>右移</td>
</tr>
</tbody></table>
<p>就这些啦，希望大家可以补充下此栏，私聊发我，我会补充到这里，提前谢谢大家啦</p>
<h3 id="5-比较运算符"><a href="#5-比较运算符" class="headerlink" title="5.比较运算符"></a>5.比较运算符</h3><p>这个比较运算符理解比较简单，就是将多个表达式进行对比，返回结果位布尔值，如果比较结果为真则返回true，如果比较结果为假则返回false，这个运算符大部分会用在流程控制中，比较表达式。</p>
<table>
<thead>
<tr>
<th>比较运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;&#x3D;</td>
<td>判断是否相等，注意这个不会判断数据类型</td>
</tr>
<tr>
<td>&#x3D;&#x3D;&#x3D;</td>
<td>判断是否相等，注意数据类型不同也会返回false</td>
</tr>
<tr>
<td>!&#x3D;</td>
<td>不等于</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>不等于</td>
</tr>
<tr>
<td>!&#x3D;&#x3D;</td>
<td>非全等，注意会判读数据类型的</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td>小于等于</td>
</tr>
<tr>
<td>&gt;&#x3D;</td>
<td>大于等于</td>
</tr>
<tr>
<td>&lt;&#x3D;&gt;</td>
<td>组合比较，当左侧值大于右侧值会返回大于0的结果，反之则返回小于0的结果</td>
</tr>
<tr>
<td>??</td>
<td>NULL合并操作符，从左往右第一个存在且不为NULL的操作数，如果没有定义且不为NULL则返回NULL</td>
</tr>
</tbody></table>
<p>【<strong>注意</strong>】在整数和字符串进行比较时，字符串会被转换成整数进行比较，比较字符串时，则作为整数进行比较。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="number">1</span> == <span class="string">&quot;a&quot;</span>);</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="number">1</span>===<span class="string">&quot;a&quot;</span>);</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="number">1</span>!==<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：第一个输出结果为<code>bool(false)</code>，第二个输出结果为<code>bool(false)</code>，第三个输出结果为<code>bool(true)</code></p>
<h3 id="6-逻辑运算符"><a href="#6-逻辑运算符" class="headerlink" title="6.逻辑运算符"></a>6.逻辑运算符</h3><p>这个逻辑运算符用来组合逻辑运算符的结果，每个编程语言都离不开的哦，多数用来做判断，多于流程控制一起使用</p>
<table>
<thead>
<tr>
<th>逻辑运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>and</td>
<td>逻辑与，多个表达式都为真才会返回true</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>逻辑与，与and一致</td>
</tr>
<tr>
<td>or</td>
<td>逻辑或，多个表达式一个为真就会被认为是真的</td>
</tr>
<tr>
<td>||</td>
<td>逻辑或，与or一致</td>
</tr>
<tr>
<td>xor</td>
<td>逻辑异或，如果一个表达式为真另一个为假，则会返回true</td>
</tr>
<tr>
<td>！</td>
<td>逻辑非(取反)，如果表达式为真，则返回false</td>
</tr>
</tbody></table>
<p>【<strong>示例</strong>】判断变量a和b是否都是1</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$a</span> <span class="keyword">and</span> <span class="variable">$b</span> == <span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;两个变量都是1哦&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;有一个变量不是1哦&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>有一个变量不是1哦</code></p>
<h3 id="7-错误控制运算符"><a href="#7-错误控制运算符" class="headerlink" title="7.错误控制运算符"></a>7.错误控制运算符</h3><p>这个错误控制运算符就是为了不在前端输出错误信息或者是为了武略某些错误而设置的运算符，错误运算符时使用<code>@</code>表示，只需要在表达式前面加上错误控制运算符即可，如果你激活了<code>track_errors</code>特性，则表达式的错误信息都会保存至<code>$php_errormsg</code>变量中。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> =<span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>执行上面代码会产生一个异常报错，错误信息会在浏览器中展示，避免这种错误信息展示在浏览器当中你就可以使用错误控制运算符</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = @(<span class="number">1</span> / <span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>执行上面代码会发现之前在浏览器当中显示的错误信息不见了<br>【<strong>注意</strong>】错误控制运算符只对表达式有效，如果能从某处获取到值，就能在他的前面加上错误控制运算符，可以把他放在变量、函数、<code>incloud()</code>调用、常量等之前，但是要避免把他放在函数或类定义之前，也不能用在条件结构前</p>
<h3 id="8-其他运算符"><a href="#8-其他运算符" class="headerlink" title="8.其他运算符"></a>8.其他运算符</h3><p><strong>1. 三元运算符</strong><br>三元运算符说白了就是<code>if-else</code>，也是用来判断不同的表达式的，唯一不同的就是全写在一行里面，不需要分开写到多行，但是我还是建议大家使用<code>if-else</code>结构语句。<br>【<strong>语法</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(expr1)?(expr2):(expr3)</span><br></pre></td></tr></table></figure>
<p><strong>解释：</strong>当expr1表达式为真时，则执行expr2表达式，并返回它的值，否则就会执行expr3表达式，并返回其值。<br>上面运算也可以直接省略expr2表达式，直接执行expr3。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(expr1) ?: (expr3)</span><br></pre></td></tr></table></figure>
<p><strong>解释：</strong>当expr1表达式为真时，直接返回expr1值，否则返回expr3的值。<br>【<strong>示例</strong>】这个示例用来判断这个相邻两个变量的值。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">	<span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line">	<span class="variable">$c</span> = <span class="number">3</span>;</span><br><span class="line">	<span class="variable">$d</span> = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>&lt;<span class="variable">$b</span>?<span class="string">&#x27;A&#x27;</span>:<span class="variable">$b</span>&lt;<span class="variable">$c</span>?<span class="string">&#x27;B&#x27;</span>:<span class="variable">$c</span>&lt;<span class="variable">$d</span>?<span class="string">&#x27;C&#x27;</span>:<span class="string">&#x27;D&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>执行上面代码返回值<code>C</code><br>哎最烦解释这种一行写下来的条件结构，看起来很复杂，稍不留神就理解不了，下面我拆开给大家看应该就觉得比较简单了，如果还是觉得很难理解的话，我建议大家直接跳过这一步，直接看后面的<code>if-else</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一步判断$a和$b,返回结果&quot;A&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> &lt; <span class="variable">$b</span> ? <span class="string">&#x27;A&#x27;</span> : <span class="variable">$b</span>;</span><br><span class="line"><span class="comment">#第二步判断$b和$c,返回结果&quot;B&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span> &lt; <span class="variable">$c</span> ? <span class="string">&#x27;B&#x27;</span> : <span class="variable">$d</span>;</span><br><span class="line"><span class="comment">#第三步判断$c和$d,返回结果&quot;C&quot;</span></span><br><span class="line">ehoc <span class="variable">$c</span> &lt; <span class="variable">$d</span> ? <span class="string">&#x27;C&#x27;</span> : <span class="string">&#x27;D&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>最后给大家上个流程图吧</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op1=&gt;condition: $b &lt; $c</span><br><span class="line">op2=&gt;operation: A</span><br><span class="line">cond=&gt;condition: $a &lt; $b</span><br><span class="line">op3=&gt;condition: $c &lt; $d</span><br><span class="line">op4=&gt;operation: B</span><br><span class="line">op5=&gt;operation: C</span><br><span class="line">op6=&gt;operation: D</span><br><span class="line">st-&gt;cond-&gt;op1-&gt;op3-&gt;op5</span><br><span class="line">cond(yes)-&gt;op1</span><br><span class="line">cond(no)-&gt;op2</span><br><span class="line">op1(yes)-&gt;op3</span><br><span class="line">op1(no)-&gt;op4</span><br><span class="line">op3(yes)-&gt;op5</span><br><span class="line">op3(no)-&gt;op6</span><br></pre></td></tr></table></figure>
<p>这样应该看起来就简单很多了，这样就方便判断了，如果还是不行，那就跳过吧，不重要<br><strong>2. 递增和递减运算符</strong><br>这个递增和递减说起来就比较简单了，比起上面的三元运算简单多了，递增就是每执行一次都会加1，递减就是每执行一次都会减1，这个运算符有下面几种表示方法。</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>++$a</td>
<td>返回$a+1的值</td>
</tr>
<tr>
<td>$a++</td>
<td>返回$a的值，然后再加1</td>
</tr>
<tr>
<td>–$a</td>
<td>返回$a-1的值</td>
</tr>
<tr>
<td>$a–</td>
<td>返回$a的值，然后再减1</td>
</tr>
</tbody></table>
<p>注意这里的减号是两个不是一个<br>这种递增递减的运算符多数用在循环结构当中。<br>【<strong>递增示例1</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span>++ &lt; <span class="number">10</span>;)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>1 2 3 4 5 6 7 8 9 10</code><br>【<strong>递增示例2</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; ++<span class="variable">$i</span> &lt; <span class="number">10</span>;)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>1 2 3 4 5 6 7 8 9</code><br>【<strong>递减示例1</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">10</span>; <span class="variable">$i</span>-- &gt; <span class="number">1</span>;)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为:<code>9 8 7 6 5 4 3 2 1</code><br>【<strong>递减示例2</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">10</span>; --<span class="variable">$i</span> &gt; <span class="number">1</span>;)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为:<code>9 8 7 6 5 4 3 2</code></p>
<h3 id="9-运算符的优先级和结合方向"><a href="#9-运算符的优先级和结合方向" class="headerlink" title="9.运算符的优先级和结合方向"></a>9.运算符的优先级和结合方向</h3><p>运算符的优先级其实就是指的执行顺序，哪一个优先执行哪一个后执行，在数学四则运算中，先算乘除后算加减，同样在PHP中肯定也是有这种执行顺序的。<br>在PHP当中运算符所遵循的运算顺序为：优先级高的操作先执行，优先级低的操作后执行，同一优先级按照从左向右顺序依次执行。<br>在PHP中也有小括号的先运算的说法，有小括号先执行小括号里面的表达式，然后再执行其他的。</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>自学PHP笔记(四) PHP变量和常量</title>
    <url>/2025/01/13/2025011301/</url>
    <content><![CDATA[<p>PHP中变量有普通变量、可变变量和预定义变量，而常量就是普通变量和预定义变量。</p>
<h2 id="1-变量"><a href="#1-变量" class="headerlink" title="1. 变量"></a>1. 变量</h2><p>在PHP中变量是内存中得一个命名单元，在系统中为程序中每个变量都分配一个存储单元，在这些存储单元中可以存储任何数据类型得数据。</p>
<span id="more"></span>
<p>在PHP中不需要先声明变量后使用变量，只需要给变量赋值即可，但是PHP变量名称必须使用<code>$</code>字符做为前缀，变量名区分大写小写。<br>【<strong>示例</strong>】为变量赋值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$num</span> = <span class="number">3.1415926212</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>在进行赋值时只需要使用运算符<code>=</code>即可，在运算符等号左侧为变量名称右侧为变量值。</p>
<h3 id="1-1-变量之间互相赋值"><a href="#1-1-变量之间互相赋值" class="headerlink" title="1.1 变量之间互相赋值"></a>1.1 变量之间互相赋值</h3><p>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$num1</span> = <span class="number">123</span>;</span><br><span class="line">	<span class="variable">$num2</span> = <span class="variable">$num1</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$num2</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>123</code>，在变量之间进行赋值时，只进行传递变量值，变量在存储单元中都是各自独立的，也就是说当输出<code>$num1</code>变量时也是可以输出的，不会输出空</p>
<h3 id="1-2-引用赋值"><a href="#1-2-引用赋值" class="headerlink" title="1.2 引用赋值"></a>1.2 引用赋值</h3><p>引用赋值的意思就是将变量A与变量B做一个链接，当变量A值发生改变，变量B的值也随之进行改变。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">	<span class="variable">$b</span> = &amp;<span class="variable">$a</span>;</span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&#x27;test1&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>test1</code><br>引用方法也比较简单，就是在进行赋值变量前面加上<code>&amp;</code>符号即可。</p>
<p><strong>取消引用</strong><br>如果不想让变量引用赋值了，我们可以使用<code>unset()</code>函数取消变量引用，这个函数是将变量A和变量B之间的引用关系断开，并不是将变量进行销毁。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">	<span class="variable">$b</span> = &amp;<span class="variable">$a</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$b</span>;	<span class="comment">#输出结果为1</span></span><br><span class="line">	<span class="keyword">unset</span>(<span class="variable">$b</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$b</span>;	<span class="comment">#输出结果为空</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="2-可变变量"><a href="#2-可变变量" class="headerlink" title="2. 可变变量"></a>2. 可变变量</h2><p>可变变量也就是一个可以动态变化的变量名，是一种特殊的变量，这个变量名是由应一个变量的值来进行定义的，也就是变量的名字取决于另一个变量的值。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">	<span class="variable">$test</span> = <span class="string">&#x27;hello word !&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$$a</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>hello word !</code><br>定义这样的变量只需要在变量前面加上<code>$</code>符号即可<br>【<strong>高级用法</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">	<span class="variable">$$a</span> = <span class="string">&#x27;word&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$$a</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$hello</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">helloword</span><br><span class="line">word</span><br></pre></td></tr></table></figure>
<h3 id="3-预定义变量"><a href="#3-预定义变量" class="headerlink" title="3. 预定义变量"></a>3. 预定义变量</h3><p>在PHP中提供了大量的预定义变量，通过这些变量可以获取用户会话、用户操作环境和本地操作系统等信息，由于大部分变量依赖于服务器的版本和设置，以及其他因素，所以一些预定义变量在PHP中以命令行形式运行时并不生效，下面我列举了一些预定义变量：</p>
<table>
<thead>
<tr>
<th>预定义变量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>$GLOBALS</td>
<td>调用全局作用域中的全部变量</td>
</tr>
<tr>
<td>$_SERVER</td>
<td>显示服务器及环境信息</td>
</tr>
<tr>
<td>$_GET</td>
<td>提交GET变量</td>
</tr>
<tr>
<td>$_POST</td>
<td>提交POST变量</td>
</tr>
<tr>
<td>$_FILES</td>
<td>提交文件上传变量</td>
</tr>
<tr>
<td>$_REQUEST</td>
<td>提交Request变量</td>
</tr>
<tr>
<td>$_SESSION</td>
<td>Session变量</td>
</tr>
<tr>
<td>$_ENV</td>
<td>环境变量</td>
</tr>
<tr>
<td>$_COOKIE</td>
<td>Cookies变量</td>
</tr>
<tr>
<td>$php_errormsg</td>
<td>前一个错误信息</td>
</tr>
<tr>
<td>$HTTP_RAW_POST_DATA</td>
<td>原生POST数据</td>
</tr>
<tr>
<td>$http_response_header</td>
<td>HTTP响应头</td>
</tr>
<tr>
<td>$argc</td>
<td>传递给脚本的参数数目</td>
</tr>
<tr>
<td>$argv</td>
<td>传递给脚本的参数数组</td>
</tr>
<tr>
<td>【<strong>示例</strong>】输出环境信息</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$_SERVER</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果如图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/d170a8edfba60b02d6445be1cf5a10be.png) -->

<script> document.write('<img src="'+ imgurl +'1736730449/d170a8edfba60b02d6445be1cf5a10be.png">'); </script><br>

<p>这里因为我的环境有中文字符所以输出结果时会出现乱码，后续大家可以定义一下字符编码就不会存在乱码了。</p>
<h3 id="4-常量"><a href="#4-常量" class="headerlink" title="4. 常量"></a>4. 常量</h3><h4 id="4-1-声明常量"><a href="#4-1-声明常量" class="headerlink" title="4.1 声明常量"></a>4.1 声明常量</h4><p>常量其实就是字面意思，也就是说这个变量是一成不变的，除非取消这个定义。<br>在定义常量时遵循PHP变量的相同命名规则，由英文字母、下划线和数字组成，但数字不能作为首字母出现。</p>
<h5 id="4-1-1-使用define-函数声明常量"><a href="#4-1-1-使用define-函数声明常量" class="headerlink" title="4.1.1 使用define()函数声明常量"></a>4.1.1 使用<code>define()</code>函数声明常量</h5><p>【<strong>语法</strong>】使用<code>define()</code>声明常量语法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="variable">$name</span> , <span class="variable">$value</span> [ <span class="variable">$case_insensitive</span> = <span class="literal">true</span> ]);</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```$value```：表示常量的值</span><br><span class="line">```$case_insensitive```：表示设置常量是否区分大小写，值为```true```则不区分大小写，为```false```则区分大小写</span><br><span class="line">**注意**:这里需要注意常量值只能是```integer、float、string、boolean、NULL或array```哟</span><br><span class="line">声明变量只返回布尔值，true 为声明成功，false 为声明失败。</span><br><span class="line">【**示例**】声明常量</span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">	if (define(&quot;test&quot;,&quot;hello word&quot;))&#123;</span><br><span class="line">		echo &quot;声明变量成功&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;声明变量失败&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>声明变量成功</code><br>【<strong>常量与变量对比</strong>】</p>
<ol>
<li>常量不需要使用<code>$</code>符号进行定义</li>
<li>常量只能使用函数进行定义，不能使用赋值符<code>=</code>进行赋值</li>
<li>常量不需要考虑作用域，可以在任意地方进行定义和使用</li>
<li>常量一旦被定义就无法进行修改，只能进行取消定义</li>
<li>常量的值只能是标量</li>
</ol>
<h5 id="4-1-2-const关键字"><a href="#4-1-2-const关键字" class="headerlink" title="4.1.2 const关键字"></a>4.1.2 const关键字</h5><p>使用过<code>const</code>关键字定义常量只能用在最顶端的作用域，此方法是在编译时定义的，不能用在函数内、循环内或者判断语句内进行使用。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">const</span> <span class="variable constant_">test</span> = <span class="string">&quot;hello word&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>是用<code>const</code>关键字定义常量是比较简单的，只需要在定义赋值前加上关键字即可</p>
<h4 id="4-2-使用常量"><a href="#4-2-使用常量" class="headerlink" title="4.2 使用常量"></a>4.2 使用常量</h4><p>获取变量值也是比较简单的可以采用变量名的方式获取或者是使用<code>constant()</code>函数进行获取，这两种方式输出的值是一样的，只不过使用函数获取动态常量时更方便。<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">define</span>(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;word&quot;</span>);</span><br><span class="line">	<span class="keyword">echo</span> hello;</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">constant</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：两个<code>word</code><br><strong>注意：</strong>使用函数输出常量值时，输出正确可正常输出，但是输出错误会出现报错</p>
<h4 id="4-3-预定义常量"><a href="#4-3-预定义常量" class="headerlink" title="4.3 预定义常量"></a>4.3 预定义常量</h4><p>PHP中提供了大量的预定义常量，不过大多数预定义常量都是由不同的扩展库进行定义的，只有加载了这些扩展库才能使用这些预定义常量，这里要注意有些预定义常量会根据不同的位置会有不同的改变，比如<code>_FLNE_</code>的值就是依赖于他所在的位置来决定。下面总结了一些常用的预定义常量：</p>
<table>
<thead>
<tr>
<th>预定义常量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>PHP_VERSION</td>
<td>获取PHP版本</td>
</tr>
<tr>
<td>PHP_OS</td>
<td>获取操作系统信息</td>
</tr>
<tr>
<td>PHP_API</td>
<td>获取WEB与PHP的接口信息</td>
</tr>
<tr>
<td>PHP_INT_MAX</td>
<td>获取最大整数</td>
</tr>
<tr>
<td>PHP_BINDIR</td>
<td>获取执行路径</td>
</tr>
<tr>
<td>_FILE_</td>
<td>获取当前文件名</td>
</tr>
<tr>
<td>_LINE_</td>
<td>获取当前行数</td>
</tr>
<tr>
<td>DEFAULT_INCLUDE_PATH</td>
<td>获取PHP默认路径</td>
</tr>
<tr>
<td>PEAR_INSTALL_DIR</td>
<td>获取PHP安装路径</td>
</tr>
<tr>
<td>PEAR_EXTENSION_DIR</td>
<td>获取PHP扩展路径</td>
</tr>
<tr>
<td>PHP_LIBDIR</td>
<td>获取PHP模块扩展路径</td>
</tr>
<tr>
<td>_DIR_</td>
<td>获取当前文件路径</td>
</tr>
<tr>
<td>_FUNCTION_</td>
<td>获取函数名</td>
</tr>
<tr>
<td>M_PI</td>
<td>获取圆周率</td>
</tr>
<tr>
<td>_MHTHOD_</td>
<td>获取当前成员</td>
</tr>
<tr>
<td>_NAMESPALE_</td>
<td>获取命名空间</td>
</tr>
<tr>
<td>_CLASS_</td>
<td>获取类名</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>python+ffmpeg视频转码转格式</title>
    <url>/2025/01/11/2025011102/</url>
    <content><![CDATA[<h2 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h2><p>python目前自己也是在学习当中，对python也不是特别精通，写视频转码这个东西也是自己用的到，所以自己在查阅了一些资料后写的这样一个简单工具，这个工具自己使用就可以了，用到正式环境还是有很多不足的，这个有一些不完善，也希望有懂python的大神可以给完善一下哦。废话不多说了开整。</p>
<span id="more"></span>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>一开始在想自己去写一个视频转码的工具的时候在想是用PHP写还是用python写，最后选择python是因为在PHP中碰壁了，到现在也没能解决那个问题，PHP写完出现的BUG是在大视频转码时会存在请求超时的问题，到现在也没能解决到这个BUG，试过修改PHP配置文件中的请求时间、缓存等等一些方法都没有解决，真的是快疯掉了，后面再想办法搞一下吧，后面就想着看看Python会不会有这个问题，结果真的没这个问题。<br>既然是要写思路当然是要考虑怎么去进行视频转码，一开始想的是用Flask框架，最后想想Flask框架最后还是要在网页上访问使用麻烦，不如直接使用windows框直接就转码，直接双击代码搞定多好。最后初步定下来的就是使用python中<strong>tkinter</strong>模块去弄，直接写一个windows GUI他不香嘛。显示方式有了，后面就是转码了，怎么转码呢？查阅了很多的网站，最后决定采用<strong>FFmpeg</strong>转码工具，工具选好了后面就是写代码的事情了。后面写的过程中确实又出现了一些问题，就是选用ffmpeg模块还是调用ffmpeg程序呢？本人本身是网络工程师出身，所以对代码很敏感，遇到比较难的就会头疼，我分别查了模块和程序的使用方法，模块我参考的是：<a href="https://blog.csdn.net/sinat_37967865/article/details/102650786">【Python】ffmpeg模块处理视频、音频信息</a>这篇文章，说实话写的真不错，就是我看不懂，太深奥了，估计我再学几年python就能看懂了，博主等我哈，千万别删文章。程序我是去官网上看的文档<a href="http://www.ffmpeg.org/">ffmpeg官网</a>，这个倒是挺简单的我倒是能看懂，也发现确实可以进行视频转码，好了有了方法了那后面就是思路了。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>其实这个思路也是蛮简单的，无非我想要的就是双击我写的python代码就可以直接弹出一个windows窗口，然后我输入原视频地址或者路径，然后输入一个转码后的名字，然后再弄个转码按钮不就直接可以转码了。没问题思路清晰，下面就是直接开整。</p>
<h2 id="python-tkinter制作窗口"><a href="#python-tkinter制作窗口" class="headerlink" title="python+tkinter制作窗口"></a>python+tkinter制作窗口</h2><p>首先我既然要去弄这个窗口，当然我们得知道<strong>tkinter</strong>这个模块怎么用，下面我总结了一些简单的用法<br>【<strong>示例</strong>】</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter		<span class="comment">#导入Tkubter模块</span></span><br><span class="line">test = tkinter.Tk()</span><br><span class="line">test.mainloop()</span><br></pre></td></tr></table></figure>
<p>执行结果：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/fa709be98e13c2dbe6027da3bcab34ec.png) -->
<script> document.write('<img src="'+ imgurl +'1736581566/fa709be98e13c2dbe6027da3bcab34ec.png">'); </script><br>

<p>这样一个简单的windows窗口就有了，tkinter模块用法有很多，这里就不细说了，下面继续说我们的转码。</p>
<p>首先就是先制作一个windwos窗口然后让我输入一些信息，下面是我写的windows窗口。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk	<span class="comment">#导入tkinter模块，并起别名为tk</span></span><br><span class="line"></span><br><span class="line">wind=tk.Tk()	<span class="comment">#建立顶层控件wind</span></span><br><span class="line">wind.geometry(<span class="string">&quot;800x400&quot;</span>)	<span class="comment">#设置窗口大小</span></span><br><span class="line">wind.title(<span class="string">&quot;视频转码&quot;</span>)	<span class="comment">#设置窗口标题</span></span><br><span class="line"></span><br><span class="line">title_lab=tk.Label(wind,text=<span class="string">&quot;视频转码&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	<span class="comment">#创建窗格标题内容，字体，颜色</span></span><br><span class="line">title_lab.place(x=<span class="number">350</span>,y=<span class="number">30</span>)	<span class="comment">#设置标题位置</span></span><br><span class="line"></span><br><span class="line">textlab=tk.Label(wind, text=<span class="string">&quot;请输入视频地址:&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>, fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">20</span>) <span class="comment">#创建表单名字，并设置字体、颜色、大小</span></span><br><span class="line">textlab.place(x=<span class="number">0</span>,y=<span class="number">100</span>)	<span class="comment">#设置表单名字位置</span></span><br><span class="line">text_entry=tk.Entry(wind, width=<span class="number">30</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	<span class="comment">#建立输入的控件entry，也就是表单</span></span><br><span class="line">text_entry.place(x=<span class="number">300</span>,y=<span class="number">100</span>)	<span class="comment">#设置控件位置</span></span><br><span class="line"></span><br><span class="line">mzlab=tk.Label(wind, text=<span class="string">&quot;请输入新视频名称:&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>,fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">18</span>)	<span class="comment">#创建表单名字，并设置字体、颜色、大小</span></span><br><span class="line">mzlab.place(x=<span class="number">0</span>,y=<span class="number">200</span>)	<span class="comment">#设置表单名字位置</span></span><br><span class="line">mz_entry=tk.Entry(wind, width=<span class="number">30</span>,bg=<span class="string">&quot;white&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	<span class="comment">#建立输入的控件entry，也就是表单</span></span><br><span class="line">mz_entry.place(x=<span class="number">300</span>,y=<span class="number">200</span>)	<span class="comment">#设置控件位置</span></span><br><span class="line"></span><br><span class="line">btn=tk.Button(wind,text=<span class="string">&quot;提交&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>, fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">8</span>)	<span class="comment">#设置提交按钮，并设置字体样式、大小</span></span><br><span class="line">btn.place(x=<span class="number">350</span>,y=<span class="number">300</span>)	<span class="comment">#设置按钮位置</span></span><br><span class="line">wind.mainloop()	<span class="comment">#窗口的消息循环</span></span><br></pre></td></tr></table></figure>
<p>最后效果图：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f5d4ef70feab53dedc8cb0967d8663d2.png) -->

<script> document.write('<img src="'+ imgurl +'1736581566/f5d4ef70feab53dedc8cb0967d8663d2.png">'); </script><br>

<p>显示写出来了，后面该弄功能了</p>
<h2 id="ffmpeg转码"><a href="#ffmpeg转码" class="headerlink" title="ffmpeg转码"></a>ffmpeg转码</h2><p>在写功能之前首先得学习ffmpeg怎么用，不然的话功能也写不出来</p>
<h4 id="1-ffmpeg工具软件"><a href="#1-ffmpeg工具软件" class="headerlink" title="1. ffmpeg工具软件"></a>1. ffmpeg工具软件</h4><p>首先我们需要下载ffmpeg工具，下面是下载地址，下载的速度还算比较快，如果有觉的下载慢的，可以私聊我，我把软件包发给大家或者直接在我的资源里面下载也行<br><a href="https://www.ffmpeg.org/">FFmpeg官网地址:</a> 	<a href="https://www.ffmpeg.org/">https://www.ffmpeg.org/</a><br><a href="https://www.ffmpeg.org/download.html">FFmpeg下载地址:</a>  	<a href="https://www.ffmpeg.org/download.html">https://www.ffmpeg.org/download.html</a></p>
<h4 id="2-使用方法"><a href="#2-使用方法" class="headerlink" title="2. 使用方法"></a>2. 使用方法</h4><p><strong>语法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i 源文件路径及文件名称 转码后文件路径及名称</span><br></pre></td></tr></table></figure>
<p><strong>示例：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i D:\<span class="built_in">test</span>\abc.flv	D:\<span class="built_in">test</span>\abc.mp4</span><br></pre></td></tr></table></figure>
<p>实现就是这么简单，建议大家现在系统命令行中先测试下这个工具，看看能不能达到大家的要求，大家要是想了解ffmpeg的全部用法可以去官网文档上面查看</p>
<h2 id="python调用ffmpeg"><a href="#python调用ffmpeg" class="headerlink" title="python调用ffmpeg"></a>python调用ffmpeg</h2><p>其实相当简单，只需要在python导入OS模块就可以了，下面直接上代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">dir</span> = os.getcwd()	</span><br><span class="line"><span class="comment">#获取当前文件路径，因为我这里把ffmpeg工具放到了代码路径，所以需要获取一下当前路径，这个根据大家实际情况写</span></span><br><span class="line">dir2 = <span class="string">&#x27;/windows-ffmpeg/x64/ffmpeg.exe&#x27;</span>	<span class="comment">#ffmpeg具体位置</span></span><br><span class="line">ff = <span class="built_in">dir</span>+<span class="built_in">dir</span>	<span class="comment">#组合路径</span></span><br><span class="line">result = <span class="built_in">eval</span>(<span class="built_in">repr</span>(ff).replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line"><span class="comment">#转换反斜杠为斜杠，因为获取到的路径是反斜杠的，需要转换成斜杠，转换后会发现是双斜杠，所以需要下面再转换下</span></span><br><span class="line">ff = result.replace(<span class="string">&#x27;//&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)	<span class="comment">#双斜杠转为但斜杠</span></span><br><span class="line">cmd = ff +<span class="string">&#x27; -i &#x27;</span>+<span class="string">&#x27;D:\test\abc.flv&#x27;</span> +<span class="string">&#x27; -c copy &#x27;</span> + <span class="string">&#x27;D:\test\abc.mp4&#x27;</span></span><br><span class="line"><span class="comment">#写需要执行的命令</span></span><br><span class="line">os.system(cmd)	<span class="comment">#执行系统命令，也就是进行转码</span></span><br></pre></td></tr></table></figure>
<p>OK，执行上面代码直接进行转码，这里需要注意的是路径位置一定要对哦！<br>窗口有了，功能有了，那后面就是拼接了</p>
<h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><p>废话不多说直接上结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">wind=tk.Tk()	</span><br><span class="line">wind.geometry(<span class="string">&quot;800x400&quot;</span>)	</span><br><span class="line">wind.title(<span class="string">&quot;视频转码&quot;</span>)	</span><br><span class="line"></span><br><span class="line">title_lab=tk.Label(wind,text=<span class="string">&quot;视频转码&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)</span><br><span class="line">title_lab.place(x=<span class="number">350</span>,y=<span class="number">30</span>)	</span><br><span class="line"></span><br><span class="line">textlab=tk.Label(wind, text=<span class="string">&quot;请输入视频地址:&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>, fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">20</span>)</span><br><span class="line">textlab.place(x=<span class="number">0</span>,y=<span class="number">100</span>)</span><br><span class="line">text_entry=tk.Entry(wind, width=<span class="number">30</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	</span><br><span class="line">text_entry.place(x=<span class="number">300</span>,y=<span class="number">100</span>)	</span><br><span class="line"></span><br><span class="line">mzlab=tk.Label(wind, text=<span class="string">&quot;请输入新视频名称:&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>,fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">18</span>)</span><br><span class="line">mzlab.place(x=<span class="number">0</span>,y=<span class="number">200</span>)</span><br><span class="line">mz_entry=tk.Entry(wind, width=<span class="number">30</span>,bg=<span class="string">&quot;white&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)</span><br><span class="line">mz_entry.place(x=<span class="number">300</span>,y=<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面是引用了一个执行转码的方法，并声明执行结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getTextInput</span>():	</span><br><span class="line">	lianjie = text_entry.get()</span><br><span class="line">	mz = mz_entry.get()</span><br><span class="line">	mz = mz + <span class="string">&#x27;.mp4&#x27;</span></span><br><span class="line">	ff = <span class="string">&#x27;/windows-ffmpeg/x64/ffmpeg.exe&#x27;</span></span><br><span class="line">	ff1 = os.getcwd()</span><br><span class="line">	ff = ff1+ff</span><br><span class="line">	result = <span class="built_in">eval</span>(<span class="built_in">repr</span>(ff).replace(<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">	ff = result.replace(<span class="string">&#x27;//&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">	cmd = ff +<span class="string">&#x27; -i &#x27;</span>+lianjie+<span class="string">&#x27; -c copy &#x27;</span>+mz</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> os.system(cmd) == <span class="number">0</span>: 	<span class="comment">#判断执行结果并进行转码</span></span><br><span class="line">		test1=tk.Tk()	</span><br><span class="line">		test1.geometry(<span class="string">&quot;200x100&quot;</span>)	</span><br><span class="line">		test1.title(<span class="string">&quot;&quot;</span>)	</span><br><span class="line">		title_lab=tk.Label(test1,text=<span class="string">&quot;视频转码成功&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	</span><br><span class="line">		title_lab.place(x=<span class="number">0</span>,y=<span class="number">0</span>)	</span><br><span class="line">		test1.mainloop()</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		test2=tk.Tk()	</span><br><span class="line">		test2.geometry(<span class="string">&quot;200x100&quot;</span>)	</span><br><span class="line">		test2.title(<span class="string">&quot;&quot;</span>)	</span><br><span class="line">		title_lab=tk.Label(test2,text=<span class="string">&quot;视频转码失败&quot;</span>,font=<span class="string">&quot;仿宋 20 bold&quot;</span>)	</span><br><span class="line">		title_lab.place(x=<span class="number">0</span>,y=<span class="number">0</span>)	</span><br><span class="line">		test2.mainloop()</span><br><span class="line"></span><br><span class="line">btn=tk.Button(wind,text=<span class="string">&quot;提交&quot;</span>, font=<span class="string">&quot;仿宋 20 bold&quot;</span>, fg=<span class="string">&quot;blue&quot;</span>, width=<span class="number">8</span>,command=getTextInput)	<span class="comment">#将信息提交给上面的getTextInput方法</span></span><br><span class="line">btn.place(x=<span class="number">350</span>,y=<span class="number">300</span>)</span><br><span class="line">wind.mainloop()</span><br></pre></td></tr></table></figure>
<p>双击python文件的话会出现两个窗口，一个是用来输入信息的窗口一个是用来显示报错信息的窗口，这个工具有待完善，希望有会python的大神可以完善下</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f172fff22a616c6b137c6c04a26b3e0a.png) -->
<script> document.write('<img src="'+ imgurl +'1736581566/f172fff22a616c6b137c6c04a26b3e0a.png">'); </script><br>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c562b684582c9b9da23c728505ceea68.png) -->
<script> document.write('<img src="'+ imgurl +'1736581566/c562b684582c9b9da23c728505ceea68.png">'); </script><br>

<p><strong>注意</strong>：这个工具需要注意的是如果你不想改代码直接用的话，就直接把ffmpeg工具和你的代码文件放到一起，还有如果你不写转码后文件路径默认会保存到存放代码文件的地方<br>源代码上传到了我的资源里面，资源地址：<a href="https://download.csdn.net/download/KH_FC/16719873">https://download.csdn.net/download/KH_FC/16719873</a></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>python</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>自学PHP笔记 (三) 类型转换</title>
    <url>/2025/01/13/2025011302/</url>
    <content><![CDATA[<p>在真正使用PHP写项目时会经常用到不同数据类型之间进行转换，PHP中类型转换是比较简单的，只需要在变量前面加上用括号括起来的数据类型名称就可以了，数据类型转换有以下几种：</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>转换类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>(bool)(boolean)</td>
<td>转换为布尔值</td>
</tr>
<tr>
<td>(string)</td>
<td>转换为字符串</td>
</tr>
<tr>
<td>(int)(integer)</td>
<td>转换为整数</td>
</tr>
<tr>
<td>(float)(double)(real)</td>
<td>转换为浮点型</td>
</tr>
<tr>
<td>(array)</td>
<td>转换为数组</td>
</tr>
<tr>
<td>(object)</td>
<td>转换为对象</td>
</tr>
<tr>
<td>(unset)</td>
<td>转换为NULL，也就是删除变量</td>
</tr>
<tr>
<td>(binary)b前缀</td>
<td>转换为二进制字符串</td>
</tr>
<tr>
<td>除了上面几种转换方式还有一个使用<code>settype()</code>函数进行转换</td>
<td></td>
</tr>
</tbody></table>
<p>【<strong>示例</strong>】使用<code>settype()</code>函数进行数据类型转换</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">123</span>;</span><br><span class="line">	<span class="title function_ invoke__">settype</span>( <span class="variable">$b</span>, <span class="string">&quot;float&quot;</span>);</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>float(123)</code><br>【<strong>方法</strong>】<code>settype()</code>使用方法<br>函数内第一个为变量，在上面示例中为<code>$b</code>，第二个参数为数据类型，也就是你想将这个变量值转换为哪种类型，在上面示例中使用的是<code>float</code>，在PHP7版本中支持boolean、float、integer、string、null、array、object。<strong>注意</strong>：此函数只能返回布尔值，可用于判断，类型转换成功则返回<code>true</code>，转换失败则返回<code>false</code><br>【<strong>示例</strong>】转换数据类型的常用方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$num</span> = <span class="string">&#x27;123abc&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">integer</span>)<span class="variable">$num</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">float</span>)<span class="variable">$num</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">string</span>)<span class="variable">$num</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>(<span class="number">123</span>)</span><br><span class="line"><span class="keyword">float</span>(<span class="number">123</span>)</span><br><span class="line"><span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;123abc&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="1-转换为字符串"><a href="#1-转换为字符串" class="headerlink" title="1.转换为字符串"></a>1.转换为字符串</h2><p>一个值可以通过在值前面加上<code>(string)</code>或者<code>(strval)</code>函数来转换为字符串，在一个需要字符串的表达式中，字符串会自动转换，在使用函数<code>echo()</code>或者<code>print()</code>时，或者在一个变量和一个字符串进行比较时，就会发生这种转型。**<code>print()</code>类似于<code>print_r()</code><strong>。<br>【</strong>示例**】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">	<span class="variable">$str</span> = <span class="string">&#x27;abcdef&#x27;</span>;</span><br><span class="line">	<span class="variable">$num</span> = <span class="number">12345.123</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">string</span>)<span class="variable">$num</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$str</span> == <span class="string">&#x27;abcdef&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;12345.123&quot;</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>【<strong>注意</strong>】在进行字符串转换时应注意以下几点：</p>
<ol>
<li>一个布尔值被转换时则会将<code>true</code>转换成<code>1</code>，而<code>false</code>值将会被转换为空<code>&quot;&quot;</code><strong>这里空不是NULL，而是空的字符串</strong>，这种转换可以在布尔值和字符串之间随意转换。</li>
<li>一个整数或者浮点数被转换字符串，则会转换为数字的字面样式的字符串，包括采用科学技术法记录的浮点数。</li>
<li>数组被转换为字符串<code>Aaary</code>，因此使用函数<code>echo()</code>或者<code>print()</code>无法正确的显示出数组的值，如果想要正确输出数组中的值则需要采用<code>echo (array(&#39;$a&#39;))</code>这种方式进行，也就是读取数组中值的方法。</li>
<li>资源总会被转换为<code>Resource id#1</code>结构的字符串，其中1是PHP分配给该资源独有的数字。</li>
<li>NULL总会被转换为空的字符串。</li>
</ol>
<h2 id="2-转换为整数"><a href="#2-转换为整数" class="headerlink" title="2.转换为整数"></a>2.转换为整数</h2><p>想要将一个值转换为整数，可以使用<code>(int)</code>或者<code>(integer)</code>进行强制转换，不过大多数都不需要进行转换，在使用运算符、函数或者判断数值需要一个整数值时，值会自动转换为整数，还可以通过<code>intval()</code>函数进行转换。<br>【<strong>注意</strong>】在进行转换整数时需要注意以下两点：</p>
<ol>
<li>当要将布尔值转换为整数时，则会将布尔值中<code>true</code>转换为<code>1</code>，<code>false</code>则会被转换为<code>0</code>。</li>
<li>当要将浮点数转换为整数时，将向零取整，如果浮点数超出了整数范围，则转换结果变得不容易控制，这里不建议将未知的浮点数转换为整数，因为获取的结果可能不是你想象的那样哦，还有就是向零取整并不是四舍五入。<br>【<strong>示例</strong>】<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$bool</span> = <span class="literal">true</span>;</span><br><span class="line">	<span class="variable">$float</span> = <span class="number">10.6111</span>;</span><br><span class="line">	<span class="variable">$abc</span> = ( <span class="number">0.1</span> + <span class="number">0.7</span> ) *<span class="number">10</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$bool</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$float</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="keyword">echo</span> (<span class="keyword">int</span>)<span class="variable">$abc</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure>
这个示例可以看出正常情况下<code>$abc</code>运算结果为<code>8</code>，但是当转换为整型后确输出了<code>7</code>，输出结果不正确，所以在浮点数转换整数时一定要注意。</li>
</ol>
<h2 id="3-转换为布尔值"><a href="#3-转换为布尔值" class="headerlink" title="3. 转换为布尔值"></a>3. 转换为布尔值</h2><p>想要将一个值转换为布尔值是比较简单的，只需要使用<code>(bool)</code>或者<code>(boolean)</code>来强制转换为布尔值即可，大部分情况下是不需要进行转换的，当使用运算符、函数或者做判断时都可以自动转换为布尔值的。<br>【<strong>注意</strong>】在转换布尔值时需要注意下面几个值转换则会转换为<code>false</code></p>
<ol>
<li><code>0</code>:整数零</li>
<li><code>0.0</code>：浮点数零</li>
<li><code>&quot;0&quot;</code>：字符串零</li>
<li><code>&quot;&quot;</code>：空字符串</li>
<li><code>空数组</code>:没有任何值得数组</li>
<li><code>空对象</code>：没有任何成员变量得对象</li>
<li><code>NULL</code>：特殊类型NULL</li>
<li>从没有任何标记得XML文档生成得SimpleXML对象<br>除了以上值所有类型所有值都会转换为<code>true</code>。<br>【<strong>示例</strong>】<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">	<span class="variable">$int</span> = <span class="number">1</span>;</span><br><span class="line">	<span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">bool</span>)<span class="variable">$array</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">bool</span>)<span class="variable">$int</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>((<span class="keyword">bool</span>)<span class="variable">$str</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="4-检测数据类型"><a href="#4-检测数据类型" class="headerlink" title="4. 检测数据类型"></a>4. 检测数据类型</h2><p>在很多时候都需要由程序自动去判断数据类型，PHP内置了一些检测数据类型得函数，可以根据不同得类型进行检测，判断是否属于某种类型，如果符合则返回<code>true</code>，如果不符合则返回<code>false</code>。常用得数据类型检测函数：</p>
<table>
<thead>
<tr>
<th>检测函数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>is_bool</td>
<td>检测变量是否为布尔值</td>
</tr>
<tr>
<td>is_string</td>
<td>检测变量是否为字符串</td>
</tr>
<tr>
<td>is_float</td>
<td>检测变量是否为浮点数</td>
</tr>
<tr>
<td>is_int</td>
<td>检测变量是否为整数</td>
</tr>
<tr>
<td>is_null</td>
<td>检测变量是否为空</td>
</tr>
<tr>
<td>is_array</td>
<td>检测变量是否为数组</td>
</tr>
<tr>
<td>is_object</td>
<td>检测变量是否为对象</td>
</tr>
<tr>
<td>is_numeric</td>
<td>检测变量是否为数字或者是数字组成得字符串</td>
</tr>
<tr>
<td>is_double</td>
<td>检测变量是否为浮点数</td>
</tr>
</tbody></table>
<p>【<strong>示例1</strong>】判断是否为整数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$int</span> = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">is_int</span>(<span class="variable">$int</span>))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;$int&#x27;</span>.<span class="string">&quot;是整数类型，并且整数值为<span class="subst">$int</span>&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;$int&#x27;</span>.<span class="string">&quot;不是整数类型&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>$int是整数类型，并且整数值为100</code><br>【<strong>示例2</strong>】判断是否为浮点数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$int</span> = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">is_float</span>(<span class="variable">$int</span>))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;$int&#x27;</span>.<span class="string">&quot;是浮点数类型，并且浮点数值为<span class="subst">$int</span>&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;$int&#x27;</span>.<span class="string">&quot;不是浮点数类型&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>$int不是浮点数类型</code></p>
<p>【<strong>小灶</strong>】在测试字符时经常会遇到不知道会输出什么类型得值，也不知道自己写得变量是什么类型时，可以采用<code>gettype()</code>或者<code>var_dump()</code>查看变量或者值得数据类型</p>
<ul>
<li><code>gettype</code>函数只输出值或变量得类型，不会输出值</li>
<li><code>var_dump</code>函数即输出值也输出类型</li>
</ul>
<p>【<strong>示例</strong>】使用<code>gettype</code>函数输出变量类型</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$int</span> = <span class="number">0.1111</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">gettype</span>(<span class="variable">$int</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>double</code>也就是浮点数类型</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>自学PHP笔记（一）PHP语法</title>
    <url>/2025/01/13/2025011304/</url>
    <content><![CDATA[<h1 id="PHP基本语法"><a href="#PHP基本语法" class="headerlink" title="PHP基本语法"></a>PHP基本语法</h1><p>php使用一对特殊的标记包含php代码，与HTML代码混在一起。当服务器解析页面时，能够自动过滤出PHP脚本并进行解释，最后把生成的静态网页传递给客户端。</p>
<span id="more"></span>
<h2 id="1-PHP标记"><a href="#1-PHP标记" class="headerlink" title="1.PHP标记"></a>1.PHP标记</h2><p>一般情况下，PHP代码都被嵌入到HTMl文档中，PHP代码在HTML中嵌入时有以下几种方式：</p>
<ol>
<li>默认标记<br>默认标记是通过 “<?php" 和 "?>“ 标记进行将HTML和PHP代码进行分隔。例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">#这里写PHP代码哟</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
【<strong>实例</strong>】使用这种默认标记，可以在HTML文档中随意混合PHP和HTML代码，例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="variable">$test</span>) &#123; <span class="meta">?&gt;</span></span><br><span class="line">	&lt;div&gt; <span class="variable">$test</span>变量为<span class="literal">true</span>.&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="keyword">else</span> &#123; <span class="meta">?&gt;</span></span><br><span class="line">	&lt;div&gt; <span class="variable">$test</span>变量为<span class="literal">false</span>.&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
输出结果为：  <code>php$test变量为 false.</code></li>
</ol>
<p>【<strong>注意</strong>】使用上面实例方法输出大段HTML字符串时，使用更方便比起使用<code>echo()</code>或 <code>print()</code>更方便更快。</p>
<ol>
<li>脚本标记<br>脚本标记是采用<code>script</code>中的<code>language</code>属性设置脚本语言为PHP进行使用的。例如：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span></span><br><span class="line">	#这里写PHP代码哟！</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>简写标记<br>简写标记相比较于默认标记的方式去掉了<code>php</code>关键字，方便大家书写。例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">	<span class="comment">#这里写php代码哟！</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>ASP标记<br>ASP标记是以类似于JAVA的方式进行书写的，通过<code>&lt;%</code>和<code>%&gt;</code>一对标记分割PHP代码。例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">	<span class="comment">#这里写代码哟！</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
【<strong>注意</strong>】使用这种ASP标记这种进行书写PHP代码的话，需要修改PHP配置文件<code>php.ini</code>文件，需要将<code>short_open_tag</code>和<code>asp_tags</code>这两个参数设置为<code>On</code>，考虑到这两种方式的移植性比较差，不建议使用这种方式。修改如下：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">short_open_tag = On</span><br><span class="line">asp_tags = On</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="2-PHP注释"><a href="#2-PHP注释" class="headerlink" title="2. PHP注释"></a>2. PHP注释</h2><p>一门编程语言肯定少不了写注释的，我们来看看PHP有哪些注释吧</p>
<ol>
<li>C++语言风格的单行注释<br>例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">//这里是我写的注释呦！</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
【<strong>实例</strong>】这种单行注释方式是经常使用的，也是比较常见的注释方式<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;  <span class="comment">//输出123</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>123</code>不会显示我注释的内容。</li>
<li>Shell脚本语言风格的注释<br>例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">		这里</span></span><br><span class="line"><span class="comment">		是多</span></span><br><span class="line"><span class="comment">		行注</span></span><br><span class="line"><span class="comment">		释呦！</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
【<strong>实例</strong>】多行注释主要用于代码的开始简要说明时使用<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	下面代码用来乘法计算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">20</span>;</span><br><span class="line">	<span class="variable">$c</span> = <span class="variable">$a</span> * <span class="variable">$b</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>200</code><br>【<strong>注意</strong>】多行注释中不要写入代码去呦，不然的话是不生效无法基线解释的呦！！！<br>【<strong>实例</strong>】这里将PHP代码写到多行注释种，看看会怎么样<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	下面代码用来乘法计算</span></span><br><span class="line"><span class="comment">	$d = 200;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">20</span>;</span><br><span class="line">	<span class="variable">$c</span> = <span class="variable">$a</span> * <span class="variable">$b</span> * <span class="variable">$d</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>0</code>	这里因为把变量<code>d</code>写到了注释里面，PHP不会解释注释里面的代码</li>
<li>C语言风格的多行注释<br>例如：<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">#这里是我写的注释呦！</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
【<strong>实例</strong>】单行注释<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">10</span>;	<span class="comment">#这是a变量</span></span><br><span class="line">	<span class="variable">$b</span> = <span class="number">20</span>;	<span class="comment">#这是b变量</span></span><br><span class="line">	<span class="variable">$c</span> = <span class="variable">$a</span> * <span class="variable">$b</span>; <span class="comment">#这是c变量</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$c</span>;	<span class="comment">#这是输出c变量</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>200</code><br>【<strong>注意</strong>】单行注释的时候不要写<code>?&gt;</code>呦，不让后面的代码不会生效，会出现报错的呦！！！<br>【<strong>实例</strong>】当单行注释加入<code>?&gt;</code>会发生什么呢<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">10</span>;	<span class="comment">#这是a变量</span></span><br><span class="line">	<span class="variable">$b</span> = <span class="number">20</span>;	<span class="comment">#这是b?&gt;变量</span></span><br><span class="line">	<span class="variable">$c</span> = <span class="variable">$a</span> * <span class="variable">$b</span>; <span class="comment">#这是c变量</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$c</span>;	<span class="comment">#这是输出c变量</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<!-- 输出结果为：![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8a05280c606ec9373a606746bfc365de.png) --></li>
</ol>
<script> document.write('<img src="'+ imgurl +'1736732490/8a05280c606ec9373a606746bfc365de.png">'); </script><br>

<p>当单行注释种加入<code>?&gt;</code>结尾符时，PHP会停止解释后面的代码，后面代码就会以HTML的形式进行展现</p>
<h2 id="3-PHP指令分隔符"><a href="#3-PHP指令分隔符" class="headerlink" title="3. PHP指令分隔符"></a>3. PHP指令分隔符</h2><p>与C、Perl等语言一样都有着同样一个分隔符<code>;</code>,放在需要分隔的语句后面，当一段PHP代码中包含了结尾符<code>?&gt;</code>则可以省略分隔符<code>;</code>，所以在PHP代码中最后一段代码可以省略分隔符，因为<code>?&gt;</code>结尾符中包含了一个分隔符。<br>【<strong>实例</strong>】正常使用分隔符</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;第一行代码&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;第二行代码&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5aaa6be44e1ff97aa0dd114a464358bf.png) -->

<script> document.write('<img src="'+ imgurl +'1736732490/5aaa6be44e1ff97aa0dd114a464358bf.png">'); </script><br>

<p>【<strong>实例</strong>】最后一段代码省略分隔符</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;第一行代码&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;第二行代码&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;最后一行代码&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<!-- 输出结果为：![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c94cde48638307287b4af4f83c924806.png) -->

<script> document.write('<img src="'+ imgurl +'1736732490/c94cde48638307287b4af4f83c924806.png">'); </script><br>





]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>自学PHP笔记（二）PHP数据类型</title>
    <url>/2025/01/13/2025011303/</url>
    <content><![CDATA[<p>PHP数据类型可支持以下8种类型：</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>string</td>
<td>字符串</td>
</tr>
<tr>
<td>boolean</td>
<td>布尔值</td>
</tr>
<tr>
<td>integer</td>
<td>整型</td>
</tr>
<tr>
<td>float</td>
<td>浮点型</td>
</tr>
<tr>
<td>array</td>
<td>数组</td>
</tr>
<tr>
<td>object</td>
<td>对象</td>
</tr>
<tr>
<td>resource</td>
<td>资源</td>
</tr>
<tr>
<td>NULL</td>
<td>NULL</td>
</tr>
</tbody></table>
<h1 id="1-基本类型"><a href="#1-基本类型" class="headerlink" title="1. 基本类型"></a>1. 基本类型</h1><p>基本类型也就是最基础的数据类型，用来表示比较简单、直接性的数据，基本类型有以下几个数据类型：</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>boolean(布尔值)</td>
<td>其值只有两个，一个是<code>true</code>，一个是<code>false</code>。多数用来判断事物的真假</td>
</tr>
<tr>
<td>string(字符串)</td>
<td>其值包含计算机所能够显示的所有字符的集合，多数用来做说明性的字符</td>
</tr>
<tr>
<td>integer(整型)</td>
<td>只包含整数，包含正整数和负整数</td>
</tr>
<tr>
<td>float(浮点型)</td>
<td>包含整数和小数</td>
</tr>
</tbody></table>
<h2 id="1-1-boolean（布尔值）"><a href="#1-1-boolean（布尔值）" class="headerlink" title="1.1 boolean（布尔值）"></a>1.1 boolean（布尔值）</h2><p>布尔值由<code>true</code>和<code>false</code>这两个值，所以是PHP种最简单的一种数据类型，也是使用最多的一个数据类型，而且布尔值的两个值可以直接使用，不区分大小写，在设置变量时可以直接将布尔值中的两个值进行赋值就可以，通常是配合流程控制进行使用的。<br>【<strong>示例1</strong>】常规设置变量为布尔值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="literal">true</span>;	\\设置变量 a 的值为真</span><br><span class="line">	<span class="variable">$b</span> = <span class="literal">false</span>;	\\设置变量 b 的值为假</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>【<strong>示例2</strong>】与流程控制语句配合使用，判断事物真假</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">	<span class="variable">$a</span> = <span class="literal">true</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$a</span> == <span class="variable">$b</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;值相等&quot;</span>;	<span class="comment">#结果为真输出</span></span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;值不相等&quot;</span>;	<span class="comment">#结果为假输出</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>值不相等</code><br>【<strong>示例3</strong>】使用运算符返回布尔值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$name</span> = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$name</span> == <span class="string">&quot;张三&quot;</span>)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;他的名字是<span class="subst">$name</span>&quot;</span>;	<span class="comment">#如果判断运算结果为真则输出</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>他的名字是张三</code><br>【<strong>示例4</strong>】常用语句</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$a</span> = <span class="literal">true</span> )&#123;</span><br><span class="line">		<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>bool(true)</code>，上面出现的 <code>var_dump()</code>是用来打印输出结果并带上数据类型<br>上面那种判断变量真假的方式可直接写成下面简单的方法：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$a</span>) &#123;</span><br><span class="line">		<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>【<strong>注意</strong>】上面<code>$a</code>变量我的赋值没有写，不给变量复制，变量默认为<code>NULL</code></p>
<h2 id="1-2-整型"><a href="#1-2-整型" class="headerlink" title="1.2 整型"></a>1.2 整型</h2><p>整型数值只包含整数，其中整型也可以使用八进制、十六进制、二进制表上，负数时前面可加可选符号<code>-</code>和<code>+</code>。<br>【<strong>示例1</strong>】八进制的整数，在表示数字前需要在数字前面加<code>0</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">0456</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>int(302)</code>，八进制456转化为十进制是302<br>【<strong>示例2</strong>】十六进制的整数，在表示数字前需要在数字前面加<code>0x</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">0x456</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>int(1110)</code>，十六进制456转化为十进制是1110<br>【<strong>示例3</strong>】二进制的整数，在表示数字前需要在数字前加<code>0b</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">0b1101</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>int(13)</code>，二进制数1101转换为十进制是13<br>【<strong>示例4</strong>】打印负数,只需正数前面加<code>-</code>即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = -<span class="number">100</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果不变，显示<code>int(-100)</code></p>
<p>【<strong>番外</strong>】整数一般最大值是二十亿，也就是32位字符，64位平台最大值是9E18，查看支持的最大值和最小值可以采用<code>PHP_INT_MAX</code>和<code>PHP_INT_MIN</code>进行查看<br>【<strong>示例1</strong>】查看支持最大的整数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(PHP_INT_MAX);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>我这输出结果是<code>int(9223372036854775807)</code>，你们自己算算吧是多少<br>【<strong>示例2</strong>】查看支持最小的整数，这个只有PHP7.0版本之后支持哟</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(PHP_INT_MIN);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个最小整数的输出值就不用我说了吧，算了给你们看看结果吧<code>int(-9223372036854775808)</code><br>【<strong>注意</strong>】在输出八进制时，如果出现超过8的数值，PHP7.0版本之前会自动忽略，但是7.0之后会直接报错哦<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">01239</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>报错信息如下：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/1bdaa6829555f002333bb2984a911b77.png) -->

<script> document.write('<img src="'+ imgurl +'1736730921/1bdaa6829555f002333bb2984a911b77.png">'); </script><br>

<p>【<strong>注意</strong>】如果给出的整数值超出了整数范围，会被解释为浮点数，同样如果运算结果超出了整数范围，也会解释为浮点数哟！<br>【<strong>示例</strong>】运算结果超出整数范围</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP</span><br><span class="line">	<span class="variable">$num1</span> = <span class="number">45678901111</span>;</span><br><span class="line">	<span class="variable">$num2</span> = <span class="number">89099899111</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$num1</span> * <span class="variable">$num2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>float(4.0699854804914E+21)</code></p>
<h2 id="1-3-浮点型"><a href="#1-3-浮点型" class="headerlink" title="1.3 浮点型"></a>1.3 浮点型</h2><p>浮点型整数也叫实数，表示方式可以采用正常格式和科学技术法格式进行<br>【<strong>示例1</strong>】正常格式</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">1.234</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>float(1.234)</code><br>【<strong>示例2</strong>】科学技术格式</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span> = <span class="number">1.2e3</span>;</span><br><span class="line">	<span class="variable">$b</span> = <span class="number">8</span>E - <span class="number">10</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>float(1200)   float(8.0E-10)</code></p>
<h2 id="1-4-字符串"><a href="#1-4-字符串" class="headerlink" title="1.4 字符串"></a>1.4 字符串</h2><p>字符串就是由一系列的字符组成，一个字符就是一个字节，通过单引号、双引号、Heredoc语法结构和Nowdoc语法结构定义字符串。</p>
<ol>
<li><strong>单引号</strong><br>采用单引号定义字符串就是使用单引号把字符包围起来，如果想要输出单引号需要在单引号添加转义符<code>\</code>，如果是在结尾想输出反斜杠就需要在字符前添加转义符<code>\\</code>，如果在其他字符前面添加转义符<code>\</code>或者<code>\\</code>会直接输出转义符。<br>【<strong>示例1</strong>】正常输出单行字符串<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;我是一个字符串&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>string(21) &quot;我是一个字符串&quot;</code><br>【<strong>示例2</strong>】正常输出多行字符串<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;我是多行</span></span><br><span class="line"><span class="string">字符串&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>tring(23) &quot;我是多行 字符串&quot;</code><br>【<strong>示例3</strong>】在字符串中显示单引号<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;I like \&#x27;PHP\&#x27;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>string(12) &quot;I like &#39;PHP&#39;&quot;</code><br>【<strong>示例4</strong>】在字符串中输出反斜杠，多用于文件路径<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;D:\\php\index.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>string(16) &quot;D:\php\index.php&quot;</code><br>【<strong>注意</strong>】在使用单引号进行定义字符时，如果字符中含有变量，变量将不会被解释，但是双引号定义字符串时变量可以被解释的<br>【<strong>示例</strong>】在字符串中引用变量<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;我叫$a&#x27;</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&quot;我叫<span class="subst">$a</span>&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
输出结果为：<code>$b</code>的返回结果为<code>string(8) &quot;我叫$a&quot;</code>，<code>$c</code>的返回结果为<code>string(12) &quot;我叫张三&quot;</code></li>
<li><strong>双引号</strong><br>采用双引号定义字符串，将要定义的字符型采用<code>&quot;&quot;</code>， 使用双引号定义字符串时，如果字符串中存在变量则变量将会被解释，不会显示变量名，PHP将对这些特殊字符串进行解析，这些字符串都要通过转义符来显示。<br>转义符列表：<table>
<thead>
<tr>
<th>转义字符</th>
<th>意义</th>
<th>ASCLL码值(十进制)</th>
</tr>
</thead>
<tbody><tr>
<td>\a</td>
<td>响铃(BEL)</td>
<td>007</td>
</tr>
<tr>
<td>\b</td>
<td>退格(BS)，将当前位置移到前一列</td>
<td>008</td>
</tr>
<tr>
<td>\f</td>
<td>换页(FF)，将当前位置移到下页开头</td>
<td>012</td>
</tr>
<tr>
<td>\n</td>
<td>换行(LF)，将当前位置移到下一行开头</td>
<td>010</td>
</tr>
<tr>
<td>\r</td>
<td>回车(CR)，将当前位置移动到本行开头</td>
<td>013</td>
</tr>
<tr>
<td>\t</td>
<td>水平制表(HT)(跳到下一个TAB位置)</td>
<td>009</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表(TV)</td>
<td>011</td>
</tr>
<tr>
<td>\\</td>
<td>代表一个反斜杠字符”\“</td>
<td>092</td>
</tr>
<tr>
<td>\‘</td>
<td>代表一个单引号(撇号)字符</td>
<td>039</td>
</tr>
<tr>
<td>\“</td>
<td>代表一个双引号字符</td>
<td>034</td>
</tr>
<tr>
<td>\?</td>
<td>代表一个问好</td>
<td>063</td>
</tr>
<tr>
<td>\0</td>
<td>空字符(NULL:)</td>
<td>000</td>
</tr>
<tr>
<td>\ddd</td>
<td>1到3位八进制数所代表的任意字符</td>
<td>三位八进制</td>
</tr>
<tr>
<td>\xhh</td>
<td>1到2位十六进制所代表的任意字符</td>
<td>二位十六进制</td>
</tr>
</tbody></table>
</li>
</ol>
<p>【<strong>注意</strong>】要注意<code>\</code>和<code>/</code>，此处时不可替换的<br>【<strong>示例1</strong>】双引号定义字符串时输出<code>$</code>符号</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;\$&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>【<strong>示例2</strong>】双引号定义字符串时输出双引号</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot; My Name is \&quot;李明\&quot;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为:<code>My Name is &quot;李明&quot;</code><br> 3. <strong>Heredoc语法结构</strong><br>采用Heredoc结构<code>&lt;&lt;&lt;</code>定义字符串，在使用提示符定义字符串时，要在提示符后面定义一个标识符，然后定义新的一行，新行中为你要显示的字符串，最后要以标识符进行结尾，标识符定义必须遵循PHP规则，只能包含大小写、数字和下划线，但是不能将下划线作为开头使用<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$str</span> = <span class="string">&lt;&lt;&lt;test</span></span><br><span class="line"><span class="string">	My name is &quot;zhangsan&quot;</span></span><br><span class="line"><span class="string">	加入CSDN已经一周年了</span></span><br><span class="line"><span class="string">	test</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>My name is &quot;zhangsan&quot; 加入CSDN已经一周年了</code><br>【<strong>注意</strong>】在使用Heredoc语法结构定义字符串时，字符串中如果存在变量，那变量将会被解释<br> 4. <strong>Nowdoc语法结构</strong><br>采用Nowdoc语法结构定义字符串类似于采用Heredoc定义字符串的方式，只不过时在定义标识符时需要使用单引号将标识符进行包围，这种方法无法解释变量，在字符串中变量相当于字符<br>【<strong>示例</strong>】</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&lt;&lt;&lt;&#x27;test&#x27;</span></span><br><span class="line"><span class="string">	My name is $name</span></span><br><span class="line"><span class="string">	My name is 张三</span></span><br><span class="line"><span class="string">test</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>My name is $name My name is 张三</code></p>
<h1 id="2-复合类型"><a href="#2-复合类型" class="headerlink" title="2. 复合类型"></a>2. 复合类型</h1><p>复合类型包括数组和对象两种数据类型</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>array(数组)</td>
<td>一组有序数据组合</td>
</tr>
<tr>
<td>object(对象)</td>
<td>对象是类的实例，使用new进行创建</td>
</tr>
</tbody></table>
<h2 id="2-1-数组"><a href="#2-1-数组" class="headerlink" title="2.1 数组"></a>2.1 数组</h2><p>数组也就是我们常说的键值对的，每个数组都是由索引(键名)和值两部分组成，数组的索引部分可以使用字符串或者是数字表示，值可以是任意数据类型<br>【<strong>实例1</strong>】采用函数创建数组</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(</span><br><span class="line">	<span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">	<span class="string">&quot;age&quot;</span>  =&gt; <span class="string">&quot;11&quot;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>array(2) &#123; [&quot;name&quot;]=&gt; string(6) &quot;张三&quot; [&quot;age&quot;]=&gt; string(3) &quot;11&quot; &#125;</code><br>【<strong>实例2</strong>】直接赋值的方式创建数组</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = [</span><br><span class="line">	<span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">	<span class="string">&quot;age&quot;</span>  =&gt; <span class="string">&quot;11&quot;</span>,</span><br><span class="line">];</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>array(2) &#123; [&quot;name&quot;]=&gt; string(6) &quot;张三&quot; [&quot;age&quot;]=&gt; string(3) &quot;11&quot; &#125;</code><br>【<strong>实例3</strong>】创建只有值得数组</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>array(3) &#123; [0]=&gt; string(6) &quot;张三&quot; [1]=&gt; string(6) &quot;李四&quot; [2]=&gt; string(6) &quot;王五&quot; &#125;</code><br>【<strong>提示</strong>】不设置索引得话，数组会自动添加一个索引，这个索引是由数字组成得，第一个从零开始<br>【<strong>实例4</strong>】读取数组时，可以使用索引名用方括号包围得方式进行读取</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(</span><br><span class="line">	<span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">	<span class="string">&quot;age&quot;</span>  =&gt; <span class="string">&quot;11&quot;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>string(6) &quot;张三&quot;</code><br>当然也可以用数组得索引进行赋值得例如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(</span><br><span class="line">	<span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">	<span class="string">&quot;age&quot;</span>  =&gt; <span class="string">&quot;11&quot;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>array(2) &#123; [&quot;name&quot;]=&gt; string(6) &quot;李四&quot; [&quot;age&quot;]=&gt; string(2) &quot;11&quot; &#125;</code></p>
<h2 id="2-2-对象"><a href="#2-2-对象" class="headerlink" title="2.2 对象"></a>2.2 对象</h2><p>对象是面向对象编程得基础，在PHP中使用<code>new</code>进行实例化，也就是创建对象<br>【<strong>实例</strong>】创建对象</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">fu</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test;</span><br><span class="line"><span class="variable">$test</span>-&gt;<span class="title function_ invoke__">fu</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>test</code></p>
<h1 id="3-特殊类型"><a href="#3-特殊类型" class="headerlink" title="3. 特殊类型"></a>3. 特殊类型</h1><p>特殊得数据类型包含资源和空值两种</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>resource(资源)</td>
<td>这个也是就指的外部资源，如上传的文件等</td>
</tr>
<tr>
<td>NULL(空值)</td>
<td>指的是当没有赋值变量时则为空</td>
</tr>
</tbody></table>
<h2 id="3-1-资源"><a href="#3-1-资源" class="headerlink" title="3.1 资源"></a>3.1 资源</h2><p>资源数据类型变量保存有打开文件、数据库连接、图形画布区域等的特殊句柄，不建议将其他数据类型转换为资源类型，多数使用在文件上传，下载，数据库等场景<br>资源数据类型自动开启资源回收机制，随时释放不再使用的资源，以免程序占用服务器的大量资源，无需手动释放<br>后续为大家记录资源的使用方法吧。</p>
<h2 id="3-2-NULL"><a href="#3-2-NULL" class="headerlink" title="3.2 NULL"></a>3.2 NULL</h2><p>NULL即空值，也是就是说变量并没有进行赋值，其值时一个比较特殊的值为<code>null</code>，该值不区分大小写，变量为空值时会存在设置为空、变量没有被赋值和使用<code>unset()</code>函数处理过的变量<br>【<strong>示例1</strong>】设置变量值为空</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$test</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>NULL</code><br>【<strong>示例2</strong>】在不设置变量时输出变量值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>NULL</code><br>【<strong>提示</strong>】使用<code>unset()</code>函数将会摧毁变量，使用<code>is_null()</code>函数可以判断变量是否为空<br>【<strong>实例3</strong>】判断变量是否为空</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$a</span>))&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;变量为空&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;变量不为空&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出结果为：<code>变量不为空</code></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>华为云-容器引擎CCE-部署Nginx应用</title>
    <url>/2025/01/13/2025011305/</url>
    <content><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="注册华为云账号"><a href="#注册华为云账号" class="headerlink" title="注册华为云账号"></a>注册华为云账号</h3><p>进入华为云官网，点击右上角“注册账号”，选择“华为云”，输入信息进行注册。</p>
<span id="more"></span>
<!-- ![注册页面](https://i-blog.csdnimg.cn/blog_migrate/0cf4387f3d30d0e641735d531bc4c802.png) -->
<script> document.write('<img src="'+ imgurl +'1736733082/0cf4387f3d30d0e641735d531bc4c802.png">'); </script><br>
<p>输入相关信息注册，如已有账号可直接参考下面登录进行登录操作</p>
<h3 id="登录华为云账号"><a href="#登录华为云账号" class="headerlink" title="登录华为云账号"></a>登录华为云账号</h3><!-- ![登录页面](https://i-blog.csdnimg.cn/blog_migrate/9bb1c32fb70a4745e37b6b310e9a5d1c.png) -->

<script> document.write('<img src="'+ imgurl +'1736733082/9bb1c32fb70a4745e37b6b310e9a5d1c.png">'); </script>

<h3 id="实名认证"><a href="#实名认证" class="headerlink" title="实名认证"></a>实名认证</h3><p>登录后需进行实名认证后才可进行接下来的一些列操作</p>
<p><strong>单击账号名下拉框中的“账号中心”。</strong><br>进入“账号中心”页面。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/ae5aff820065a68f196e493f07e7e96b.png) -->
<script> document.write('<img src="'+ imgurl +'1736733082/ae5aff820065a68f196e493f07e7e96b.png">'); </script><br>

<p><strong>单击左侧导航中的“实名认证”，选择账号类型（个人账号&#x2F;企业账号），根据页面提示进行实名认证。</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7c54e4c7c4f47c8b4d15b88188442859.png) -->
<script> document.write('<img src="'+ imgurl +'1736733082/7c54e4c7c4f47c8b4d15b88188442859.png">'); </script>

<p><strong>实名认证类型介绍</strong><br>实名认证详细介绍</p>
<table>
<thead>
<tr>
<th>账号类型</th>
<th>认证类型</th>
<th>详细操作知道</th>
</tr>
</thead>
<tbody><tr>
<td>个人账号</td>
<td>推荐扫码认证（即时完成认证）</td>
<td>请参见<a href="https://support.huaweicloud.com/usermanual-account/zh-cn_topic_0133456714.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">如何进行扫码认证</a>。</td>
</tr>
<tr>
<td>-</td>
<td>银行卡认证（即时完成认证）</td>
<td>请参见<a href="https://support.huaweicloud.com/usermanual-account/zh-cn_topic_0076156874.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">如何进行个人银行卡认证</a>。</td>
</tr>
<tr>
<td>-</td>
<td>证件认证（1-3个工作日）</td>
<td>请参见<a href="https://support.huaweicloud.com/usermanual-account/zh-cn_topic_0066810647.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">如何进行个人证件认证</a>。</td>
</tr>
<tr>
<td>企业账号</td>
<td>推荐银行对公账户认证（最快30分钟）</td>
<td>请参见<a href="https://support.huaweicloud.com/usermanual-account/zh-cn_topic_0066810651.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">如何进行企业银行对公账户认证。</a></td>
</tr>
<tr>
<td></td>
<td>企业证件认证（0-3个工作日）</td>
<td>请参见<a href="https://support.huaweicloud.com/usermanual-account/zh-cn_topic_0066810649.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">如何进行企业证件认证</a>。</td>
</tr>
</tbody></table>
<h2 id="创建用于隔离集群的VPC"><a href="#创建用于隔离集群的VPC" class="headerlink" title="创建用于隔离集群的VPC"></a>创建用于隔离集群的VPC</h2><p><strong>访问VPC</strong><br>进入虚拟私有云，鼠标移动到云桌面浏览器页面中左侧菜单栏，点击服务列表-&gt;“网络”-&gt;“虚拟私有云VPC”，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f51edf626740e2d35fb39f5b48146d2b.png) -->
<script> document.write('<img src="'+ imgurl +'1736733082/f51edf626740e2d35fb39f5b48146d2b.png">'); </script><br>

<p><strong>创建VPC</strong><br>于虚拟私有云操作页面，右上角点击“创建虚拟私有云”，进入创建详情，配置参数如下：[基本信息]①区域：华北-北京四，②名称：自定义(记录下VPC名称后续步骤使用)，③网段：192.168.0.0&#x2F;16，[子网配置]可用区：任意选择一项，名称：默认，子网网段：192.168.0.0&#x2F;24，点击“立即创建”-&gt;“返回虚拟私有云列表”查找到该VPC。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/77578adf588867fa6a047d1541f7b027.png) -->
<script> document.write('<img src="'+ imgurl +'1736733082/77578adf588867fa6a047d1541f7b027.png">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8951a6fb04cdaea6f58764591181bd7f.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/8951a6fb04cdaea6f58764591181bd7f.jpeg">'); </script><br>

<h2 id="创建密钥对"><a href="#创建密钥对" class="headerlink" title="创建密钥对"></a>创建密钥对</h2><p><strong>创建密钥对</strong><br>进入华为云控制台，鼠标移动到云桌面浏览器页面中左侧菜单栏，点击服务列表-&gt;“计算”-&gt;“弹性云服务器ECS”，左侧菜单栏目中选择“密钥对”，进入创建界面。后于右侧的“密钥对管理”区域，点击标注的“创建密钥对”按钮，进行密钥对创建，如下图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/00ddb8195d097dcad8838560823dc514.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/00ddb8195d097dcad8838560823dc514.jpeg">'); </script><br>

<p>在弹出的“创建密钥对”窗口中，配置参数如下：名称：自定义，不勾选 “我同意将密钥对私钥托管到华为云”，勾选 “我已经阅读并同意《密钥对管理服务免责声明》”如下图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/6019ee4dd7346fcbfce0d31655ed191b.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/6019ee4dd7346fcbfce0d31655ed191b.jpeg">'); </script><br>

<p>点击“确定”，完成创建。在弹出的保存文件的提示窗口，选择“保存文件”，将包含密钥对的文件保存到实验环境（可在下方列表中看到创建的密钥对，该密钥用于创建CCE集群），如下图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/07509c3561c4cdb2c67e9ca982b5709d.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/07509c3561c4cdb2c67e9ca982b5709d.jpeg">'); </script><br>

<h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><p><strong>访问集群服务</strong><br>进入集群服务，鼠标移动到云桌面浏览器页面中左侧菜单栏，点击服务列表-&gt;“容器服务”-&gt;“云容器引擎CCE”，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7ba16d5144422a0954c54903b084c5f9.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/7ba16d5144422a0954c54903b084c5f9.jpeg">'); </script><br>

<p><strong>创建CCE</strong><br>进入云容器引擎，于页面右侧点击“购买Kubernetes集群”开始购买集群。第一步“服务选型”参数配置如下：①计费模式：按需计费，②区域：华北-北京四，③集群名称：(自定义)，④版本：v1.15.11，⑤集群管理规模：50节点，⑥控制节点数：1（勾选“我已知晓如下约束”），⑦虚拟私有云：选择步骤2.2创建的VPC，⑧所在子网：默认，⑨网络模型：容器隧道网络，⑩容器网段：172.16.0.0&#x2F;16，⑪服务网段：默认，⑫鉴权方式：默认，⑬认证方式：不选，⑭高级设置：采用默认设置，<br>点击下一步进入“创建节点”，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/014240513f1e0f43c557df3b2db6f605.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/014240513f1e0f43c557df3b2db6f605.jpeg">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/b1697cc17a6b6fde21342a92048b572b.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/b1697cc17a6b6fde21342a92048b572b.jpeg">'); </script><br>

<p>第二步“创建节点”参数配置：①创建节点：现在添加，②计费模式：按需计费，③当前区域：华北-北京四，④可选区：任选一项，⑤节点类型：虚拟机节点，⑥节点名称：默认，⑦节点规格：通用型 s6.large.2 2核|4GB，⑧操作系统：EulerOS 2.5，⑨系统盘：高IO(100-1000 IOPS) 40GB,⑩数据盘：高IO(100-1000 IOPS) 100GB,⑪虚拟私有云：默认，⑫所在子网：默认，⑬弹性IP：自动创建，⑭规格：全动态BGP，⑮计费模式：按流量计费，⑯带宽类型：独享，⑰带宽大小：1Mbit&#x2F;s，⑱登录方式：密钥对，⑲密钥对：(选择步骤3.1创建的密钥并勾选我确认以获取到密钥文件)；⑳云服务器高级设置：采用默认设置，㉑Kubemetes高级设置：采用默认设置，㉒节点购买数量：1，点击下一步“配置确认”，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/26579bc0da5f811399f1527549cfebdd.jpeg#pic_center) -->
<script> 
    document.write('<img src="'+ imgurl +'1736733082/26579bc0da5f811399f1527549cfebdd.jpeg">'); 
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/93b0a3e439015f791c851c2f20264ec7.jpeg#pic_center) -->
    document.write('<img src="'+ imgurl +'1736733082/93b0a3e439015f791c851c2f20264ec7.jpeg">'); 
    // ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/fb3630462a34951801eb273d13c6f7ac.jpeg#pic_center)
    document.write('<img src="'+ imgurl +'1736733082/fb3630462a34951801eb273d13c6f7ac.jpeg">'); 
    // ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/217c7ec8cd62f64da265d596ec4600d0.jpeg#pic_center)
    document.write('<img src="'+ imgurl +'1736733082/217c7ec8cd62f64da265d596ec4600d0.jpeg">'); 
</script><br>

<p>勾选“我已知晓上述限制”，检查集群配置无误后点击“提交”</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/6b65930751418b315b40ab1e1a39e568.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/6b65930751418b315b40ab1e1a39e568.jpeg">'); </script><br>

<p>提交后开始进行创建，大约需要6分钟创建完成，如下图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/a3b5ed22a389b4d41fbcf6d243f257fb.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/a3b5ed22a389b4d41fbcf6d243f257fb.jpeg">'); </script><br>

<p>创建完成后，点击“返回集群管理”，“集群状态”显示为“正常”表示该集群创建成功：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/99a510ae0c7832f307b6ffaf3891b2fb.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/99a510ae0c7832f307b6ffaf3891b2fb.jpeg">'); </script><br>

<h2 id="创建容器应用"><a href="#创建容器应用" class="headerlink" title="创建容器应用"></a>创建容器应用</h2><p><strong>进入创建工作负载操作</strong><br>在“云容器引擎”页左侧栏目点击“工作负载”-&gt;“无状态负载 Deployment”进入创建无状态工作负载界面，右上角点击“创建无状态工作负载”进入创建无状态工作负载页面，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f27d5390080f3dad73b981a20214a156.png#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/f27d5390080f3dad73b981a20214a156.png">'); </script><br>

<p><strong>创建工作负载并测试</strong><br>操作步骤如下：第一步“工作负载基本信息”，配置参数如下：①工作负载名称：自定义，②集群名称：(选择刚创建的集群)，③命名空间：default，④实例数量：1；<br>点击“下一步”完成创建并进入“容器设置”界面</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/83e6bf8c1e1d0bd1ecd96134423bf631.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/83e6bf8c1e1d0bd1ecd96134423bf631.jpeg">'); </script><br>

<p>第二步“容器设置”，点击“添加容器”，在弹出的“选择镜像”对话框中选择“开源镜像中心”，搜索栏中输入“nginx”，点击“确定”完成添加。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/e15c1427de6d98f7ea9e111389a8683a.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/e15c1427de6d98f7ea9e111389a8683a.jpeg">'); </script><br>

<p>进入[基本信息]参数配置：①镜像版本：perl，②容器名称：默认或自定义，③特权容器：不开启，④容器规格：cpu配额：申请 0.25core，限制 0.25core内存配额：申请 512MiB，限制 512MiBGPU配额：不勾选GPU显卡：不限制昇腾310配额：不勾选⑤生命周期：采用默认配置，⑥健康检查：采用默认配置，⑦环境变量：采用默认配置，⑧数据存储：采用默认配置，⑨安全设置：采用默认配置，⑩容器日志：采用默认配置，点击“下一步”进入“工作负载访问设置”，</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7211787bf4be7f936e9e2ff0ec1efcb0.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/7211787bf4be7f936e9e2ff0ec1efcb0.jpeg">'); </script><br>

<p>第三步“工作负载访问设置”，点击“添加服务”按钮，在弹出“添加服务”对话框中，参数配置如下：①访问类型：节点访问(NodePort)，②服务名称：自定义，③服务亲和：集群级别，④端口配置：协议：TCP容器端口：80，访问端口：指定端口 30758点击”确定”完成添加。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/143aa33121bd2dd5ea3e30334815e088.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/143aa33121bd2dd5ea3e30334815e088.jpeg">'); </script><br>

<p>继续点击“下一步”，进入第四步“高级设置”，配置参数：①升级策略：升级方式：滚动升级， 最大无效实例：1②缩容策略：缩容时间窗 30，缩容优先级 默认③迁移策略：迁移时间窗 300④调度策略：采用默认设置⑤Pod高级设置：不设置⑥客户端DNS配置：不设置⑦自定义指标监控：不设置⑧性能管理配置：不设置点击“创建”完成此步骤。</p>
<script>
    document.write('<img src="'+ imgurl +'1736733082/576192cb68968848a8cb1315559517c9.jpeg">');
// ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/576192cb68968848a8cb1315559517c9.jpeg#pic_center)
    dcument.write('<img src="'+ imgurl +'1736733082/a2052c4d4cf9ebab0ef07f9172b33553.jpeg">');
// ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/a2052c4d4cf9ebab0ef07f9172b33553.jpeg#pic_center)
    document.write('<img src="'+ imgurl +'1736733082/9ee1f016d6b8de05aeaeec752459f642.jpeg">');
// ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/9ee1f016d6b8de05aeaeec752459f642.jpeg#pic_center)
    document.write('<img src="'+ imgurl +'1736733082/d66de1fa8dbe39dcc062d50a135fd817.jpeg">');
// ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/d66de1fa8dbe39dcc062d50a135fd817.jpeg#pic_center)
</script>
<p>第五步“完成”，点击“返回工作负载列表”</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/ae2eedcefd32acb0aa473129427318f2.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/ae2eedcefd32acb0aa473129427318f2.jpeg">'); </script><br>

<p>返回云容器引擎的工作负载列表（“服务列表”-&gt;“计算”-&gt;“云容器引擎CCE”-&gt;“工作负载”-&gt;“无状态”）查看到状态为“运行中”的nginx工作负载，如图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/d11a2a22a7a205d18539998ccb4a717d.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/d11a2a22a7a205d18539998ccb4a717d.jpeg">'); </script><br>

<p>点击nginx工作负载的“外部访问地址”下的超链接，打开的新窗口为nginx的欢迎页面，表明容器添加成功，如下图所示：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8e5fc9f672dcd81a7f2b23cda1bd3fbc.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736733082/8e5fc9f672dcd81a7f2b23cda1bd3fbc.jpeg">'); </script><br>
<p>部分内容来自<strong>华为云官网</strong></p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>容器</tag>
        <tag>华为云</tag>
      </tags>
  </entry>
  <entry>
    <title>你会系统备份及恢复吗？来看看吧</title>
    <url>/2025/01/13/2025011306/</url>
    <content><![CDATA[<h2 id="tar-命令"><a href="#tar-命令" class="headerlink" title="tar 命令"></a>tar 命令</h2><p>副本（本机备份整个系统，以后还原还是还原到本机）<br>注意根目录下要有充足的可用空间用于备份。</p>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment">#tar.gz格式</span></span><br><span class="line">tar cvpzf system_backup.tar.gz / --exclude=/proc --exclude=/lost+found --exclude=/system_backup.tar.gz --exclude=/mnt --exclude=/sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#tar.bz2格式</span></span><br><span class="line">tar cvpjf system_backup.tar.bz2 / --exclude=/proc --exclude=/lost+found --exclude=/system_backup.tar.bz2 --exclude=/mnt --exclude=/sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复系统</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment">#上传文件到根目录下</span></span><br><span class="line">tar xvpfz system_backup.tar.gz -C /</span><br><span class="line">或</span><br><span class="line">tar xvpfj system_backup.tar.bz2 -C /</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建备份时排除的目录</span></span><br><span class="line"><span class="built_in">mkdir</span> proc</span><br><span class="line"><span class="built_in">mkdir</span> lost+found</span><br><span class="line"><span class="built_in">mkdir</span> mnt</span><br><span class="line"><span class="built_in">mkdir</span> sys</span><br></pre></td></tr></table></figure>
<ul>
<li>&#x2F;proc 权限：文件所有者：root群组：root 所有者：读取 执行 群组：读取 执行 其它：读取 执行</li>
<li>&#x2F;lost+found 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li>
<li>&#x2F;mnt 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li>
<li>&#x2F;sys 权限：文件所有者：root群组：root 所有者：读取 写入 执行 群组：读取 执行 其它：读取 执行</li>
</ul>
<p>恢复完成重启以后，所以的事情都会和你备份的时候一模一样。<br>镜像（本机备份系统，还原到新主机上）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1,检查系统版本，在目标机上安装一样版本的系统(最简安装即可),分区格式，类型也一样（我没试过不一样的情况，不知道能否成功）</span><br><span class="line">lsb_release -a</span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="built_in">df</span> -Th</span><br><span class="line">free -h</span><br><span class="line"></span><br><span class="line">2，备份源系统</span><br><span class="line"><span class="comment"># 因为目标机和源主机硬件配置不同，所以排除dev，tmp；再适当增加你要排除的文件，如：--exclude=/root/*.bz2</span></span><br><span class="line"><span class="comment"># 这里再mnt下有充足空间，所以保存到mnt下。</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">tar cvpzf /mnt/system_backup.tar.gz / --exclude=/mnt/system_backup.tar.gz \</span><br><span class="line">--exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/dev \</span><br><span class="line">--exclude=/tmp --exclude=/media</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传到目标主机</span></span><br><span class="line">scp /mnt/system_backup.tar.gz root@192.168.0.166:/mnt</span><br><span class="line"></span><br><span class="line">3,在目标机上用ISO、LiveCD等启动，挂载磁盘（一般会自动挂载到/media文件夹）</span><br><span class="line"><span class="built_in">sudo</span> -s  </span><br><span class="line"><span class="built_in">cd</span> /media/&lt;对应的uuid号&gt;</span><br><span class="line"><span class="comment"># 备份重要配置文件/boot/gurb/gurb.cfg /etc/fstab</span></span><br><span class="line">记录里面的UUID，</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除重复文件</span></span><br><span class="line"><span class="comment"># 除了上面备份系统时排除的一些文件夹外，比如说dev mnt media sys这些文件夹，其他全部删除。</span></span><br><span class="line"><span class="built_in">rm</span> -rf root home usr lib lib64 etc var bin sbin opt boot run selinux vmlinuz initrd.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原备份</span></span><br><span class="line">mount /dev/vda1 /mnt/1</span><br><span class="line"><span class="comment"># 这里注意千万不要写/目录，会把现有的系统搞挂！！！应该是挂载的目录</span></span><br><span class="line">tar xvpfz system_backup.tar.gz -C /mnt/1</span><br><span class="line"><span class="built_in">cd</span> /mnt/1       <span class="comment">#此时你可以看到根目录的结构，但是编辑fstab文件发现是现有系统的fstab</span></span><br><span class="line"><span class="built_in">chroot</span> ./       <span class="comment">#执行chroot后会以./目录为根目录，这时编辑的文件就是真正的目标源文件了。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">还原后修改/etc/fstab里的UUID为刚刚备份的文件里面的信息，注意分区格式也要对应。</span><br><span class="line">修改/boot/gurb/gurb.cfg里的UUID为刚刚备份的文件里面的信息。</span><br><span class="line">修改网卡、IP配置文件，以防无法分配IP。（如果是虚拟机记得添加网卡，配置中等性能的显卡）</span><br><span class="line"></span><br><span class="line">如果有依赖于原有平台的服务，如内建NTP，Agent等监控程序；关闭服务，关闭开机自启；</span><br><span class="line">Ubuntu：在命令行输入runleve可以查看当前运行级别，一般默认是2</span><br><span class="line">查看/etc/rc2.d目录中的S开头的服务都是会开机自动运行的；里面是软链接，想添加的话自己建一个链接文件就可以，S代表start，后面数字是启动顺序，删除软链接。同时删除/etc/init.d/下对应的脚本。</span><br><span class="line">vim /etc/init.d/rc.local</span><br><span class="line">Centos:用systemctl</span><br><span class="line"></span><br><span class="line">完成上述步骤后</span><br><span class="line"><span class="built_in">exit</span>      <span class="comment">#退出chroot</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">umount /mnt/1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一切完成后就可以重启了，不出意外就正常启动系统了（启动后原来安装系统时设置的账户等全部消失；账户和源主机一致）。</span></span><br><span class="line">若开机Grub提示“boot error 15 :Error 15 file not found”</span><br><span class="line">解决方法：请检查GRUB相关文件的内核文件所在位置。通常与/boot分区有关。</span><br><span class="line"></span><br><span class="line">若开机Grub提示“dracut:dono<span class="string">&#x27;t how to hand root=f078”</span></span><br><span class="line"><span class="string">解决方法：将root=UUID改成root=/dev/sdaX这种格式。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">若开机系统提示/usr/libexec/gconf-sanity-check-2退出状态256的解决</span></span><br><span class="line"><span class="string">解决方法：chmod 777 /tmp</span></span><br></pre></td></tr></table></figure>
<h2 id="rsync命令"><a href="#rsync命令" class="headerlink" title="rsync命令"></a>rsync命令</h2><p>注意目标分区的格式最好是NTFS、FAT、EXT之类的格式，避免遇到大于4G的文件无法备份的问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最好有其他分区或外接存储设备，挂载好，df -lh看挂载点。</span></span><br><span class="line"><span class="comment">#备份</span></span><br><span class="line">rsync -Pa / /media/usb/backup_20170410 --exclude=/media/* --exclude=/sys/* --exclude=/proc/* --exclude=/mnt/* --exclude=/tmp/*</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复</span></span><br><span class="line">rsync -Pa /media/usb/backup_20170410 /</span><br></pre></td></tr></table></figure>
<h2 id="dd命令"><a href="#dd命令" class="headerlink" title="dd命令"></a>dd命令</h2><p>dd命令属于扇区克隆，目标分区要比备份分区要大，即使没有使用的空间也会被原样克隆下来，会比较慢。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#备份</span></span><br><span class="line"><span class="built_in">df</span> -h   <span class="comment">#查看系统所在分区</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda1 of=/dev/sdb3     <span class="comment">#备份sda1到sdb3中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sdb3 of=/dev/sda1     <span class="comment">#恢复sdb3到sdb1中</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名服务及常用国内DNS服务器地址</title>
    <url>/2025/01/13/2025011307/</url>
    <content><![CDATA[<h2 id="DNS域名服务"><a href="#DNS域名服务" class="headerlink" title="DNS域名服务"></a>DNS域名服务</h2><h3 id="DNS服务器分类"><a href="#DNS服务器分类" class="headerlink" title="DNS服务器分类"></a>DNS服务器分类</h3><p><strong>缓存域名服务器</strong></p>
<ol>
<li>也称为高速缓存服务器</li>
<li>通过向其他域名服务器查询获得域名 -&gt; IP 地址记录</li>
<li>将域名查询结果缓存到本地，提高重复查询时的速度<span id="more"></span></li>
</ol>
<p><strong>主域名服务器</strong></p>
<ol>
<li>特定 DNS 区域的官方服务器，具有唯一性</li>
<li>负责维护该区域内所有域名 -&gt; IP 地址的映射记录</li>
</ol>
<p><strong>从域名服务器</strong></p>
<ol>
<li>也称为辅助域名服务器</li>
<li>其维护的域名 -&gt; IP 地址记录来源于主域名服务器</li>
</ol>
<h2 id="搭建DNS服务器"><a href="#搭建DNS服务器" class="headerlink" title="搭建DNS服务器"></a>搭建DNS服务器</h2><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@wpt ~]# yum install <span class="built_in">bind</span> bind-chroot bind-utils -y</span><br></pre></td></tr></table></figure>
<h3 id="配置文件介绍"><a href="#配置文件介绍" class="headerlink" title="配置文件介绍"></a>配置文件介绍</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用BIND软件构建域名服务是，主要涉及两种类型的配置文件：主配置文件和区域数据文件。其中，主配置文件用于设置named服务的全局选项、注册区域及访问控制等各种运行参数；区域数据文件用于保存 DNS 解析记录的数据文件（正向或反向记录）。</span><br><span class="line">BIND配置文件保存在两个位置：</span><br><span class="line">/etc/named.conf BIND服务主配置文件</span><br><span class="line">/var/named/ zone文件（域的dns信息）</span><br><span class="line">如果安装了bind-chroot，BIND会被封装到一个伪根目录内，原先的文件配置文件的路径位置变为：</span><br><span class="line">/var/named/chroot/etc/named.conf ----BIND服务主配置文件</span><br><span class="line">/var/named/chroot/var/named/ ---------zone文件</span><br></pre></td></tr></table></figure>
<h3 id="复制配置相关文件"><a href="#复制配置相关文件" class="headerlink" title="复制配置相关文件"></a>复制配置相关文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@wpt ~]# <span class="built_in">cp</span> -rv /usr/share/doc/bind-9.11.4/sample/etc/* /var/named/chroot/etc/</span><br><span class="line">[root@wpt ~]#  <span class="built_in">cp</span> -rv /usr/share/doc/bind-9.11.4/sample/var/* /var/named/chroot/var/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bind-chroot安装好之后不会有预制的配置文件，但是在BIND的文档文件夹内（/usr/share/doc/bind-9.11.4），BIND为我们提供了配置文件模板，我们可以直接拷贝过来：</span><br><span class="line"><span class="comment"># 拷贝bind相关文件,准备 bind chroot 环境</span></span><br><span class="line"><span class="built_in">cp</span> -R /usr/share/doc/bind-*/sample/var/named/* /var/named/chroot/var/named/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 /etc/named.conf 拷贝到 bind chroot目录</span></span><br><span class="line"><span class="comment"># -p 复制后目标文件保留源文件的属性 （包括所有者、所属组、权限和时间）</span></span><br><span class="line"><span class="built_in">cp</span> -p /etc/named.conf /var/named/chroot/etc/named.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 bind chroot 的目录中创建相关文件</span></span><br><span class="line"><span class="built_in">touch</span> /var/named/chroot/var/named/data/cache_dump.db</span><br><span class="line"><span class="built_in">touch</span> /var/named/chroot/var/named/data/named_stats.txt</span><br><span class="line"><span class="built_in">touch</span> /var/named/chroot/var/named/data/named_mem_stats.txt</span><br><span class="line"><span class="built_in">touch</span> /var/named/chroot/var/named/data/named.run</span><br><span class="line"><span class="built_in">mkdir</span> /var/named/chroot/var/named/dynamic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件属主和属组</span></span><br><span class="line"><span class="built_in">chown</span> -R named:named /var/named/chroot/var/named</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start named-chroot</span><br></pre></td></tr></table></figure>
<h2 id="构建缓存域名服务器"><a href="#构建缓存域名服务器" class="headerlink" title="构建缓存域名服务器"></a>构建缓存域名服务器</h2><h3 id="案例介绍"><a href="#案例介绍" class="headerlink" title="案例介绍"></a>案例介绍</h3><ul>
<li>缓存域名服务器的IP地址为192.168.142.128。</li>
<li>​ 局域网内的PC机将首选DNS服务器设为192.168.142.128。</li>
<li>缓存域名服务器能够访问Internet中的其他DNS服务器。</li>
<li>​ 负责处理局域网PC机的DNS解析请求，并缓存查询结果。</li>
</ul>
<h3 id="基本步骤："><a href="#基本步骤：" class="headerlink" title="基本步骤："></a>基本步骤：</h3><p>​ 1.建立named.conf主配置文件，通过根域或者转发器机制指定解析源；<br>​ 2.确认建立named.ca根区域数据文件，若使用转发器机制则无需此步骤；<br>​ 3.启动named服务；<br>​ 4.验证缓存域名服务器；</p>
<h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 1.修改主配置文件</span></span><br><span class="line">[root@wpt ~]# vim /var/named/chroot/etc/named.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定数据文件的存放目录 默认无需修改</span></span><br><span class="line">directory 	<span class="string">&quot;/var/named&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定服务器监听的地址和端口</span></span><br><span class="line">listen-on port 53       &#123; 127.0.0.1; 192.168.142.128; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定允许内网网段地址主机可以查询授权区域数据</span></span><br><span class="line">allow-query					&#123; 192.168.142.0/24; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 哪些主机查询非授权区域记录时，为其做递归</span></span><br><span class="line">allow-query-cache       &#123; 192.168.142.0/24; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启递归 默认为开启</span></span><br><span class="line"><span class="comment"># 如果你要建立一个 授权域名服务器 服务器, 那么不要开启 recursion（递归） 功能。</span></span><br><span class="line"><span class="comment"># 如果你要建立一个 递归 DNS 服务器, 那么需要开启recursion 功能。</span></span><br><span class="line"><span class="comment"># 如果你的递归DNS服务器有公网IP地址, 你必须开启访问控制功能，</span></span><br><span class="line"><span class="comment"># 只有那些合法用户才可以发询问. 如果不这么做的话，那么你的服</span></span><br><span class="line"><span class="comment"># 服务就会受到DNS 放大攻击。实现BCP38将有效抵御这类攻击。</span></span><br><span class="line">recursion <span class="built_in">yes</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">########################使用转发器#################################</span></span><br><span class="line"><span class="comment"># 如果不使用根区域，也可以选择设置转发器，即可以指向另外一个DNS服务器。</span></span><br><span class="line"><span class="comment"># forward 可以是first，也可以是only</span></span><br><span class="line"><span class="comment"># forward first设置优先使用forwarders DNS服务器做域名解析，如果查询不到再使用本地DNS服务器做域名解析。</span></span><br><span class="line"><span class="comment"># forward only设置只使用forwarders DNS服务器做域名解析，如果查询不到则返回DNS客户端查询失败。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 options&#123;&#125;; 中加入以下内容</span></span><br><span class="line"><span class="comment"># forward only;</span></span><br><span class="line"><span class="comment"># forwarders &#123;8.8.8.8&#125;;</span></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 2. 配置根区域 这样服务器不知道域名记录时，就去找根DNS服务器 在区域文件目录中必须存在&quot;/var/named/named.ca&quot;这个文件，里面记录了根DNS服务器的地址（共13个）</span></span><br><span class="line"><span class="built_in">cat</span> /var/named/chroot/var/named/named.ca | grep -v <span class="string">&#x27;^;&#x27;</span>|grep -v <span class="string">&#x27;^$&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 3.检查配置文件语法</span></span><br><span class="line">named-checkconf /var/named/chroot/etc/named.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">### 180错误解决</span></span><br><span class="line">dnssec-keygen -a HMAC-MD5 -b 128 -n HOST <span class="string">&quot;test_key&quot;</span></span><br><span class="line">[root@localhost ~]# dnssec-keygen -a HMAC-MD5 -b 128 -n HOST <span class="string">&quot;test_key&quot;</span></span><br><span class="line">Ktest_key.+157+09104</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> Ktest_key.+157+09104.key</span><br><span class="line">test_key. IN KEY 512 3 157 XkByzMnhtuSq4IItAzKb3w==</span><br><span class="line"><span class="comment">## 复制XkByzMnhtuSq4IItAzKb3w== 然后修改文件key 大概在180行左右</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 重启服务</span></span><br><span class="line">systemctl restart named-chroot</span><br><span class="line"></span><br><span class="line"><span class="comment">##	测试前把双方的防火墙都关掉，或者在服务器端配置dns服务</span></span><br><span class="line">[root@wpt ~]# firewall-cmd --add-service=dns</span><br><span class="line"><span class="comment">##	测试时把客户端的dns地址解析改为服务端的，文件在/etc/resolv.conf下 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line"><span class="comment">##################客户端验证是否可以解析#########################</span></span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line"><span class="comment"># 5 安装客户端命令行工具</span></span><br><span class="line">yum install bind-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6 配置首选DNS为192.168.215.3</span></span><br><span class="line"><span class="built_in">cp</span> /etc/resolv.conf /etc/resolv.conf.bak</span><br><span class="line">vim /etc/resolv.conf</span><br><span class="line"><span class="comment"># 修改以下内容</span></span><br><span class="line">nameserver 192.168.215.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7 解析域名</span></span><br><span class="line"><span class="comment"># 第一台客户端解析会慢一些，第二台客户端解析相同域名会很快，因为有了缓存。</span></span><br><span class="line">nslookup www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#eg:</span></span><br><span class="line">root@experiment2 ~# nslookup www.baidu.com</span><br><span class="line">Server:		192.168.142.128</span><br><span class="line">Address:	192.168.142.128#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.baidu.com	canonical name = www.a.shifen.com.</span><br><span class="line">Name:	www.a.shifen.com</span><br><span class="line">Address: 39.156.66.18</span><br><span class="line">Name:	www.a.shifen.com</span><br><span class="line">Address: 39.156.66.14</span><br></pre></td></tr></table></figure>
<h2 id="构建主域名服务器"><a href="#构建主域名服务器" class="headerlink" title="构建主域名服务器"></a>构建主域名服务器</h2><h3 id="案例介绍-1"><a href="#案例介绍-1" class="headerlink" title="案例介绍"></a>案例介绍</h3><ul>
<li>负责abc.com域的解析</li>
<li>网站服务器 <a href="http://www.abc.com，IP地址为192.168.142.10">www.abc.com，IP地址为192.168.142.10</a></li>
<li>邮件服务器 mail.abc.com,IP地址为192.168.142.20</li>
<li>在线视频服务器 video.abc.com，IP地址为192.168.142.30</li>
<li>主域名服务器 ns1.abc.com ，IP地址为192.168.142.3</li>
<li>从域名服务器 ns2.abc.com，IP地址为192.168.142.5</li>
</ul>
<h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><ol>
<li>确认本机网络地址、主机映射、默认DNS服务器地址。</li>
<li>建立主配置文件named.conf。</li>
<li>建立正、反向区域数据文件。</li>
<li>启动named服务或重载配置。</li>
<li>验证主域名服务器。</li>
</ol>
<h3 id="实现方案-1"><a href="#实现方案-1" class="headerlink" title="实现方案"></a>实现方案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 1 确认本机网络地址、主机映射、DNS服务器地址</span></span><br><span class="line"><span class="comment"># 为了提高域名解析效率，将两个DNS服务器的地址映射直接写入到/etc/hosts文件中</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">192.168.142.128	ns1.abc.com		ns1</span><br><span class="line">192.168.142.6	ns2.abc.com		ns2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定两个DNS服务器的地址为首选和备份DNS</span></span><br><span class="line">vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入以下内容</span></span><br><span class="line"><span class="comment"># search 定义域名的搜索列表</span></span><br><span class="line">nameserver 192.168.142.128</span><br><span class="line">nameserver 192.168.142.6</span><br><span class="line"></span><br><span class="line"><span class="comment">### 2 修改主配置文件</span></span><br><span class="line">vim /var/named/chroot/etc/named.conf</span><br><span class="line"><span class="comment"># 在 zone &quot;.&quot; IN 前面加入以下内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个zone关键字定义一个域区</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># type类型有三种，它们分别是master,slave和hint它们的含义分别是：</span></span><br><span class="line"><span class="comment"># master:表示定义的是主域名服务器</span></span><br><span class="line"><span class="comment"># slave [sleɪv]:表示定义的是辅助域名服务器</span></span><br><span class="line"><span class="comment"># hint [hɪnt]暗示:表示是互联网中根域名服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file 指定具体存放DNS记录的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># allow-transfer [trænsˈfɜːr , ˈtrænsfɜːr]指定哪些主机可以从服务器上接收区域传输,未指定将允许传说到所有的主机</span></span><br><span class="line">zone <span class="string">&quot;abc.com&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;abc.com.zone&quot;</span>;</span><br><span class="line">        allow-transfer &#123;192.168.142.6;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment"># 定义一个IP为192.168.215.*的反向域区 </span></span><br><span class="line">zone <span class="string">&quot;142.168.192.in-addr.arpa&quot;</span> &#123;</span><br><span class="line">        <span class="built_in">type</span> master;</span><br><span class="line">        file <span class="string">&quot;192.168.142.arpa.zone&quot;</span>;</span><br><span class="line">        allow-transfer &#123;192.168.142.6;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3 建立正向区域数据文件</span></span><br><span class="line"><span class="built_in">cp</span> -p /var/named/named.localhost /var/named/chroot/var/named/abc.com.zone</span><br><span class="line">vim /var/named/chroot/var/named/abc.com.zone</span><br><span class="line"><span class="comment"># 修改以下内容</span></span><br><span class="line"><span class="comment"># “@”表示当前的DNS区域名，相当于“abc.com.”	</span></span><br><span class="line"><span class="comment"># $TTL（Time To Live，生存时间）记录</span></span><br><span class="line"><span class="comment"># SOA（Start Of Authority[əˈθɔːrəti]，授权信息开始）记录</span></span><br><span class="line"><span class="comment"># 分号“;” 开始的部分表示注释信息</span></span><br><span class="line"><span class="comment"># NS 域名服务器（Name Server）：记录当前区域的DNS服务器的主机地址</span></span><br><span class="line"><span class="comment"># MX 邮件交换（Mail  Exchange[ɪksˈtʃeɪndʒ]）：记录当前区域的邮件服务器的主机地址，数字10表示优先级。</span></span><br><span class="line"><span class="comment"># A 地址（Address）：记录正向解析条目，只用在正向解析区域中</span></span><br><span class="line"><span class="comment"># CNAME 别名（Canonical[kəˈnɑːnɪkl] Name）：记录某一个正向解析条目的其他名称</span></span><br><span class="line"><span class="comment"># PTR   指针（Point）记录，只用在反向解析区域中</span></span><br><span class="line"><span class="variable">$TTL</span> 1D</span><br><span class="line">@       IN SOA  abc.com. admin.abc.com. (</span><br><span class="line">                                2020112901      ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">@       IN      NS      ns1.abc.com.</span><br><span class="line">        IN      NS      ns2.abc.com.</span><br><span class="line">                MX      10      mail.abc.com.</span><br><span class="line">www     IN      A       192.168.142.10</span><br><span class="line">mail    IN      A       192.168.142.20</span><br><span class="line">video   IN      A       192.168.142.30</span><br><span class="line">ns1     IN      A       192.168.142.128</span><br><span class="line">ns2     IN      A       192.168.142.6</span><br><span class="line"><span class="comment"># 验证区域数据文件</span></span><br><span class="line"><span class="comment"># named-checkzone zonename filename</span></span><br><span class="line">named-checkzone abc.com /var/named/chroot/var/named/abc.com.zone</span><br><span class="line"></span><br><span class="line"><span class="comment">### 4 建立反向区域数据文件</span></span><br><span class="line"><span class="built_in">cd</span> /var/named/chroot/var/named/</span><br><span class="line"><span class="built_in">cp</span> -p abc.com.zone 192.168.142.arpa.zone</span><br><span class="line">vim 192.168.142.arpa.zone</span><br><span class="line"><span class="variable">$TTL</span> 1D</span><br><span class="line">@       IN SOA  abc.com. admin.abc.com. (</span><br><span class="line">                                2020112901      ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">@       IN      NS      ns1.abc.com.</span><br><span class="line">        IN      NS      ns2.abc.com.</span><br><span class="line">10      IN      PTR www.abc.com.</span><br><span class="line">20      IN      PTR mail.abc.com.</span><br><span class="line">30      IN      PTR study.abc.com.</span><br><span class="line">128     IN      PTR ns1.abc.com.</span><br><span class="line">6       IN      PTR ns2.abc.com.</span><br><span class="line"><span class="comment"># 验证区域数据文件</span></span><br><span class="line">named-checkzone 215.168.192.in-addr.arpa 192.168.142.arpa.zone</span><br><span class="line"><span class="comment"># 5 重启服务</span></span><br><span class="line">systemctl restart named-chroot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line"><span class="comment">##################客户端验证是否可以解析#########################</span></span><br><span class="line"><span class="comment">###############################################################</span></span><br><span class="line">[root@wpt named]# nslookup</span><br><span class="line">&gt; www.abc.com</span><br><span class="line">Server:		192.168.142.128</span><br><span class="line">Address:	192.168.142.128#53</span><br><span class="line"></span><br><span class="line">Name:	www.abc.com</span><br><span class="line">Address: 192.168.142.10</span><br><span class="line">&gt; mail.abc.com</span><br><span class="line">Server:		192.168.142.128</span><br><span class="line">Address:	192.168.142.128#53</span><br><span class="line"></span><br><span class="line">Name:	mail.abc.com</span><br><span class="line">Address: 192.168.142.20</span><br><span class="line">&gt; 192.168.142.30</span><br><span class="line">30.142.168.192.in-addr.arpa	name = study.abc.com.</span><br></pre></td></tr></table></figure>
<h2 id="构建从域名服务器"><a href="#构建从域名服务器" class="headerlink" title="构建从域名服务器"></a>构建从域名服务器</h2><p>为了降低主域名服务器的压力，可以构建从域名服务器，不仅可以负载分担，还可以起到备份作用。</p>
<h3 id="基本步骤-1"><a href="#基本步骤-1" class="headerlink" title="基本步骤"></a>基本步骤</h3><ol>
<li>确认本机网络地址、主机映射、默认DNS服务器地址。</li>
<li>建立主配置文件named.conf。</li>
<li>启动named服务，查看区域数据文件是否下载成功。</li>
<li>验证从域名服务器。</li>
</ol>
<h2 id="实现方案-2"><a href="#实现方案-2" class="headerlink" title="实现方案"></a>实现方案</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1 安装</span></span><br><span class="line">yum install <span class="built_in">bind</span> bind-chroot bind-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 启动服务</span></span><br><span class="line">systemctl start named-chroot.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 确认本机网络地址、主机映射、DNS服务器地址</span></span><br><span class="line"><span class="comment"># 为了提高域名解析效率，将两个DNS服务器的地址映射直接写入到/etc/hosts文件中</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">192.168.142.128	ns1.abc.com		ns1</span><br><span class="line">192.168.142.6	ns2.abc.com		ns2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定两个DNS服务器的地址为首选和备份DNS</span></span><br><span class="line">vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入以下内容</span></span><br><span class="line"><span class="comment"># search 定义域名的搜索列表</span></span><br><span class="line">nameserver 192.168.142.128</span><br><span class="line">nameserver 192.168.142.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 建立主配置文件</span></span><br><span class="line"><span class="built_in">cd</span> /var/named/chroot/</span><br><span class="line">vim /etc/named.conf</span><br><span class="line"><span class="comment"># 修改如下配置</span></span><br><span class="line">listen-on port 53	&#123; 127.0.0.1; 192.168.142.6; &#125;;</span><br><span class="line">zone <span class="string">&quot;abc.com&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> slave;</span><br><span class="line">        file <span class="string">&quot;slaves/abc.com.zone&quot;</span>;</span><br><span class="line">        masters &#123;192.168.142.128;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone <span class="string">&quot;142.168.192.in-addr.arpa&quot;</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> slave;</span><br><span class="line">        file <span class="string">&quot;slaves/192.168.142.arpa.zone&quot;</span>;</span><br><span class="line">        masters &#123;192.168.142.128;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 关闭两个机器的防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6 重启服务</span></span><br><span class="line">systemctl restart named-chroot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7 查看是否同步成功</span></span><br><span class="line">ll /var/named/chroot/var/named/slaves/</span><br><span class="line"></span><br><span class="line">-rw-r--r--. 1 named named 362 Nov 23 22:35 abc.com.zone</span><br><span class="line"><span class="comment"># 8 使用从域名服务器进行验证</span></span><br><span class="line">root@experiment2 /v/n/chroot# nslookup</span><br><span class="line">&gt; www.abc.com</span><br><span class="line">Server:		192.168.142.6</span><br><span class="line">Address:	192.168.142.6#53</span><br><span class="line"></span><br><span class="line">Name:	www.abc.com</span><br><span class="line">Address: 192.168.142.20</span><br></pre></td></tr></table></figure>
<h2 id="nslookup命令详解"><a href="#nslookup命令详解" class="headerlink" title="nslookup命令详解"></a>nslookup命令详解</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###   nslookup命令详解</span></span><br><span class="line">nslookup -qt=<span class="built_in">type</span> domain [dns-server]</span><br><span class="line"></span><br><span class="line">其中，<span class="built_in">type</span>可以是以下这些类型：</span><br><span class="line"></span><br><span class="line">A 地址记录</span><br><span class="line">AAAA 地址记录</span><br><span class="line">AFSDB Andrew文件系统数据库服务器记录</span><br><span class="line">ATMA ATM地址记录</span><br><span class="line">CNAME 别名记录</span><br><span class="line">HINFO 硬件配置记录，包括CPU、操作系统信息</span><br><span class="line">ISDN 域名对应的ISDN号码</span><br><span class="line">MB 存放指定邮箱的服务器</span><br><span class="line">MG 邮件组记录</span><br><span class="line">MINFO 邮件组和邮箱的信息记录</span><br><span class="line">MR 改名的邮箱记录</span><br><span class="line">MX 邮件服务器记录</span><br><span class="line">NS 名字服务器记录</span><br><span class="line">PTR 反向记录</span><br><span class="line">RP 负责人记录</span><br><span class="line">RT 路由穿透记录</span><br><span class="line">SRV TCP服务器信息记录</span><br><span class="line">TXT 域名对应的文本信息</span><br><span class="line">X25 域名对应的X.25地址记录</span><br><span class="line"><span class="comment">###例如</span></span><br><span class="line">[root@localhost ~]# nslookup -qt=mx baidu.com 8.8.8.8</span><br></pre></td></tr></table></figure>
<h2 id="国内常用的DNS服务器"><a href="#国内常用的DNS服务器" class="headerlink" title="国内常用的DNS服务器"></a>国内常用的DNS服务器</h2><h3 id="114DNS"><a href="#114DNS" class="headerlink" title="114DNS"></a>114DNS</h3><p>114DNS开启DNS高可靠服务时代的大幕。114DNS开始同时为公众提供高速、稳定、可信的DNS递归解析服务；为网站提供强大抗攻击能力的权威智能DNS解析服务；为ISP提供可靠的DNS灾备及外包服务，作为国内用户量最大的老牌DNS，访问速度快，各地区设有节点，负载各运营商用户，DNS防劫持能力，自然也是名列前茅。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：114.114.114.114</li>
<li><strong>备选</strong>：114.114.114.115</li>
</ol>
<p>2017公共DNS服务器地址评估—DNS推荐</p>
<h3 id="DNSPod-DNS"><a href="#DNSPod-DNS" class="headerlink" title="DNSPod DNS"></a>DNSPod DNS</h3><p>DNSPod创始于2006年3月，是中国最大的第三方域名服务商，全球排名第四位。DNSPod是国内最早提供免费智能DNS产品的网站,致力于为各类网站提供高质量的电信、网通、教育网双线或者三线智能DNS免费解析，作为114DNS竞争对手之一，无论是访问速度，还是各地区节点覆盖率以及防劫持能力都是顶级的。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：119.29.29.29</li>
<li><strong>备选</strong>：182.254.116.116</li>
</ol>
<p>2017公共DNS服务器地址评估—DNS推荐</p>
<h3 id="阿里-DNS"><a href="#阿里-DNS" class="headerlink" title="阿里 DNS"></a>阿里 DNS</h3><p>阿里公共DNS是阿里巴巴集团推出的DNS递归解析系统，作为国内最大的互联网基础服务提供商，阿里巴巴在继承多年优秀技术的基础上，通过提供性能优异的公共DNS服务，为广大互联网用户提供最可靠的面向互联网用户提供“快速”、“稳定”、“智能”的免费DNS递归解析服务。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：223.5.5.5</li>
<li><strong>备选</strong>：223.6.6.6</li>
</ol>
<p>2017公共DNS服务器地址评估—DNS推荐</p>
<h3 id="百度-DNS"><a href="#百度-DNS" class="headerlink" title="百度 DNS"></a>百度 DNS</h3><p>百度开放DNS主要面向企业，旨在集结行业力量，以开放的方式共同打造一个全球最大的、稳定的、高效的、纯净的公共DNS平台，作为核心基础设施服务于整个互联网，百度DNS拥有一流基础设施和强大技术实力,为用户提供免费的DNS服务。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：180.76.76.76</li>
<li><strong>备选</strong>：暂未公布</li>
</ol>
<p>2017公共DNS服务器地址评估—DNS推荐</p>
<h3 id="CNNIC-SDNS"><a href="#CNNIC-SDNS" class="headerlink" title="CNNIC SDNS"></a>CNNIC SDNS</h3><p>SDNS已在全球部署了多个节点，提供智能的、弹性的平台支持能力，可随用户的需求而变化。每节点建设在运营商4A、5A级机房，每节点配备服务器集群，多线路出口，节点之间相互冗余备份。通过多线路，确保每一次查询的全局路由最优化，最大程度上使用户解析就近响应。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：1.2.4.8</li>
<li><strong>备选</strong>：202.98.0.68</li>
</ol>
<p>2017公共DNS服务器地址评估—DNS推荐</p>
<h3 id="DNS派"><a href="#DNS派" class="headerlink" title="DNS派"></a>DNS派</h3><p>DNS派拥有全球最领先的云 DNS 集群技术,领先的分布式云服务，遍布全国的解析服务器，多年 DNS 领域专业研究，DNS派拥有全球最领先的云DNS集群技术，领先的分布式云服务，遍布全国的解析服务器，能为域名的权威解析提供强有力的支持。<br><strong>DNS 服务器 IP 地址：</strong></p>
<ol>
<li><strong>首选</strong>：101.226.4.6</li>
<li><strong>备选</strong>：218.30.118.6</li>
</ol>
<h3 id="附：国外常用DNS服务器"><a href="#附：国外常用DNS服务器" class="headerlink" title="附：国外常用DNS服务器"></a>附：国外常用DNS服务器</h3><ol>
<li><strong>Google Public DNS</strong> （8.8.8.8， 8.8.4.4）</li>
<li><strong>OpenDNS</strong> （208.67.222.222， 208.67.220.220）</li>
<li><strong>OpenDNS Family</strong> （208.67.222.123， 208.67.220.123）</li>
<li><strong>Dyn DNS</strong> （216.146.35.35， 216.146.36.36）</li>
<li><strong>Comodo Secure</strong> (8.26.56.26， 8.20.247.20)</li>
<li><strong>UltraDNS</strong> （156.154.70.1， 156.154.71.1）</li>
<li><strong>Norton ConnectSafe</strong> (199.85.126.10, 199.85.127.10)</li>
</ol>
<p>本文部分内容摘自：<a href="https://blog.csdn.net/weixin_49912759/article/details/110419273%E5%8F%8Ahttps://blog.csdn.net/weixin_43634280/article/details/84361024">https://blog.csdn.net/weixin_49912759/article/details/110419273及https://blog.csdn.net/weixin_43634280/article/details/84361024</a></p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>一起来看看华为云的裸金属服务器</title>
    <url>/2025/01/13/2025011308/</url>
    <content><![CDATA[<h2 id="裸金属服务器是什么？"><a href="#裸金属服务器是什么？" class="headerlink" title="裸金属服务器是什么？"></a><strong>裸金属服务器是什么？</strong></h2><p>裸金属服务器的英文名是Bare Metal Server，BMS。其实就是一台物理服务器，没错就是它：</p>
<span id="more"></span>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/a9ef48f85b4b54f95f326fd36146d8e6.png) -->
<script> document.write('<img src="'+ imgurl +'1736739333/a9ef48f85b4b54f95f326fd36146d8e6.png">'); </script><br>

<h2 id="什么叫裸金属服务器呢？"><a href="#什么叫裸金属服务器呢？" class="headerlink" title="什么叫裸金属服务器呢？"></a><strong>什么叫裸金属服务器呢？</strong></h2><p>其实这个名称是在公有云服务中出现的，公有云中如果提供的是一台虚拟机，一般叫做云服务器（或者云虚拟主机），如果提供的是一台物理机，一般叫做裸金属服务器。所以裸金属服务器的叫法是为了和云服务器做区分。</p>
<p>裸金属服务器（Bare Metal Server，BMS）是一款兼具虚拟机弹性和物理机性能的计算类服务，为您和您的企业提供专属的云上物理服务器，为核心数据库、关键应用系统、高性能计算、大数据等业务提供卓越的计算性能以及数据安全。租户可灵活申请，按需使用。</p>
<p>裸金属服务器的开通是自助完成的，您只需要指定具体的服务器类型、镜像、所需要的网络配置等，即可在30min内获得所需的裸金属服务器。服务器供应、运维工作交由华为云，您可以专注于业务创新。</p>
<h2 id="产品架构"><a href="#产品架构" class="headerlink" title="产品架构"></a><strong>产品架构</strong></h2><p>通过和其他服务组合，裸金属服务器可以实现计算、存储、网络、镜像安装等功能：</p>
<ul>
<li>裸金属服务器在不同可用区中部署（可用区之间通过内网连接），部分可用区发生故障后不会影响同一区域内的其他可用区。</li>
<li>可以通过虚拟私有云建立专属的网络环境，设置子网、安全组，并通过弹性公网IP实现外网链接（需带宽支持）。</li>
<li>通过镜像服务，可以对裸金属服务器安装镜像，也可以通过私有镜像批量创建裸金属服务器，实现快速的业务部署。</li>
<li>通过云硬盘服务实现数据存储，并通过云硬盘备份服务实现数据的备份和恢复。</li>
<li>云监控是保持裸金属服务器可靠性、可用性和性能的重要部分，通过云监控，用户可以观察裸金属服务器资源。</li>
<li>云备份提供对云硬盘和裸金属服务器的备份保护服务，支持基于快照技术的备份服务，并支持利用备份数据恢复服务器和磁盘的数据。</li>
</ul>
<p><strong>图1 BMS产品架构</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5c8c1e5a075b012da4235eb9fd555608.png) -->
<script> document.write('<img src="'+ imgurl +'1736739333/5c8c1e5a075b012da4235eb9fd555608.png">'); </script><br>

<h2 id="裸金属服务器与物理机、虚拟机的功能对比"><a href="#裸金属服务器与物理机、虚拟机的功能对比" class="headerlink" title="裸金属服务器与物理机、虚拟机的功能对比"></a>裸金属服务器与物理机、虚拟机的功能对比</h2><p>裸金属服务器与物理机、虚拟机的对比如表1所示。其中，Y表示支持，N表示不支持，N&#x2F;A表示不涉及。</p>
<blockquote>
<p><strong>说明：</strong><br>无特性损失、无性能损失：裸金属服务器具备物理机的一切特性和优势，您的应用可以直接访问裸金属服务器的处理器和内存，无任何虚拟化开销。</p>
</blockquote>
<p><strong>表1 特性对比</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/86c8dd1d414e9c2d959e62bb77ca6292.png) -->
<script> document.write('<img src="'+ imgurl +'1736739333/86c8dd1d414e9c2d959e62bb77ca6292.png">'); </script><br>

<h2 id="裸金属的缺点"><a href="#裸金属的缺点" class="headerlink" title="裸金属的缺点"></a>裸金属的缺点</h2><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/f81586ce770e3710b1657a54660a66a0.png) -->
<script> document.write('<img src="'+ imgurl +'1736739333/f81586ce770e3710b1657a54660a66a0.png">'); </script><br>

<p><strong>常用概念</strong></p>
<ul>
<li>云上的物理计算资源，即运行在华为云数据中心的裸金属服务器，请查看<a href="https://support.huaweicloud.com/productdesc-bms/bms_01_0003.html#bms_01_0003__section19818434175418?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">实例</a>。</li>
<li>描述裸金属服务器所在的数据中心，请查看<a href="https://support.huaweicloud.com/productdesc-bms/bms_01_0004.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">区域和可用区</a>。</li>
<li>裸金属服务器由不同的CPU、内存、存储和网络等组成，请查看<a href="https://support.huaweicloud.com/productdesc-bms/bms_01_0003.html#bms_01_0003__section998171914438?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">实例类型</a>。</li>
<li>裸金属服务器运行环境的模板，其中包含了特定的操作系统和一些预装的应用软件，请查看<a href="https://support.huaweicloud.com/productdesc-bms/bms_01_0002.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">镜像</a>。</li>
<li>裸金属服务器网络类型及各自使用场景，请查看<a href="https://support.huaweicloud.com/productdesc-bms/zh-cn_topic_0069070105.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">网络</a>。</li>
<li>实例对内和对外的服务地址，即私有IP地址和<a href="https://support.huaweicloud.com/usermanual-bms/bms_01_0011.html?fromacct=c76cea9f-f106-4938-a195-0df9b712c327&utm_source=V1g3MDY4NTY=&utm_medium=cps&utm_campaign=201905">弹性公网IP地址</a>。</li>
</ul>
<h2 id="访问方式"><a href="#访问方式" class="headerlink" title="访问方式"></a><strong>访问方式</strong></h2><p>公有云提供了Web化的服务管理系统（即管理控制台）和基于HTTPS请求的API（Application Programming Interface）管理方式。</p>
<ul>
<li>API方式<br>如果用户需要将云平台上的裸金属服务器集成到第三方系统，用于二次开发，请使用API方式访问裸金属服务器。</li>
<li>管理控制台方式<br>其他相关操作，请使用管理控制台方式访问裸金属服务器。如果用户已注册公有云，可直接登录管理控制台，从主页选择“计算 &gt; 裸金属服务器”。</li>
</ul>
<h2 id="适用于场景"><a href="#适用于场景" class="headerlink" title="适用于场景"></a>适用于场景</h2><ul>
<li>对安全和监管高要求的场景<br>金融、证券等行业对业务部署的合规性，以及某些客户对数据安全有苛刻的要求。采用裸金属服务器部署，能够确保资源独享、数据隔离、可监管可追溯。</li>
<li>高性能计算场景<br>超算中心、基因测序等高性能计算场景，处理的数据量大，对服务器的计算性能、稳定性、实时性等要求很高，裸金属服务器可以满足高性能计算的需求。</li>
<li>核心数据库场景<br>某些关键的数据库业务不能部署在虚拟机上，必须通过资源专享、网络隔离、性能有保障的物理服务器承载。裸金属服务器为用户提供独享的高性能的物理服务器，可以满足此种场景下的业务需求。</li>
<li>移动应用场景<br>围绕移动应用尤其是手机游戏的开发、测试、上线、运营，借助鲲鹏系列服务器对终端设备的兼容性优势，以鲲鹏系列裸金属服务器为基础打造一站式整体解决方案。</li>
</ul>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>华为云</tag>
      </tags>
  </entry>
  <entry>
    <title>云基础知识介绍及云组件部署</title>
    <url>/2025/01/13/2025011309/</url>
    <content><![CDATA[<h1 id="云基础知识介绍及云组件部署"><a href="#云基础知识介绍及云组件部署" class="headerlink" title="云基础知识介绍及云组件部署"></a>云基础知识介绍及云组件部署</h1><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>随着业务的发展，各类业务都有上云的需求，大家在工作中也会经常遇到各类公有云的场景，其实各大厂商的公有云功能都大相径庭。相信很多人有疑问，如何在公有云上部署相关云组件和安全产品呢？本着共同学习的心态，耗时半月，才有了这篇文章，希望能让更多的伙伴们学习和掌握阿里云上的基本操作和部署组件。</p>
<span id="more"></span>

<p>本文分为两个篇章，基础知识篇和创建部署篇，来详细讲解。</p>
<h2 id="基础知识篇"><a href="#基础知识篇" class="headerlink" title="基础知识篇"></a>基础知识篇</h2><ul>
<li><em><strong>*阿里云简介：*</strong></em></li>
</ul>
<p>阿里巴巴旗下云计算品牌，创立于2009年，2010年，阿里云对外开放其在云计算领域的技术服务能力。用户通过阿里云，用互联网的方式即可远程获取海量计算、存储资源和大数据处理能力。</p>
<ul>
<li><strong>阿里云产品有那些？</strong></li>
</ul>
<p>阿里云产品体系分为6大类，分别为：存储与内容分发服务、弹性计算服务、数据存储及计算服务、大规模计算服务、应用服务还有安全与管理服务。</p>
<p>和我们结合最紧密的产品为弹性计算服务，特别是云服务器（Elastic Compute Service，ECS），下面统成为ECS。</p>
<ul>
<li><strong>什么是ECS?</strong></li>
</ul>
<p>ECS是一种高可用、高性能、可弹性伸缩的服务，它以阿里云自主研发的飞天分布式计算系统为基础，基于先进的虚拟化、分布式存储等云计算技术，将计算和存储的基础资源整合在一起，并以Web方式为用户提供计算能力。处理能力可弹性伸缩的计算服务，管理方式比物理服务器更简单高效。无需提前采购投入，用户可以根据业务的需要，随时创建、释放任意多台云服务器实例。</p>
<ul>
<li><strong>地域的概念：</strong></li>
</ul>
 <!-- 地是指ECS实例所在的物理位置![img](https://i-blog.csdnimg.cn/blog_migrate/baee0c79e33124bf112d4b5098d3e3cc.png) -->
 <script> document.write('<img src="'+ imgurl +'1736739575/baee0c79e33124bf112d4b5098d3e3cc.png">'); </script><br>

<p>注意点：地域内的 ECS 实例内网间是可以互通的，不同地域之间的 ECS 实例内网不互通。</p>
<ul>
<li><strong>可用区的概念：</strong></li>
</ul>
<p>是指同一地域内，电力和网络互相独立的物理区域。</p>
<p>同一可用区内的ECS实例网络延时更小，并且在同一地域内可用区与可用区之间内网互通，可用区之间能做到故障隔离。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/a5ce259cac32ba919df834cf51b1c54a.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/a5ce259cac32ba919df834cf51b1c54a.png">'); </script><br>

<ul>
<li><strong>阿里云网络是怎么样的？</strong></li>
</ul>
<p>阿里云网络分为两种网络经典网络和专有网络</p>
<p>经典网络：IP地址由阿里云统一分配，配置简便，使用方便，适合对操作易用性要求比较高、需要快速使用ECS的用户。</p>
<p> 专有网络（重点了解）：VirtualPrivate Cloud，简称VPC，逻辑隔离的私有网络，用户可以自定义网络拓扑和IP地址，支持通过专线连接。适合对网络管理熟悉了解的用户。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/229f20cf8476ea528ba0b3d9c744abd3.png)    -->
<script> document.write('<img src="'+ imgurl +'1736739575/229f20cf8476ea528ba0b3d9c744abd3.png">'); </script><br>

<p> 注意：</p>
<p> 1、SSL-cloud可以运行在经典网络和专有网络，而AF-cloud和WOC-cloud只能运行在专有网络上。</p>
<p> 2、网络类型仅是ECS产品功能上区分，与运营商公网接入网络质量无关，任何网络类型的运营商接入均为BGP线路。</p>
<p> 经典网路和专有网络的对比如下：</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/c47c7dfbe0001d805b069179d44a01c5.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/c47c7dfbe0001d805b069179d44a01c5.png">'); </script><br>

<ul>
<li><strong>阿里云上网络IP地址规划是怎么样的？</strong></li>
</ul>
<p>目前经典网络 IP 地址由阿里云统一分配，包括私网IP和公网IP。私网IP用于与实例之间互访，公网 IP 用于实例与 Internet 之间互访，也可以用于实例与云服务之间互访。公网IP的出口带宽需要根据带宽大小收费。</p>
<p>VPC专有网络的内网IP地址由用户自主规划，专有网络内的实例默认不会被分配公网IP，如果实例需要使用公网IP，可以另外申请弹性公网IP绑定到实例上使用。</p>
<p> <strong>可否深入讲解一下弹性公网IP—EIP？</strong></p>
<p> 弹性公网IP是可以独立申请的公网IP地址，只能绑定在同一地域内专有网络类型的ECS实例上，可以使这台ECS实例具备公网通信的能力。</p>
<p> 用户可以根据需求使用EIP进一步实现以下场景：</p>
<p> 1、将这台ECS作为SNAT网关，为同VPC内其他实例提供公网访问能力；</p>
<p> 2、将这台ECS作为DNAT网关，使同VPC内其他实例可以面向公网提供服务；</p>
<p><strong>EIP的特性：</strong></p>
<p>1、一个ECS实例只能绑定一个弹性公网IP，一个弹性公网IP只能绑定一个ECS实例；</p>
<p> 2、EIP支持动态绑定和解绑，即可以把EIP从一个实例解绑后，绑定到另外一个实例上；</p>
<p>3、弹性公网IP是一种NAT IP。它实际位于阿里云的公网网关上，通过NAT方式映射到了被绑定ECS实例的私网网卡上。因此，绑定了弹性公网IP的ECS实例的网卡上，并不能看到这个IP地址。但这台实例可以直接使用这个IP进行公网通信。</p>
<p>4、绑定EIP后，ECS实例的默认路由会优先于所有的静态路由。</p>
<p>想要了解更多专有网络和弹性IP，链接如下：</p>
<p>VPC专有网络-FAQ</p>
<p><a href="http://help.aliyun.com/knowledge_detail/6716642.html?spm=5176.788315067.2.2.aW0d6H">http://help.aliyun.com/knowledge_detail&#x2F;6716642.html?spm&#x3D;5176.788315067.2.2.</a><a href="http://help.aliyun.com/knowledge_detail/6716642.html?spm=5176.788315067.2.2.aW0d6H">aW0d6H</a></p>
<p>弹性公网IP-FAQ</p>
<p><a href="http://help.aliyun.com/knowledge_detail/6716650.html?spm=5176.product8315065_vpc.3.1.Fzav3T">http://help.aliyun.com/knowledge_detail&#x2F;6716650.html?spm&#x3D;5176.product8315065_vpc.3.1.</a><a href="http://help.aliyun.com/knowledge_detail/6716650.html?spm=5176.product8315065_vpc.3.1.Fzav3T">Fzav3T</a></p>
<h2 id="创建部署篇"><a href="#创建部署篇" class="headerlink" title="创建部署篇"></a><strong>创建部署篇</strong></h2><p>下面我们来一步步详细讲解阿里云上如何部署日志审计&#x2F;数据库审计&#x2F;基线核查&#x2F;堡垒机等产品。  </p>
<p>（1） vpc网络的创建</p>
<p>  首先我们创建一个专有VPC网络</p>
  <!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/cb703a2578d41d758f82019adf7be66c.png) -->
  <script> document.write('<img src="'+ imgurl +'1736739575/cb703a2578d41d758f82019adf7be66c.png">'); </script><br>

<p> 填写对应的信息包括名称、网段、描述等基本信息</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/bfe1bfe965a93dd31194fa6fa58bedfc.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/bfe1bfe965a93dd31194fa6fa58bedfc.png">'); </script><br>

<p> 创建成功，如下图所示：</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/fccddf5c4de0bfa4ec7858429b3a2adb.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/fccddf5c4de0bfa4ec7858429b3a2adb.png">'); </script><br>

<p> 到此阿里云上专有网络VPC的创建就已经成功了，接下来我们讲解如何在阿里云上导入镜像。</p>
<p><strong>（2）镜像上传和导入</strong></p>
<p> 阿里云镜像分为四种：公共镜像、自定镜像、共享镜像、镜像市场。我们的产品在镜像市场有三款产品，分别是SSL&#x2F;IPSec VPN、虚拟化下一代防火墙、广域网优化WOC-Cloud&#x2F;加速IPSec VPN在镜像市场可以买到，另外的镜像需要使用镜像共享或者自定义镜像进行导入。</p>
  <!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/e936a5f2ea078b0e9916891a3c83a9f4.png) -->
  <script> document.write('<img src="'+ imgurl +'1736739575/e936a5f2ea078b0e9916891a3c83a9f4.png">'); </script><br>

<p>此次主要讲解自定义镜像和共享镜像</p>
<p>自定义镜像：</p>
<p> 镜像上传通常是上传到区域中的对象存储中，制作成私有镜像，然后在创建ECS云服务器的时候选择私有镜像创建云服务器使用，整个过程具体操作步骤如下：</p>
<p> 创建存储：登陆到阿里云平台，鼠标移动至左侧点击“对象存储OSS“，创建一个存储对象。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/6f3d33c63c3d709c28bbc9bc5e349271.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/6f3d33c63c3d709c28bbc9bc5e349271.png">'); </script><br>

<p> 为存储对象创建一个桶。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/bfe1bfe965a93dd31194fa6fa58bedfc.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/bfe1bfe965a93dd31194fa6fa58bedfc.png">'); </script><br>

<p> 上传镜像：</p>
<p> 方法一：通过web控制台进行上传</p>
<p> 优点：操作简单，便捷</p>
<p> 缺点：上传速度慢，不稳定，最大支持5GB的文件上传</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/c13baa14f6fd5c688bd1500b4bde6a88.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/c13baa14f6fd5c688bd1500b4bde6a88.png">'); </script><br>

<p>方法二</p>
<p> 通过OBS Browser+工具上传</p>
<p> 优点：上传速度快，稳定，支持超过5GB的大文件上传</p>
<p> 缺点：获取信息较多，较麻烦</p>
<p> 工具下载链接：</p>
<p><a href="https://help.aliyun.com/document_detail/61872.html?spm=a2c4g.11186623.2.18.64ef3554ph5ssK#concept-xmg-h33-wdb">https://help.aliyun.com/document_detail/61872.html?spm=a2c4g.11186623.2.18.64ef3554ph5ssK#concept-xmg-h33-wdb</a></p>
  <!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/3df26bf6a1d433ee04189f5d4b1e3cac.png) -->
  <script> document.write('<img src="'+ imgurl +'1736739575/3df26bf6a1d433ee04189f5d4b1e3cac.png">'); </script><br>

<p> Endpoint：默认（公有云）</p>
<p> Access Key ID和Secret Access Key获取方法：</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/429af96188b35b96d2047d73bfbfe5b5.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/429af96188b35b96d2047d73bfbfe5b5.png">'); </script><br>

<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/c35476299d91604e796299e703d11d9a.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/c35476299d91604e796299e703d11d9a.png">'); </script><br>

<p>  将Access Key ID和Secret Access Key填入即可</p>
<p>  访问路径：可以不填写，针对只访问对象存储中的某个桶或访问某个路径</p>
<p>  镜像上传：选择对应桶的名称—文件—添加文件上传即可</p>
<p>  接下来复制镜像的URL地址。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/acf84e6bb856cfeb8133f06b6ceb9217.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/acf84e6bb856cfeb8133f06b6ceb9217.png">'); </script><br>

<p>  创建自定义镜像，选择镜像—手动导入。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/8486e9a94a020bf51aca826b0c070299.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/8486e9a94a020bf51aca826b0c070299.png">'); </script><br>

<p>  填写基本信息即可</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/d3eefa6bf39c6ab151c65f54a5bbda62.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/d3eefa6bf39c6ab151c65f54a5bbda62.png">'); </script><br>



<p>  OSS Obiect地址：镜像的URL地址，系统平台如果选项中没有的话选择“other linux”即可其他的信息根据镜像系统和规格填写对应的格式即可，到这里，等待自定义镜像制作完成就可以了，后面创建ECS的时候镜像选择创建的私有镜像即可。</p>
<p><strong>共享镜像：</strong></p>
<p>  如果阿里云市场没有深信服LAS等产品镜像，请联系深信服工程师通过共享镜像的方式来提供。（深信服共享给客户）</p>
<p> 那么我们平时怎么共享给别人呢？</p>
<p> 这里还是会讲解一下如何共享，如下。</p>
<p> 分为两种场景：不同用户同一地域，和不同用户不同地域</p>
<p><strong>不同用户同一地域：</strong></p>
<p>  适用场景：不同账号相同地域之间进行镜像共享，不同的云平台通过共享的条件也有所不通</p>
<p>  阿里云：账号ID</p>
<p>  华为云：账号名：</p>
<p>  腾讯云：账号ID</p>
<p>  账号ID获取方法：（其他云平台的共享条件获取方法类似）</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/58ddc7f0c9d404d2c05f6f20077063bc.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/58ddc7f0c9d404d2c05f6f20077063bc.png">'); </script><br>

<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/5e0ae41e2d70456128a56e85f61345ae.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/5e0ae41e2d70456128a56e85f61345ae.png">'); </script><br>

<p> 镜像共享操作步骤：</p>
<p> 镜像—选择对应的区域—自定义镜像—选择需要共享的镜像—更多—共享镜像</p>
  <!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/f680efee3ee4b55abdf39b66ce8ddd3a.png) -->
  <script> document.write('<img src="'+ imgurl +'1736739575/f680efee3ee4b55abdf39b66ce8ddd3a.png">'); </script><br>

<p> 输入需要共享的账号ID—共享镜像—确定即可</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/b160c38c1920ba061dddc7424ca13431.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/b160c38c1920ba061dddc7424ca13431.png">'); </script><br>

<p><strong>不同用户不同地域：</strong></p>
<p> 首先通过镜像复制的方法将需要共享的镜像复制到与客户预创建云服务器所在的区域，然后再通过镜像共享的方式共享给客户</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/d5ce13f7c53c29d83173c520cdc7a546.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/d5ce13f7c53c29d83173c520cdc7a546.png">'); </script><br>

<p> 选择镜像—自定义—复制镜像—选择复制的目标地域—输入自定义镜像名称—确认</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/822e9c6c798f7a7372c62e72c6ef2951.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/822e9c6c798f7a7372c62e72c6ef2951.png">'); </script><br>

<p> 等待镜像复制到对应的区域后，参考相同区域不同客户之间镜像共享的方式讲镜像共享给客户即可。</p>
<p>至此我们的镜像导入和上传就已经结束了，接下来我们讲解创建ECS实例。</p>
<p>（3）创建ECS实例</p>
<p> 首先在阿里云界面上，我们点击云服务器ECS—实例—创建实例</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/4b7d002b1bb5ec5731c6b61c57188fa3.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/4b7d002b1bb5ec5731c6b61c57188fa3.png">'); </script><br>

<p> 进行基础配置，付费模式还有实例规格按照实际客户情况进行配置</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/b93e20575392d5e42b35f5879bee3670.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/b93e20575392d5e42b35f5879bee3670.png">'); </script><br>

<p> 选择对应的镜像后，存储按照需求选择高效云盘或者SSD云盘，磁盘按照实际情况选择即可。</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/78fa422f8cc5428dc48d1c65509f142d.png)       -->
<script> document.write('<img src="'+ imgurl +'1736739575/78fa422f8cc5428dc48d1c65509f142d.png">'); </script> <br>

<p> 对创建的ECS进行专有网络的配置还有进行公网地址的配置</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/41ba6713251ca476bf9c77da7f767084.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/41ba6713251ca476bf9c77da7f767084.png">'); </script><br>

<p> 接下来选择安全组，安全组未配置前默认进方向都是拦截，出方向都是放行的。若未自定义规格则会导致创建好云主机后无法访问的情况。所以需要在安全组中放通TCP443端口（https接入）、TCP8443端口（控制台管理）、TCP8082端口（管理控制台）、TCP22端口（ssh端口）、TCP161端口（snmp端口）、TCP514端口（接受日志）。所以我们新建安全组进行定义相关规则：</p>
<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/31acd133e86c4797bfc9a8f390614ba8.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/31acd133e86c4797bfc9a8f390614ba8.png">'); </script><br>

<!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/f0061a546f276d7cfa30e060e358a13d.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/f0061a546f276d7cfa30e060e358a13d.png">'); </script><br>

<p> 注：规则方向选择入方向；授权动作选择允许；授权对象填写0.0.0.0&#x2F;0（代表任意IP，若有其他需求则按需填写）</p>
<!-- 填写完成后回到配置云服务器的页面，点击重新选择安全组的按钮，选择刚刚创建的安全组  ![img](https://i-blog.csdnimg.cn/blog_migrate/d9d18617891e8da1b8948d13eda172ad.png) -->
<script> document.write('<img src="'+ imgurl +'1736739575/d9d18617891e8da1b8948d13eda172ad.png">'); </script><br>

<p>  后面的配置按照实际情况选择即可，一般情况下保持默认即可</p>
  <!-- ![img](https://i-blog.csdnimg.cn/blog_migrate/cf3b96203a3e6fb313a86d4405195133.png) -->
  <script> document.write('<img src="'+ imgurl +'1736739575/cf3b96203a3e6fb313a86d4405195133.png">'); </script><br>

<p>  最后确认订单支付即可完成云主机的创建，创建完成后可以在实例列表里看到新建的日志审计系统主机的相关信息，包括运行状态、内网IP地址、EIP地址、配置信息等。</p>
<p>  实例创建完成后，用公网IP地址对软件进行登录配置。</p>
<p> （同理堡垒机、基线核查、数据库审计等产品部署都是如此）</p>
<p>避免踩坑注意点：</p>
<p>   1、阿里云上支持的镜像格式为RAW\VHD\QCOW2。</p>
<p>   2、阿里云上对组件系统盘大小要求在20G—500G。</p>
<p>   3、数据库审计202不支持mongodb数据库，203支持。故要重新部署，并打上对应的补丁（按需打：单个磁盘扩容补丁）和mongodb数据库补丁。</p>
<p>   4、OSM需要搭建应用发布服务器的话记得提前向客户说明，在阿里云上预留资源。</p>
<p>   5、阿里云内的同一个VPC里网络都是互相打通的，例如192.168.1.1和192.168.2.1是通的，可以互访。</p>
<p><strong>结尾：至此阿里云的简介以及云组件的部署已经讲解完成，“三人行必有我师焉”还望大家多多指教!</strong></p>
<p>\VHD\QCOW2。</p>
<p>   2、阿里云上对组件系统盘大小要求在20G—500G。</p>
<p>   3、数据库审计202不支持mongodb数据库，203支持。故要重新部署，并打上对应的补丁（按需打：单个磁盘扩容补丁）和mongodb数据库补丁。</p>
<p>   4、OSM需要搭建应用发布服务器的话记得提前向客户说明，在阿里云上预留资源。</p>
<p>   5、阿里云内的同一个VPC里网络都是互相打通的，例如192.168.1.1和192.168.2.1是通的，可以互访。</p>
<p><strong>结尾：至此阿里云的简介以及云组件的部署已经讲解完成，“三人行必有我师焉”还望大家多多指教!</strong></p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>当输入一个 URL，实际会发生什么？</title>
    <url>/2025/01/13/2025011310/</url>
    <content><![CDATA[<h2 id="从一个经典的面试题说起"><a href="#从一个经典的面试题说起" class="headerlink" title="从一个经典的面试题说起"></a>从一个经典的面试题说起</h2><p>从输入URL到页面展现的过程:</p>
<span id="more"></span>

<ol>
<li>输入URL后，会先进行域名解析。优先查找本地host文件有无对应的IP地址，没有的话去本地DNS服务器查找，还不行的话，本地DNS服务器会去找根DNS服务器要一个域服务器的地址进行查询，域服务器将要查询的域名的解析服务器地址返回给本地DNS，本地DNS去这里查询就OK了。</li>
<li>浏览器拿到服务器的IP地址后，会向它发送HTTP请求。HTTP请求经由一层层的处理、封装、发出之后，最终经由网络到达服务器，建立TCP&#x2F;IP连接，服务器接收到请求并开始处理。</li>
<li>服务器构建响应，再经由一层层的处理、封装、发出后，到达客户端，浏览器处理请求。</li>
<li>浏览器开始渲染页面，解析HTML，构建render树，根据render树的节点和CSS的对应关系，进行布局，绘制页面。</li>
</ol>
<p>这4个步骤包含了一个HTTP请求的完整生命周期，文章着重介绍第2步和第3步，也就是请求是如何在两个物理端点之间进行通信的。数据的发出和接收必然会经历一些处理、解析的过程，这些过程在系统的不同层次进行。</p>
<h2 id="分层"><a href="#分层" class="headerlink" title="分层"></a>分层</h2><p>一个HTTP请求从源端发出到在终端接收的处理过程都是要经过以下四层。其中每一层都有各自的协议。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/28c13e41b8db6dbbc737deaa0d664896.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/28c13e41b8db6dbbc737deaa0d664896.jpeg">'); </script><br>

<p>我们先来理解一下协议是什么，协议是经过约定，双方共同承认，并且需要共同遵守的规则。上面的每一层，都有各自的协议，协议的执行者是通信链路两端内的对应层。每一层通过协议来理解数据，并进行处理。</p>
<p>上图中只举例出了最常见的协议，实际上每一层都有细分的协议：</p>
<ul>
<li>应用层：应用程序负责将数据以相应规则（协议）进行包装，发给传输层<ul>
<li>HTTP：超文本传输协议</li>
<li>FTP：文件传输协议</li>
<li>SMTP：简单邮件传送协议</li>
<li>SNMP：简单网络管理协议</li>
</ul>
</li>
<li>传输层：负责将应用层传过来的数据进行分组，为确保终端接收数据的顺序和完整性，会对每个分组进行标记，交给网络层<ul>
<li>TCP：传输控制协议</li>
<li>UDP：用户数据协议</li>
</ul>
</li>
<li>网络层：负责将传输层发来的数据分组发送到目标终端<ul>
<li>IP：网际协议</li>
<li>ICMP：Internet互联网控制报文协议</li>
<li>IGMP：Internet组管理协议</li>
</ul>
</li>
<li>链路层：为网络层发送和接收数据单元<ul>
<li>ARP：地址解析协议</li>
<li>RARP：逆地址解析协议</li>
</ul>
</li>
</ul>
<h2 id="封装和分用"><a href="#封装和分用" class="headerlink" title="封装和分用"></a>封装和分用</h2><p>数据在经过每一层的时候都要被对应的协议包装，到达终端的时候，要一层一层的解包。这两个过程叫封装和分用。</p>
<p>发送时，用户数据被HTTP封装为报文，每一层会将上层传过来的报文作为本层的数据块，并添加自己的首部，其中包含了协议标识，这一整体作为本层报文向下传递。</p>
<p>接收时，数据自下而上流动，经过每一层时被去掉报文首部，根据报文标识确定正确的上层协议，最终到应用层被应用程序处理。</p>
<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>源端发送HTTP报文时，报文会以数据流的形式通过一条已经打开的TCP连接按序传输，TCP收到数据流后会将其分割成小的数据块，每个小块被添加的TCP首部与数据块共同组成了TCP分组，分组经由网络层发送，网络层遵循IP协议，当收到分组发送请求后，会将分组其放入IP数据报，填充报头，将数据报发经由链路层发送出去。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/1de02df81aa591dae332c7142457a9a6.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/1de02df81aa591dae332c7142457a9a6.jpeg">'); </script><br>

<p>这一过程经过每层的时候都会被增加一些首部信息，有时还需要增加尾部信息，每一层都会把数据封装到各自的报文中， 并在报文首部添加协议标识，这个过程叫<strong>封装</strong>。</p>
<h2 id="分用"><a href="#分用" class="headerlink" title="分用"></a>分用</h2><p>终端接收到一个以太网数据帧时，数据自底层向上流动，去掉发送时各层协议加上的报文首部，每层协议都要检查报文首部的协议标识，从而确定上层协议，保证数据被正确处理，这个过程叫分用。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/08feeaac386b56b1484eba3aa83f6f69.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/08feeaac386b56b1484eba3aa83f6f69.jpeg">'); </script><br>

<p>终端从链路层接收到数据请求后，进入网络层对数据进行解析，交给给传输层，校验分组顺序和完整性，从数据块中取出数据，得到HTTP报文，交给应用层进行处理。这个过程会逐层剥离报头还原数据。</p>
<h2 id="逐层分析"><a href="#逐层分析" class="headerlink" title="逐层分析"></a>逐层分析</h2><p>我们已经知道，数据是从源端自上而下到终端自下而上被一层层处理的，现在就来看一下每层都做了什么事情。</p>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP属于应用层，用户触发交互所产生的行为数据和服务端对此的响应都由它封装成HTTP报文，再交由下层协议进行处理。报文的作用是客户端与服务端沟通的载体，双方都要遵循统一规则对信息进行处理，这一规则称为HTTP。</p>
<p>客户端与服务端的交互往往非常复杂，为了使双方都能高效、明确、安全地通信（例如传递意图与状态、承载数据、携带认证信息、控制连接行为与缓存），需要依赖报文中的结构来实现，下面先从结构开始看。</p>
<h2 id="报文结构"><a href="#报文结构" class="headerlink" title="报文结构"></a>报文结构</h2><p>HTTP报文的结构分为请求和响应两种，请求报文封装用户操作产生的动作，告知服务器应采取什么行为，响应报文来告知客户端请求的结果。<br>请求报文格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">method</span>&gt;</span> <span class="tag">&lt;<span class="name">request-url</span>&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span> // 起始行格式</span><br><span class="line"><span class="tag">&lt;<span class="name">headers</span>&gt;</span> // 首部</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> // 实体</span><br></pre></td></tr></table></figure>
<p>响应报文格式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">method</span>&gt;</span> <span class="tag">&lt;<span class="name">status</span>&gt;</span> <span class="tag">&lt;<span class="name">reason-phrase</span>&gt;</span> // 起始行格式</span><br><span class="line"><span class="tag">&lt;<span class="name">headers</span>&gt;</span> // 首部</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> // 实体</span><br></pre></td></tr></table></figure>
<h2 id="起始行"><a href="#起始行" class="headerlink" title="起始行"></a>起始行</h2><p>报文的起始行表明了报文的开始，请求和响应各自的起始行的格式也不相同。</p>
<p>请求报文的起始行说明要做什么，结构为方法 + 请求URL + 协议版本，中间用空格做分隔：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">GET /api/nht/blog/example HTTP/1.1</span><br></pre></td></tr></table></figure>
<p>响应报头的起始行说明发生了什么，结构为协议版本 + 状态码 + 描述文本，中间用空格做分隔：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br></pre></td></tr></table></figure>
<h2 id="方法与状态码"><a href="#方法与状态码" class="headerlink" title="方法与状态码"></a>方法与状态码</h2><p>方法来告诉服务端请求报文要做的事情，状态码来通知客户端服务端依据请求报文完成动作之后的大致结果。常见的HTTP方法如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">| 方法 | 含义 | 有无主体 | | ------- | ---------------------------------------------- | -------- | | GET | 从服务端获取资源 | 无 | | HEAD | 只获取资源头部 | 无 | | POST | 向服务端发送数据 | 有 | | PUT | 将客户端发送的数据存到服务端，应用场景多为修改 | 有 | | OPTIONS | 对服务端进行预检，例如服务端支持哪些方法 | 无 | | DELETE | 从服务端删除资源 | 无 |</span><br><span class="line"></span><br><span class="line">请求完成时，响应报文中会有一个状态码，用来表示此次请求的状态，是成功了还是失败了，或者时需要重定向。状态码的范围从100到599， 其中有部分是已经定义的。不同的范围表示的含义也不同：</span><br><span class="line"></span><br><span class="line">| 范围 | 已定义范围 | 含义 | | ------- | ---------------------------------------------- | ---------- | | 100~199 | 100~101 | 信息提示 | | 200~299 | 200~206 | 成功 | | 300~399 | 300~305 | 重定向 | | 400~499 | 400~415 | 客户端错误 | | 500~599 | 500~505 | 服务端错误 |</span><br></pre></td></tr></table></figure>
<h2 id="首部"><a href="#首部" class="headerlink" title="首部"></a>首部</h2><p>首部是请求和响应报文中的一些信息，形式为键值对，每对键值结尾是CRLF换行符，它决定了请求或者响应报文的属性，比如Content-Type表明了请求主体的数据类型，Date说明了请求的创建时间。客户端与服务端通过首部来协商具体行为。可以根据请求、响应、结构等，将首部分为五种。</p>
<ul>
<li>请求首部：是放在请求报文中的首部，它被用来告诉服务端一些信息。</li>
<li>响应首部：为客户端提供一些可能用到的信息。</li>
<li>通用首部：请求与响应报文都包含的首部，例如Date首部</li>
<li>实体首部：对于报文实体主体部分的描述，比如Content-Type，表明其数据类型。</li>
<li>扩展首部：开发者自己添加的首部字段，用来满足定制化需求。</li>
</ul>
<h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HTTP/1.0 200 OK</span><br><span class="line">Server: xxxxxxx</span><br><span class="line">Date: Sun,17 Sep 2019 02:01:16 GMT</span><br><span class="line">--------------------------------实体首部</span><br><span class="line">Content-Type: text/plain</span><br><span class="line">Content-length: 18</span><br><span class="line">--------------------------------实体主体</span><br><span class="line"></span><br><span class="line">Hi! I&quot;m a message!</span><br><span class="line">--------------------------------</span><br></pre></td></tr></table></figure>
<p>实体部分是可选的，它被用来运送请求或者响应的数据，实体由实体首部 + 实体主体组成，实体首部对实体主体做描述。HTTP&#x2F;1.1定义了以下的基本实体首部字段：</p>
<ul>
<li>Content-Type: 实体主体中的数据类型。</li>
<li>Content-Length: 实体主体的长度或者大小。</li>
<li>Content-Language: 和传输的数据最匹配的语言。</li>
<li>Content-Encoding: 来标识服务端编码时所用的编码方式。</li>
<li>Content-Location: 要返回的数据的地址。</li>
<li>Content-Range: 如果是部分实体，用来标记它是实体的哪个部分。</li>
<li>Content-MD5: 实体主体内容的校验和。</li>
<li>Last-Modified: 所传输内容在服务器上创建或者最后修改的日期时间。</li>
<li>Expires: 实体数据试下的日期时间。</li>
<li>Allow: 所请求资源允许的请求方法。</li>
<li>ETag: 资源的特定版本的标识符。可以让缓存更高效，并节省带宽。</li>
<li>Cache-Control: 控制缓存机制的指令。</li>
</ul>
<p>以上是HTTP报文包含的主要结构，当请求报文到达服务器时，服务器会对报文中的内容解析出来，根据方法、资源路径、首部、和主体来处理请求，然后通过对请求资源的访问结果，来构建响应，回送给客户端。</p>
<h2 id="传输层-TCP"><a href="#传输层-TCP" class="headerlink" title="传输层-TCP"></a>传输层-TCP</h2><p>HTTP连接是建立在TCP连接的基础之上的，TCP提供可靠的数据连接。当要传输一个HTTP报文时，报文数据会以流的形式通过一条已经打开的TCP连接按顺序传输，TCP会将收到的数据分成小块，每块是一个TCP分组。</p>
<p>由于数据是分成小块发送的，所以完整可靠的数据传输主要体现在：分组是否完整、分组顺序是否正常、分组是否损坏、分组数据是否重复。这些可以通过TCP的检验和、序列号、确认应答、重发控制、连接管理和窗口机制来控制。</p>
<p>TCP是传输控制协议，传输控制主要依赖首部包含的6个标志，它们控制报文的传输状态，以及发送端和接收端应对数据采取的动作。当它们的值为1时，标志对应的各自功能才允许被执行，比如当URG为1时，报文首部的紧急指针部分才有效。</p>
<ul>
<li>URG 紧急指针</li>
<li>ACK 确认序号有效</li>
<li>PSH 接收方应该尽快将这个报文段交给应用层。</li>
<li>RST 重建连接</li>
<li>SYN 同步序号用来发起一个连接</li>
<li>FIN 发端完成发送任务<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/16b46ed733bf98601210dec418d1ef75.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/16b46ed733bf98601210dec418d1ef75.jpeg">'); </script><br></li>
</ul>
<p>源端口和目的端口：标识发送方和接收方的端口号，一个TCP连接通过4个值确认：源IP、源端口、目的IP、目的端口，其中源IP和目的IP包含在IP分组内。</p>
<p>首部长度：表示TCP首部的字节长度，也能标记出从多少个字节开始，才是需要传输的数据。</p>
<p>TCP段序号：本段报文发送的数据第一个字节的序号，每段报文中的数据的每个字节都有序号，第一个字节的序号从0开始，依次加1，加到2的32次方减1后再次从0开始。</p>
<p>TCP段确认序号 ：当首部标志ACK为1时，确认序号有效。TCP段被接收端接收后，会回送给发送端一个确认号，为上次接受的最后一个字节序号加1。</p>
<p>检验和：由发送端计算，接收端验证，如果接收方检测到检验和不正确，表明该TCP段可能有损坏，会被丢弃，同时接收端向回送一个重复的确认号（与最近的一次正确的报文传输的确认号重复），表明接收到的TCP段是错误的，并告知自己希望收到的序号。这时发送端需要立即重传出错的TCP段。</p>
<p>紧急指针：当首部标志URG为1时，紧急指针有效，表示发送端向接收端要发送紧急数据。紧急指针是一个正偏移量，它和TCP段序号相加，计算出紧急数据的最后一个字节的序号。比如接收方接收到数据，从序号为1000的字节开始读取，紧急指针为1000，那么紧急数据就是序号从1000到2000之间的字节。这些数据由接收方决定如何处理。</p>
<p>窗口尺寸：决定了TCP一次成块数据流的吞吐量。需要注意的是，它表示的是发送一方的允许对方发送的数据量，比如发送方首部中的窗口大小为1000，就表示发送方最多可以接受对方发来的1000个字节的数据量。这与发送方的数据缓存空间有关，会影响TCP的性能。</p>
<p>首部标志PSH：如果需要告诉接收方将数据立即全部提交给接收进程，发送方需要将PSH置为1，这里的数据是和PSH一起传送的数据以及之前接收到的全部数据。如果接收方收到了PSH为1的标志，需要立即将数据提交给接收进程，不用再等待有没有其他数据进来。</p>
<p>复位标志RST：当RST为1时，表示连接出现了异常情况，接收方将终止连接，通知应用层重新建立连接。</p>
<p>同步序号SYN：用来建立连接，涉及到TCP的三次握手。</p>
<ol>
<li>开始建立连接时，客户端向服务器发送一个TCP分组，分组首部的SYN为1，并携带一个初始序号，表明这是一个连接请求。</li>
<li>如果服务器接受了连接，会向客户端发送一个TCP分组，分组中会包含SYN和ACK，都为1，同时包含一个确认序号，值为来自客户端的初始序号   + 1，表示连接已经被接受。</li>
<li>客户端收到上一步发来的分组后，会再向服务器发送一段确认报文分组，ACK为1，会再次携带确认序号，值是第二步来自客户端的确认序号 +1。服务端收到确认信息后，进入已经连接的状态。<br>在第三步的确认分组中，是可以携带要发送的数据的。</li>
</ol>
<p>连接终止标志FIN：用来关闭连接，当一端完成数据发送任务后会发送一个FIN标志来终止连接，但因为TCP在两个方向（C-S,S-C）上会有数据传递，每个方向有各自的发送FIN &amp; 确认关闭流程，所以会有四次交互，也称为四次挥手。</p>
<ol>
<li>如果客户端应用层的数据发送完毕，会导致客户端的TCP报文发送一个FIN，告知服务器准备关闭数据传送。</li>
<li>服务器接收到这个标志后，它发回一个ACK，确认序号为收到的序号加1，同时TCP还要向应用程序发一个文件结束符。</li>
<li>此时服务器关闭这个方向的连接，导致它的TCP也会发送一个FIN。</li>
<li>客户端接收到之后发回一个确认ACK，序号为收到的序号 + 1，连接完全关闭。</li>
</ol>
<p>TCP段序号与确认序号保证了数据的顺序，检验和确保数据的完整性，紧急指针保证紧急数据可被及时处理。另外，TCP还有一些超时重传、 拥塞避免、慢启动的机制，都可以保证分组数据按照顺序完整的传到目标端。</p>
<h2 id="网络层-IP"><a href="#网络层-IP" class="headerlink" title="网络层-IP"></a>网络层-IP</h2><p>如果说TCP分组是包装货物的集装箱，那么IP就是运送集装箱的卡车。IP协议提供了两个节点之间的连接，保证将TCP数据尽可能快地从源端送到终端，但却不能保证传输的可靠性。</p>
<p>IP层会将上层传过来的TCP分组封装，带上自己的首部，再进行选路、是否分片以及重组的工作，最终到达目的地，这个过程中，IP首部起了重要的作用，下面让我们看一下首部的结构。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/a5f3a2b38bac4db9dc02e1192dea09b0.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/a5f3a2b38bac4db9dc02e1192dea09b0.jpeg">'); </script><br>

<p><strong>版本：</strong>表示当前IP协议的版本，目前版本号是4，还有一种是6，也就是IPV4和IPV6，如果发送和接收这两端的版本不一致，那么当前IP数据报会被丢弃。</p>
<p><strong>首部长度：</strong>整个首部的长度，最长为60字节。</p>
<p><strong>服务类型（TOS）：</strong>用来区分服务的类型，但其实IP层在工作的时候一直没有实际使用过，现有的TOS只有4bit的子字段，和1bit的未用位。未用位必须置为0。TOS的4个bit中只能将一个置成1，用来表示当前服务类型。4bit对应的4个服务类型分别为：最小时延、最大吞吐量、最高可靠性和最小费用。</p>
<p><strong>总长度：</strong>表示当前的数据报报文的总长度，单位为字节，可以结合首部长度计算出报文内数据的大小以及起始位置。</p>
<p>下面这三个首部字段涉及到IP数据报的分片与重组过程，由于网络层一般会限制每个数据帧的最大长度，IP层发送数据报会在选路的同时查询当前设备网络层的每个数据帧的最大传输长度，一旦超出，数据报就会被进行分片，到达目的地之后再进行重组，此时就会用以下三个字段作为重组依据。需要注意的是：因为存在选路的过程，数据报经过的每层路由设备对于数据帧的最大传输长度都不同，所以分片可能发生在任意一次选路的过程中。</p>
<p><strong>分组标识：</strong>这个标识相当于ID，每成功发送一个分片，IP层就会把这个分组ID加1。</p>
<p><strong>标志：</strong>共占用三位，分别是R、D、M，R目前还没有被使用，有用的是D、和M。这个字段表示了数据报的分片行为。D如果为1的话，表示数据无需分片，一次传输完；M如果为1，表示数据是分片的，后边还有数据，当它为0时，就表示当前数据报是最后一个分片，或者只有这一个分片。</p>
<p><strong>片偏移：</strong>标识了当前分片距离原始数据报开始处的位置，分片之后，每一片的总长度会改成这一片的长度值，而不是整个数据报的长度。</p>
<p><strong>生存时间：</strong>（TTL） 可以决定数据报是否被丢弃。因为IP发送数据是逐跳的，数据有可能在被设置了路由功能的不同的IP层之间转发，所以生存时间表示了数据报最多个可以经过多少个处理过它的路由，每经过一层路由，值减去1，当值为0时数据报就被丢弃，并且发送一个带有错误消息的报文（ICMP，IP层的组成部分，被用来传递一些错误信息）给源端。生存时间可以有效解决数据报在一个路由环路中一直转发的问题。</p>
<p><strong>首部检验和：</strong>校验数据报的完整性，发送端对首部进行求和，将结果存在检验和中，接收端再计算一遍，如果计算结果与存在检验和中的结果一致，则说明传输过程是OK的，否则这个数据报就会被丢弃。<br>上层协议：决定了接收端在分用的时候将数据交给哪个上层协议去处理，例如TCP或者UDP。</p>
<p><strong>源IP：</strong>记录了发送端的IP，在回送错误消息时用到。</p>
<p><strong>目的IP：</strong>表示目的IP，每一次选路都要以它来做决策。</p>
<h2 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择"></a>路由选择</h2><p>因为IP首部只包含了目的IP地址，并不体现完整的路径，当向外发送数据时，IP层会根据目的IP在本机路由表中的查询结果来做出选路决策，数据报会逐跳地被运送到目的地，这里的每一跳，就是一次路由选择。</p>
<p>IP层既可配置成路由器，也可以配置成主机。当配置成路由功能时，可以对数据报进行转发，配置成主机时，如果目的IP不是本机IP，数据报会被丢弃。</p>
<p>具有路由功能的IP层在当目标IP不是本机地址的时候是根据什么判断转发到哪一站呢？要理解这个问题，需要先明白路由表的结构，以下是IP层维护的路由表，（windows系统可以在控制台输入netstat -r来查看路由表）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">| Destination | Gateway | Flags| Refcnt| Use | Interface| | ------------------ | --------------- | -----|------ |---- | ---------| | 140.252.13.65</span><br></pre></td></tr></table></figure>
<ul>
<li>Destination（目的IP）：表示IP数据报最终要到达或者经过的网络地址或者主机地址。</li>
<li>Gateway（下一跳地址）：当前维护路由表设备的相邻路由器的地址</li>
<li>Flags（标志）：表示当前这一条路由记录的属性，具体用五个不同的标志来表示：<ul>
<li>U：该路由可以使用</li>
<li>G：如果有这个标志，表示是下一跳是一个网关，如果没有，表示下一跳是和当前设备在一个网段，也就是可以直接把数据报发过去</li>
<li>H: 下一跳是一个主机还是一个网络，有这个标志，表示主机，没有，则表示下一跳的路由是一个网络</li>
<li>D：该路由是由重定向报文创建的</li>
<li>M：该路由已被重定向报文修改</li>
<li>Interface：当前路由项的物理端口</li>
</ul>
</li>
</ul>
<p>每收到一个数据报时候，IP层就会根据目的IP在路由表里查询，根据查询状态会导向三种结果：</p>
<ol>
<li>找到了与目的IP完全匹配的路由项，将报文发给该路由项的下一站路由（Gateway）或者网络接口（Interface）</li>
<li>找到了与目的IP的网络号匹配的路由项，将报文发给该路由项的下一站路由（Gateway）或者网络接口（Interface）</li>
<li>前两者都没有找到，就看路由表里有没有默认路由项（default），有的话发给它指定的下一站路由（Gateway）</li>
</ol>
<p>要是上边三个都没有结果，那么数据报就不能被发送。IP数据报就是这样一跳一跳地被送往目的主机的，但数据报有固有的长度，一旦超出了目的主机的MTU，就会被分片。</p>
<h2 id="数据报分片的概念"><a href="#数据报分片的概念" class="headerlink" title="数据报分片的概念"></a>数据报分片的概念</h2><p>TCP在进行握手的时候，会根据目的端IP层的最大传输单元（MTU）来决定TCP数据每次能传输的最大数据量（MSS），之后TCP会对数据依照MSS来进行分组，每个分组会被包装进一个IP数据报内。当IP数据报经过选路过程中的任意一层路由时，有可能被MTU限制住从而被分片，这时IP首部的3bit标志中的M标志被置为1，表示需要分片。每个分片的首部基本一样，只是片偏移有所不同。依据片偏移，这些分片在目的端被重组成一个完整的IP数据报（一个TCP分组）。IP传输是无序的，所以得到的数据报也是无序的，但如果数据完整，TCP会根据首部中的字段对其进行排序。一旦IP分片丢失，IP层无法组成完整的数据报，就会告诉TCP层，TCP进行重传。</p>
<p>当IP层将数据封装好之后，只有目标主机的IP地址。光有IP地址并不能直接把数据报发送过去，因为每一台硬件设备都有自己的MAC地址，是一个48bit的值。现在知道目标IP的地址，需要找到这个IP对应的MAC地址。这个过程要通过查询路由表，再结合链路层的ARP协议，最终获得目标IP对应的MAC地址。</p>
<h2 id="地址解析协议：ARP"><a href="#地址解析协议：ARP" class="headerlink" title="地址解析协议：ARP"></a>地址解析协议：ARP</h2><p>IP只能让数据在逻辑端点之间流动，但是IP之下还有网络接口层，这一层也有自己的地址（MAC地址：用于在网络中唯一标识一个网卡），从IP地址到MAC地址需要一个转换的过程，ARP就是提供这一服务的。</p>
<p>ARP协议实现了从IP地址到MAC地址的映射。一开始，起点并不知道目标的MAC地址，只有目标IP，要获取这个地址就涉及到了ARP的请求和应答。同样，ARP也有自己的分组，先看一下分组格式。</p>
<h2 id="ARP分组格式"><a href="#ARP分组格式" class="headerlink" title="ARP分组格式"></a>ARP分组格式</h2><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/275aa1fb202513a910a06fb5ff2db19d.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/275aa1fb202513a910a06fb5ff2db19d.jpeg">'); </script><br>

<p>以太网目的地址：目的端的MAC地址，当ARP缓存表中没有的时候，这里为广播地址。</p>
<p>以太网源地址：发送端的MAC地址。</p>
<p>帧类型：不同的帧类型有不同的格式和MTU值，不同的类型有不同的编号，这里ARP对应的编号是0x0806。</p>
<p>硬件类型：指链路层网络类型，1为以太网。</p>
<p>协议类型：指的是要转换的地址类型，0x0800为IP地址。比如将以太网地址转换为IP地址。</p>
<p>op（操作类型）：有四种，分别是ARP请求（1），ARP应答（2），RARP请求（3），RARP应答（4）。</p>
<p>源MAC地址：表示发送端MAC地址。</p>
<p>源IP地址：表示发送端IP地址。</p>
<p>目的以太网地址：表示目标设备的MAC物理地址。</p>
<p>目的IP地址：表示目标设备的IP地址。</p>
<p>当两台设备发送报文之前，源端的链路层会用ARP协议去询问目的端的MAC地址，ARP会将一个请求广播出去，以太网上的每一个主机都会收到这份广播，广播的目的是询问目标IP的MAC地址，内容主要是先介绍自己的IP和MAC地址，再询问如果你有目标IP，请回复你的硬件地址。如果一个主机收到广播后看到自己有这个IP，并且请求内有源IP和MAC地址，那么就会向源主机回应一个ARP应答。如果没有目标IP，就会丢弃这个请求。可以看出请求是向外广播的，而应答是单独回应的。</p>
<p>但不能每次通信之前都去经历一次请求-应答过程，在成功地接收到应答之后，IP和MAC地址的映射关系就会缓存在ARP缓存表中，有效期一般为20分钟，便于网络层下次直接进行封装，所以，完整的过程应该是：<br>IP层接收到TCP分组后，发送或者封装之前，通过查询路由表：</p>
<ol>
<li>当目标IP和自己在同一个网段时，先去ARP缓存表里找有没有目标IP对应的MAC地址，有的话交给链路层进行封装发送出去。如果缓存表内没有，进行广播，获得MAC地址后缓存起来，IP层再对TCP进行封装，然后交给链路层再封装发送出去。</li>
<li>当目标IP和自己不在同一个网段，需要将报文发给默认的网关。如果ARP缓存表中有网关IP对应的MAC地址，那么交给链路层进行封装发送出去。如果没有，进行广播，获得地址后缓存起来，IP层再对TCP进行封装，然后交给链路层再封装发送出去。</li>
</ol>
<h2 id="以太网数据帧"><a href="#以太网数据帧" class="headerlink" title="以太网数据帧"></a>以太网数据帧</h2><p>上面所有东西都准备好了，封装发送的其实是以太网数据帧。以太网目的地址、以太网源地址、帧类型这三者组成了帧首部。在首部之前还会插入前同步码和帧开始定界符，告知接收端做一些准备工作。帧检验序列 FCS被添加进尾部，用来检测帧是否出错。</p>
<h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/e424cb9b1feddf997a6f61c80d80c77d.jpeg#pic_center) -->
<script> document.write('<img src="'+ imgurl +'1736749038/e424cb9b1feddf997a6f61c80d80c77d.jpeg">'); </script><br>
<p><strong>前同步码：</strong>协调终端接收适配器的时钟频率，让它与发送端频率相同。</p>
<p><strong>帧开始定界符：</strong>帧开始的标志，表示帧信息要来了，准备接收。</p>
<p><strong>目的地址：</strong>接收帧的网络适配器的MAC地址，接收端收到帧时，会首先检查目的地址与本机地址是否相符，不是的话就会丢弃。</p>
<p><strong>源地址：</strong>发送端设备的MAC地址。</p>
<p><strong>类型：</strong>决定接收到帧之后将数据交由那种协议处理。</p>
<p><strong>数据：</strong>交给上层的数据。在本文的场景中指IP数据报。</p>
<p><strong>帧检验序列：</strong>检测这一帧是否出错，发送方计算帧的循环冗余码校验（CRC）值，把这个值写到帧里。接收方计算机重新计算 CRC，与 FCS 字段的值进行比较。如果两个值不相同，则表示传输过程中发生了数据丢失或改变。这时，就需要重新传输这一帧。<br><strong>传输和接收</strong></p>
<ol>
<li>接收到上层传过来的数据报之后，根据MTU以及数据报大小来决定是否分割成小块，也就是IP数据报被分片的过程。</li>
<li>把数据报（块）封装成一帧，传给底层组件，底层组件将帧转换为比特流，并发送出去。</li>
<li>以太网上的设备接收到帧，检查帧里边的目标地址，如果与本机地址匹配，帧就会被处理，一层一层向上传递（分用过程）。</li>
</ol>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>一个网络请求从源端一层层封装，再到终端一层层拆分，最后的所有过程基本梳理清楚，文章只是简单梳理了一下大概流程，并且只以HTTP报文通过TCP协议经过IP传送这一过程为例，实际还有很多概念没有覆盖，比如链路层的尾部封装、 IP的动态选路、逆地址解析协议RARP、UDP协议相关的概念，建议大家可以阅读下面列出的参考资料，相信会有更多收获。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
      </tags>
  </entry>
  <entry>
    <title>vi指令总结</title>
    <url>/2025/01/13/2025011312/</url>
    <content><![CDATA[<h2 id="VI常用技巧"><a href="#VI常用技巧" class="headerlink" title="VI常用技巧"></a>VI常用技巧</h2><p>​	VI命令可以说是Unix&#x2F;Linux世界里最常用的编辑文件的命令了，但是因为它的命令集众多，很多人都不习惯使用它，其实您只需要掌握基本命令，然后加以灵活运用，就会发现它的优势，并会逐渐喜欢使用这种方法。本文旨在介绍VI的一些最常用命令和高级应用技巧。 </p>
<span id="more"></span>

<h3 id="基本命令介绍"><a href="#基本命令介绍" class="headerlink" title="基本命令介绍"></a>基本命令介绍</h3><ol>
<li><p><strong>光标命令</strong></p>
<p>k、j、h、l——上、下、左、右光标移动命令。虽然您可以在Linux中使用键盘右边的4个光标键，但是记住这4个命令还是非常有用的。这4个键正是右手在键盘上放置的基本位置。<br> nG——跳转命令。n为行数，该命令立即使光标跳到指定行。<br> Ctrl+G——光标所在位置的行数和列数报告。<br> w、b——使光标向前或向后跳过一个单词。 </p>
</li>
<li><p><strong>编辑命令</strong></p>
<p>i、a、r——在光标的前、后以及所在处插入字符命令(i&#x3D;insert、a&#x3D;append、r&#x3D;replace)。<br> cw、dw——改变(置换)&#x2F;删除光标所在处的单词的命令 (c&#x3D;change、d&#x3D;delete)。<br> x、d$、dd——删除一个字符、删除光标所在处到行尾的所有字符以及删除整行的命令。<br> —- 3．查找命令 </p>
</li>
<li><p><strong>查找命令</strong></p>
<p>&#x2F;string、?string——从光标所在处向后或向前查找相应的字符串的命令。 </p>
</li>
<li><p><strong>拷贝复制命令</strong> </p>
<p>yy、p——拷贝一行到剪贴板或取出剪贴板中内容的命令.</p>
</li>
</ol>
<h2 id="进入vi"><a href="#进入vi" class="headerlink" title="进入vi"></a>进入vi</h2><table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">vi 文件名称</td>
<td align="center">打开或者新建文件，光标置于第一行行首</td>
</tr>
<tr>
<td align="center">vi	行数	文件名称</td>
<td align="center">打开文件，并设置光标在第几行行首</td>
</tr>
<tr>
<td align="center">vi	+	文件名称</td>
<td align="center">打开文件，并设置光标在尾行行首</td>
</tr>
<tr>
<td align="center">vi	+&#x2F;字符串	文件名称</td>
<td align="center">打开文件，并设置光标在第一个与字符串相匹配处</td>
</tr>
<tr>
<td align="center">vi	-r	文件名称</td>
<td align="center">上次vi编辑时系统崩溃可使用-r方式恢复文件</td>
</tr>
<tr>
<td align="center">vi	文件名称1 …… 文件名称n</td>
<td align="center">打开多个文件，依此进行编辑</td>
</tr>
</tbody></table>
<h2 id="vi中移动光标"><a href="#vi中移动光标" class="headerlink" title="vi中移动光标"></a>vi中移动光标</h2><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">h</td>
<td align="center">光标左移一个字符</td>
</tr>
<tr>
<td align="center">l</td>
<td align="center">光标右移一个字符</td>
</tr>
<tr>
<td align="center">space(空格)</td>
<td align="center">光标右移一个字符</td>
</tr>
<tr>
<td align="center">backspace(退格)</td>
<td align="center">光标左移一个字符</td>
</tr>
<tr>
<td align="center">k 或 ctrl + p</td>
<td align="center">光标上移一行</td>
</tr>
<tr>
<td align="center">j 或 ctrl + n</td>
<td align="center">光标下移一行</td>
</tr>
<tr>
<td align="center">enter(回车)</td>
<td align="center">光标下移一行</td>
</tr>
<tr>
<td align="center">w 或 W</td>
<td align="center">光标右移一个字至字首</td>
</tr>
<tr>
<td align="center">b 或 B</td>
<td align="center">光标左移一个字至字首</td>
</tr>
<tr>
<td align="center">e 或 E</td>
<td align="center">光标右移一个字至字尾</td>
</tr>
<tr>
<td align="center">)</td>
<td align="center">光标移至句尾</td>
</tr>
<tr>
<td align="center">(</td>
<td align="center">光标移至句首</td>
</tr>
<tr>
<td align="center">}</td>
<td align="center">光标移至段落开头</td>
</tr>
<tr>
<td align="center">{</td>
<td align="center">光标移至段落结尾</td>
</tr>
<tr>
<td align="center">行数 + G</td>
<td align="center">光标移至第n行首</td>
</tr>
<tr>
<td align="center">行数 + +</td>
<td align="center">光标下移n行</td>
</tr>
<tr>
<td align="center">行数 + -</td>
<td align="center">光标上移n行</td>
</tr>
<tr>
<td align="center">行数 + $</td>
<td align="center">光标移至第n行尾</td>
</tr>
<tr>
<td align="center">H</td>
<td align="center">光标移至屏幕顶行</td>
</tr>
<tr>
<td align="center">M</td>
<td align="center">光标移至屏幕中间行</td>
</tr>
<tr>
<td align="center">L</td>
<td align="center">光标移至屏幕最后行</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">（注意是数字零）光标移至当前行首</td>
</tr>
<tr>
<td align="center">$</td>
<td align="center">光标移至当前行尾</td>
</tr>
</tbody></table>
<h2 id="屏幕翻滚"><a href="#屏幕翻滚" class="headerlink" title="屏幕翻滚"></a>屏幕翻滚</h2><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ctrl + u</td>
<td align="center">向文件首翻半屏</td>
</tr>
<tr>
<td align="center">ctrl + d</td>
<td align="center">向文件尾翻半屏</td>
</tr>
<tr>
<td align="center">ctrl + f</td>
<td align="center">向文件尾翻一屏</td>
</tr>
<tr>
<td align="center">ctrl + b</td>
<td align="center">向文件首翻一屏</td>
</tr>
<tr>
<td align="center">行数 + z</td>
<td align="center">将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td>
</tr>
</tbody></table>
<h2 id="插入文本"><a href="#插入文本" class="headerlink" title="插入文本"></a>插入文本</h2><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td align="center">在光标前插入</td>
</tr>
<tr>
<td align="center">l</td>
<td align="center">在当前行首插入</td>
</tr>
<tr>
<td align="center">a</td>
<td align="center">在光标后插入</td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">在当前行尾插入</td>
</tr>
<tr>
<td align="center">o</td>
<td align="center">在当前行之下新添加一行</td>
</tr>
<tr>
<td align="center">O</td>
<td align="center">在当前行之上新添加一行</td>
</tr>
<tr>
<td align="center">r</td>
<td align="center">替换当前字符以及其后面的字符</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">替换当前字符及其后的字符，直至按ESC键</td>
</tr>
<tr>
<td align="center">s</td>
<td align="center">从当前光标位置处开始，以输入的文本替代指定数目的字符</td>
</tr>
<tr>
<td align="center">行数 + c + w 或 行数 + C + W</td>
<td align="center">修改指定数目的字</td>
</tr>
<tr>
<td align="center">行数 + C + C</td>
<td align="center">修改指定数目的行</td>
</tr>
</tbody></table>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">第几个字 + d + w</td>
<td align="center">删除光标处开始及其后的n-1个字</td>
</tr>
<tr>
<td align="center">d + o</td>
<td align="center">删除至行首</td>
</tr>
<tr>
<td align="center">d + $</td>
<td align="center">删除至行尾</td>
</tr>
<tr>
<td align="center">行数 + d + d</td>
<td align="center">删除当前行及其后n-1行</td>
</tr>
<tr>
<td align="center">x 或 X</td>
<td align="center">删除一个字符，x删除光标后的，而X删除光标前的</td>
</tr>
<tr>
<td align="center">ctrl + u</td>
<td align="center">删除输入方式下所输入的文本</td>
</tr>
</tbody></table>
<h2 id="搜索及替换命令"><a href="#搜索及替换命令" class="headerlink" title="搜索及替换命令"></a>搜索及替换命令</h2><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x2F; 字符串</td>
<td align="center">从光标开始处向文件尾搜索pattern</td>
</tr>
<tr>
<td align="center">? 字符串</td>
<td align="center">从光标开始处向文件首搜索pattern</td>
</tr>
<tr>
<td align="center">n</td>
<td align="center">在同一方向重复上一次搜索命令(查看下一个搜索目标)</td>
</tr>
<tr>
<td align="center">N</td>
<td align="center">在反方向上重复上一次搜索命令(查看上一个搜索目标)</td>
</tr>
<tr>
<td align="center">：s&#x2F;p1&#x2F;p2&#x2F;g</td>
<td align="center">将当前行中所有p1均用p2替代</td>
</tr>
<tr>
<td align="center">：n1,n2s&#x2F;p1&#x2F;p2&#x2F;g</td>
<td align="center">将第n1至n2行中所有p1均用p2替代</td>
</tr>
<tr>
<td align="center">：g&#x2F;p1&#x2F;s&#x2F;&#x2F;p2&#x2F;g</td>
<td align="center">将文件中所有p1均用p2替换</td>
</tr>
</tbody></table>
<h2 id="选项设置"><a href="#选项设置" class="headerlink" title="选项设置"></a>选项设置</h2><table>
<thead>
<tr>
<th align="center">选项</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">all</td>
<td align="center">列出所有选项设置情况</td>
</tr>
<tr>
<td align="center">term</td>
<td align="center">设置终端类型</td>
</tr>
<tr>
<td align="center">ignorance</td>
<td align="center">在搜索中忽略大小写</td>
</tr>
<tr>
<td align="center">list</td>
<td align="center">显示制表位(Ctrl+I)和行尾标志（$)</td>
</tr>
<tr>
<td align="center">number</td>
<td align="center">显示行号</td>
</tr>
<tr>
<td align="center">report</td>
<td align="center">显示由面向行的命令修改过的数目</td>
</tr>
<tr>
<td align="center">terse</td>
<td align="center">显示简短的警告信息</td>
</tr>
<tr>
<td align="center">warn</td>
<td align="center">在转到别的文件时若没保存当前文件则显示NO write信息</td>
</tr>
<tr>
<td align="center">nomagic</td>
<td align="center">允许在搜索模式中，使用前面不带“\”的特殊字符</td>
</tr>
<tr>
<td align="center">nowrapscan</td>
<td align="center">禁止vi在搜索到达文件两端时，又从另一端开始</td>
</tr>
<tr>
<td align="center">mesg</td>
<td align="center">允许vi显示其他用户用write写到自己终端上的信息</td>
</tr>
</tbody></table>
<h2 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h2><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">：n1,n2 co n3</td>
<td align="center">将n1行到n2行之间的内容拷贝到第n3行下</td>
</tr>
<tr>
<td align="center">：n1,n2 m n3</td>
<td align="center">将n1行到n2行之间的内容移至到第n3行下</td>
</tr>
<tr>
<td align="center">：n1,n2 d</td>
<td align="center">将n1行到n2行之间的内容删除</td>
</tr>
<tr>
<td align="center">w</td>
<td align="center">保存当前文件</td>
</tr>
<tr>
<td align="center">：e 文件名称</td>
<td align="center">打开文件filename进行编辑</td>
</tr>
<tr>
<td align="center">：x</td>
<td align="center">保存当前文件并退出</td>
</tr>
<tr>
<td align="center">：q</td>
<td align="center">退出vi</td>
</tr>
<tr>
<td align="center">：q!</td>
<td align="center">强制退出vi</td>
</tr>
<tr>
<td align="center">：!command</td>
<td align="center">执行shell命令command</td>
</tr>
<tr>
<td align="center">：n1,n2 w!command</td>
<td align="center">将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入</td>
</tr>
<tr>
<td align="center">：r!command</td>
<td align="center">将命令command的输出结果放到当前行</td>
</tr>
</tbody></table>
<h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><table>
<thead>
<tr>
<th align="center">指令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">“ + ? + 行数 + y + y</td>
<td align="center">将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字</td>
</tr>
<tr>
<td align="center">“ + ? + 第几个 + y + w</td>
<td align="center">将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字</td>
</tr>
<tr>
<td align="center">“ + ? + 第几个 + y + l</td>
<td align="center">将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字</td>
</tr>
<tr>
<td align="center">“ + ? + p</td>
<td align="center">取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字</td>
</tr>
<tr>
<td align="center">行数 + d + d</td>
<td align="center">将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中</td>
</tr>
</tbody></table>
<h3 id="常见问题及应用技巧"><a href="#常见问题及应用技巧" class="headerlink" title="常见问题及应用技巧"></a>常见问题及应用技巧</h3><ol>
<li>在一个新文件中读&#x2F;etc&#x2F;passwd中的内容，取出用户名部分。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi file </span><br><span class="line">	:r /etc/passwd 在打开的文件file中光标所在处读入/etc/passwd </span><br><span class="line">	 :%s/:.*//g 删除/etc/passwd中用户名后面的从冒号开始直到行尾的所有部分。 </span><br><span class="line">	 您也可以在指定的行号后读入文件内容，例如使用命令“:3r /etc/passwd”从新文件的第3行开始读入 /etc/passwd的所有内容。 </span><br><span class="line">	 我们还可以使用以下方法删掉文件中所有的空行及以#开始的注释行。 </span><br><span class="line">	 <span class="comment">#cat squid.conf.default | grep -v ^$ | grep -v ^# </span></span><br></pre></td></tr></table></figure></li>
<li>在打开一个文件编辑后才知道登录的用户对该文件没有写的权限，不能存盘，需要将所做修改存入临时文件。 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi file </span><br><span class="line">:w /tmp/1 保存所做的所有修改，也可以将其中的某一部分修改保存到临时文件，例如仅仅把第20～59行之间的内容存盘成文件/tmp/1，我们可以键入如下命令。 </span><br><span class="line">vi file </span><br><span class="line">:20,59w /tmp/1 </span><br></pre></td></tr></table></figure></li>
<li>用VI编辑一个文件，但需要删除大段的内容。 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">​	首先利用编辑命令“vi file”打开文件，然后将光标移到需要删除的行处按Ctrl+G显示行号，再到结尾处再按Ctrl+G，显示文件结尾的行号。 </span><br><span class="line">​	:23,1045d 假定2次得到的行号为23和1045，则把这期间的内容全删除，也可以在要删除的开始行和结束行中用ma、mb命令标记，然后利用“:a,bd”命令删除。 </span><br></pre></td></tr></table></figure></li>
<li>在整个文件的各行或某几行的行首或行尾加一些字符串。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi file </span><br><span class="line"> 	:3,<span class="variable">$s</span>/^/some string / 在文件的第一行至最后一行的行首插入“some string”。 </span><br><span class="line">	:%s/$/some string/g 在整个文件每一行的行尾添加“some string”。 </span><br><span class="line">	:%s/string1/string2/g 在整个文件中替换“string1”成“string2”。 </span><br><span class="line">     :3,7s/string1/string2/ 仅替换文件中的第3行到第7行中的“string1”成“string2”。 </span><br><span class="line">	注意: 其中s为substitute，%表示所有行，g表示global。 </span><br></pre></td></tr></table></figure></li>
<li>同时编辑2个文件，拷贝一个文件中的文本并粘贴到另一个文件中。 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi file1 file2 </span><br><span class="line"> yy 在文件1的光标处拷贝所在行 </span><br><span class="line">:n 切换到文件2 (n=next) </span><br><span class="line">p 在文件2的光标所在处粘贴所拷贝的行 </span><br><span class="line">:n 切换回文件1 </span><br></pre></td></tr></table></figure></li>
<li>替换文件中的路径。 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用命令“:%s#/usr/bin#/bin#g”可以把文件中所有路径/usr/bin换成/bin。也可以使用命令“:%s//usr/bin//bin/g”实现，其中“”是转义字符，表明其后的“/”字符是具有实际意义的字符，不是分隔符。</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="最常用的VI指令"><a href="#最常用的VI指令" class="headerlink" title="最常用的VI指令"></a>最常用的VI指令</h2><p>1.插入文本</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>i</td>
<td>在当前字符前插入文本</td>
</tr>
<tr>
<td>I</td>
<td>在行首插入文本</td>
</tr>
<tr>
<td>a</td>
<td>在当前字符后添加文本</td>
</tr>
<tr>
<td>A</td>
<td>在行末添加文本</td>
</tr>
<tr>
<td>o</td>
<td>在当前行后面插入一空行</td>
</tr>
<tr>
<td>O</td>
<td>在当前行前面插入一空行</td>
</tr>
<tr>
<td>R</td>
<td>以改写方式输入文本</td>
</tr>
</tbody></table>
<p>2.移动光标 </p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>j或下箭头</td>
<td>向下移动一行</td>
</tr>
<tr>
<td>k或上箭头</td>
<td>向上移动一行</td>
</tr>
<tr>
<td>h或左箭头</td>
<td>左移一个字符</td>
</tr>
<tr>
<td>l或右箭头</td>
<td>右移一个字符</td>
</tr>
<tr>
<td>w</td>
<td>右移一个词</td>
</tr>
<tr>
<td>W</td>
<td>右移一个以空格分隔的词</td>
</tr>
<tr>
<td>b</td>
<td>左移一个词</td>
</tr>
<tr>
<td>B</td>
<td>左移一个以空格分隔的词</td>
</tr>
<tr>
<td>0</td>
<td>移到行首</td>
</tr>
<tr>
<td>Ctrl-F</td>
<td>向前翻页</td>
</tr>
<tr>
<td>Ctrl-B</td>
<td>向后翻页</td>
</tr>
<tr>
<td>nG</td>
<td>到第n行</td>
</tr>
<tr>
<td>G</td>
<td>到最后一行</td>
</tr>
</tbody></table>
<p> 3.替换文本</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>$</td>
<td>到行尾</td>
</tr>
<tr>
<td>(</td>
<td>到句子的开头</td>
</tr>
<tr>
<td>)</td>
<td>到句子的末尾</td>
</tr>
<tr>
<td>{</td>
<td>到段落的开头</td>
</tr>
<tr>
<td>}</td>
<td>到段落的末尾</td>
</tr>
</tbody></table>
<p>4.删除文本</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>替换一个字符</td>
</tr>
<tr>
<td>c</td>
<td>修改文本直到按下Esc键</td>
</tr>
<tr>
<td>cw</td>
<td>修改下一个词</td>
</tr>
<tr>
<td>cnw</td>
<td>修改接下来的n个词</td>
</tr>
</tbody></table>
<p>5.文本编辑 </p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>yy</td>
<td>将一行文本移到缺省缓冲区中</td>
</tr>
<tr>
<td>yn</td>
<td>将下一个词移到缺省缓冲区中</td>
</tr>
<tr>
<td>ynw</td>
<td>将后面的n个词移到缺省缓冲区中</td>
</tr>
<tr>
<td>p</td>
<td>如果缺省缓冲区中包含一行文本，则在当前行后面插入一个空行井将缺省缓冲区中的内容粘贴到这一行中；如果缺省缓冲区中包含多个词，把这些词粘贴到光标的右边．</td>
</tr>
<tr>
<td>P</td>
<td>如果缺省缓冲区中包含一行文本，则正当前行前面插入一个空行井将缺省缓冲区中的内容粘贴到这一行中；如果缺省缓冲区中包含多个词，把这些词粘贴到光标的左边</td>
</tr>
</tbody></table>
<p>6.保存退出 </p>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>zz</td>
<td>保存并退出</td>
</tr>
<tr>
<td>:w  filename</td>
<td>写入文件</td>
</tr>
<tr>
<td>:W</td>
<td>写入文件</td>
</tr>
<tr>
<td>:x</td>
<td>保存(如果当前文件修改过)并退出</td>
</tr>
<tr>
<td>:q!</td>
<td>不保存文件，直接退出</td>
</tr>
<tr>
<td>:q</td>
<td>退出vi</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
      </tags>
  </entry>
  <entry>
    <title>Python内置函数示例</title>
    <url>/2025/01/13/2025011313/</url>
    <content><![CDATA[<p>本文内容较多，建议大家先查看<a href="https://blog.csdn.net/KH_FC/article/details/106135096">函数列表</a>，函数列表内置跳转链接可直接跳转至本文，方便大家快速阅读</p>
<span id="more"></span>
<h2 id="abs"><a href="#abs" class="headerlink" title="abs()"></a>abs()</h2><p>返回数字绝对值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">abs</span>(-<span class="number">100</span>)</span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">abs</span>(<span class="number">10</span>)</span><br><span class="line"><span class="number">10</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="all"><a href="#all" class="headerlink" title="all()"></a>all()</h2><p>判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">all</span>([<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>])</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">all</span>([<span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="any"><a href="#any" class="headerlink" title="any()"></a>any()</h2><p>判断给定的可迭代参数 iterable 是否全部为 False，则返回 False，如果有一个为 True，则返回 True</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">any</span>([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">any</span>([<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="ascii"><a href="#ascii" class="headerlink" title="ascii()"></a>ascii()</h2><p>调用对象的repr()方法，获取该方法的返回值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">ascii</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&#x27;test&#x27;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="bin"><a href="#bin" class="headerlink" title="bin()"></a>bin()</h2><p>将十进制转换为二进制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bin</span>(<span class="number">100</span>)</span><br><span class="line"><span class="string">&#x27;0b1100100&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="oct"><a href="#oct" class="headerlink" title="oct()"></a>oct()</h2><p>将十进制转换为八进制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">oct</span>(<span class="number">100</span>)</span><br><span class="line"><span class="string">&#x27;0o144&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="hex"><a href="#hex" class="headerlink" title="hex()"></a>hex()</h2><p>将十进制转换为十六进制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">hex</span>(<span class="number">100</span>)</span><br><span class="line"><span class="string">&#x27;0x64&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="bool"><a href="#bool" class="headerlink" title="bool()"></a>bool()</h2><p>测试对象是True，还是False</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bool</span>(<span class="number">1</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bool</span>(-<span class="number">1</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bool</span>()</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="bytes"><a href="#bytes" class="headerlink" title="bytes()"></a>bytes()</h2><p>将一个字符转换为字节类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&quot;blxt&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">bytes</span>(s,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;blxt&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="str"><a href="#str" class="headerlink" title="str()"></a>str()</h2><p>将字符、数值类型转换为字符串类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">str</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;123&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="callable"><a href="#callable" class="headerlink" title="callable()"></a>callable()</h2><p>检查一个对象是否是可调用的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">callable</span>(<span class="built_in">str</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">callable</span>(<span class="built_in">int</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">callable</span>(<span class="number">0</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="chr"><a href="#chr" class="headerlink" title="chr()"></a>chr()</h2><p>查看十进制整数对应的ASCll字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">100</span>)</span><br><span class="line"><span class="string">&#x27;d&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="ord"><a href="#ord" class="headerlink" title="ord()"></a>ord()</h2><p>查看某个ascii对应的十进制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="number">97</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="classmethod"><a href="#classmethod" class="headerlink" title="classmethod()"></a>classmethod()</h2><p>修饰符对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"> </span><br><span class="line">class A(object):</span><br><span class="line">    bar = 1</span><br><span class="line">    def func1(self):  </span><br><span class="line">        print (&#x27;foo&#x27;) </span><br><span class="line">    @classmethod</span><br><span class="line">    def func2(cls):</span><br><span class="line">        print (&#x27;func2&#x27;)</span><br><span class="line">        print (cls.bar)</span><br><span class="line">        cls().func1()   # 调用 foo 方法</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func2</span><br><span class="line">1</span><br><span class="line">foo</span><br></pre></td></tr></table></figure>
<h2 id="compile"><a href="#compile" class="headerlink" title="compile()"></a>compile()</h2><p>将字符串编译成python能识别或者可以执行的代码。也可以将文字读成字符串再编译</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>blxt = <span class="string">&quot;print(&#x27;hello&#x27;)&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test = <span class="built_in">compile</span>(blxt,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test</span><br><span class="line">&lt;code <span class="built_in">object</span> &lt;module&gt; at <span class="number">0x02E9B840</span>, file <span class="string">&quot;&quot;</span>, line <span class="number">1</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">exec</span>(test)</span><br><span class="line">hello</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="complex"><a href="#complex" class="headerlink" title="complex()"></a>complex()</h2><p>创建一个复数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">complex</span>(<span class="number">13</span>,<span class="number">18</span>)</span><br><span class="line">(<span class="number">13</span>+<span class="number">18j</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="delattr"><a href="#delattr" class="headerlink" title="delattr()"></a>delattr()</h2><p>删除对象属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"> </span><br><span class="line">class Coordinate:</span><br><span class="line">    x = 10</span><br><span class="line">    y = -5</span><br><span class="line">    z = 0</span><br><span class="line"> </span><br><span class="line">point1 = Coordinate() </span><br><span class="line"> </span><br><span class="line">print(&#x27;x = &#x27;,point1.x)</span><br><span class="line">print(&#x27;y = &#x27;,point1.y)</span><br><span class="line">print(&#x27;z = &#x27;,point1.z)</span><br><span class="line"> </span><br><span class="line">delattr(Coordinate, &#x27;z&#x27;)</span><br><span class="line"> </span><br><span class="line">print(&#x27;--删除 z 属性后--&#x27;)</span><br><span class="line">print(&#x27;x = &#x27;,point1.x)</span><br><span class="line">print(&#x27;y = &#x27;,point1.y)</span><br><span class="line"> </span><br><span class="line"># 触发错误</span><br><span class="line">print(&#x27;z = &#x27;,point1.z)</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br><span class="line">x =  <span class="number">10</span></span><br><span class="line">y =  -<span class="number">5</span></span><br><span class="line">z =  <span class="number">0</span></span><br><span class="line">--删除 z 属性后--</span><br><span class="line">x =  <span class="number">10</span></span><br><span class="line">y =  -<span class="number">5</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;C:\Users\fdgh\Desktop\test.py&quot;</span>, line <span class="number">22</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;z = &#x27;</span>,point1.z)</span><br><span class="line">AttributeError: <span class="string">&#x27;Coordinate&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;z&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="dict"><a href="#dict" class="headerlink" title="dict()"></a>dict()</h2><p>创建数据字典</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>(a=<span class="number">1</span>,b=<span class="number">2</span>)</span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="dir"><a href="#dir" class="headerlink" title="dir()"></a>dir()</h2><p>函数不带参数时，返回当前范围内的变量、方法和定义的类型列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>()</span><br><span class="line">[<span class="string">&#x27;Coordinate&#x27;</span>, <span class="string">&#x27;__annotations__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__file__&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__package__&#x27;</span>, <span class="string">&#x27;__spec__&#x27;</span>, <span class="string">&#x27;point1&#x27;</span>, <span class="string">&#x27;y&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="divmod"><a href="#divmod" class="headerlink" title="divmod()"></a>divmod()</h2><p>分别取商和余数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">divmod</span>(<span class="number">11</span>,<span class="number">2</span>)</span><br><span class="line">(<span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="enumerate"><a href="#enumerate" class="headerlink" title="enumerate()"></a>enumerate()</h2><p>返回一个可以枚举的对象，该对象的next()方法将返回一个元组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>blxt = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">enumerate</span>(blxt))</span><br><span class="line">[(<span class="number">0</span>, <span class="string">&#x27;a&#x27;</span>), (<span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;d&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h2><p>将字符串str当成有效表达式来求值并返回计算结果取出字符串中内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>blxt = <span class="string">&quot;5+1+2&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(blxt)</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h2><p>执行字符串或complie方法编译过的字符串，没有返回值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>blxt = <span class="string">&quot;print(&#x27;hello&#x27;)&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test = <span class="built_in">compile</span>(blxt,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>test</span><br><span class="line">&lt;code <span class="built_in">object</span> &lt;module&gt; at <span class="number">0x02E9B840</span>, file <span class="string">&quot;&quot;</span>, line <span class="number">1</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">exec</span>(test)</span><br><span class="line">hello</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h2><p>过滤器，构建一个序列</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#过滤列表中所有奇数</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_odd</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">newlist = <span class="built_in">filter</span>(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[ <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span> ]</span><br></pre></td></tr></table></figure>
<h2 id="float"><a href="#float" class="headerlink" title="float()"></a>float()</h2><p>将一个字符串或整数转换为浮点数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">float</span>(<span class="number">3</span>)</span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">float</span>(<span class="number">10</span>)</span><br><span class="line"><span class="number">10.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="format"><a href="#format" class="headerlink" title="format()"></a>format()</h2><p>格式化输出字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&#123;0&#125; &#123;1&#125; &#123;3&#125; &#123;2&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>)</span><br><span class="line"><span class="string">&#x27;a b d c&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&quot;网站名：&#123;name&#125;,地址：&#123;url&#125;&quot;</span>.<span class="built_in">format</span>(name=<span class="string">&quot;blxt&quot;</span>,url=<span class="string">&quot;www.blxt.best&quot;</span>))</span><br><span class="line">网站名：blxt,地址：www.blxt.best</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="frozenset"><a href="#frozenset" class="headerlink" title="frozenset()"></a>frozenset()</h2><p>创建一个不可修改的集合</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">frozenset</span>([<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>])</span><br><span class="line"><span class="built_in">frozenset</span>(&#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="getattr"><a href="#getattr" class="headerlink" title="getattr()"></a>getattr()</h2><p>获取对象属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">... </span>    bar = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">getattr</span>(a, <span class="string">&#x27;bar&#x27;</span>)        <span class="comment"># 获取属性 bar 值</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">getattr</span>(a, <span class="string">&#x27;bar2&#x27;</span>)       <span class="comment"># 属性 bar2 不存在，触发异常</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;A&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;bar2&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">getattr</span>(a, <span class="string">&#x27;bar2&#x27;</span>, <span class="number">3</span>)    <span class="comment"># 属性 bar2 不存在，但设置了默认值</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="globals"><a href="#globals" class="headerlink" title="globals()"></a>globals()</h2><p>返回一个描述当前全局变量的字典</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="built_in">globals</span>()) <span class="comment"># globals 函数返回一个全局变量的字典，包括所有导入的变量。</span></span><br><span class="line">&#123;<span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;runoob&#x27;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>&#125;</span><br></pre></td></tr></table></figure>
<h2 id="hasattr"><a href="#hasattr" class="headerlink" title="hasattr()"></a>hasattr()</h2><p>函数用于判断对象是否包含对应的属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">... </span>    bar = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">hasattr</span>(a,<span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">hasattr</span>(a,<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<h2 id="hash"><a href="#hash" class="headerlink" title="hash()"></a>hash()</h2><p>返回对象的哈希值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">... </span>    bar = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">hash</span>(a)</span><br><span class="line">-<span class="number">2143982521</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="help"><a href="#help" class="headerlink" title="help()"></a>help()</h2><p>返回对象的帮助文档</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">... </span>    bar = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(a)</span><br><span class="line">Help on A <span class="keyword">in</span> module __main__ <span class="built_in">object</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(builtins.<span class="built_in">object</span>)</span><br><span class="line"> |  Data descriptors defined here:</span><br><span class="line"> |  </span><br><span class="line"> |  __dict__</span><br><span class="line"> |      dictionary <span class="keyword">for</span> instance variables (<span class="keyword">if</span> defined)</span><br><span class="line"> |  </span><br><span class="line"> |  __weakref__</span><br><span class="line"> |      <span class="built_in">list</span> of weak references to the <span class="built_in">object</span> (<span class="keyword">if</span> defined)</span><br><span class="line"> |  </span><br><span class="line"> |  ----------------------------------------------------------------------</span><br><span class="line"> |  Data <span class="keyword">and</span> other attributes defined here:</span><br><span class="line"> |  </span><br><span class="line"> |  bar = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="id"><a href="#id" class="headerlink" title="id()"></a>id()</h2><p>返回对象的内存地址</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">... </span>    bar = <span class="number">1</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(a)</span><br><span class="line"><span class="number">56018040</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="input"><a href="#input" class="headerlink" title="input()"></a>input()</h2><p>获取用户输入内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">input</span>()</span><br><span class="line"><span class="meta">... </span>test</span><br><span class="line"><span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="int"><a href="#int" class="headerlink" title="int()"></a>int()</h2><p>用于将一个字符串或数字转换为整型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">int</span>(<span class="string">&#x27;14&#x27;</span>,<span class="number">16</span>)</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">int</span>(<span class="string">&#x27;14&#x27;</span>,<span class="number">8</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">int</span>(<span class="string">&#x27;14&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"><span class="number">14</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance()"></a>isinstance()</h2><p>来判断一个对象是否是一个已知的类型，类似 type()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>test = <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(test,<span class="built_in">int</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(test,<span class="built_in">str</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="issubclass"><a href="#issubclass" class="headerlink" title="issubclass()"></a>issubclass()</h2><p>用于判断参数 class 是否是类型参数 classinfo 的子类</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line"><span class="class">    <span class="title">pass</span></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">B</span>(<span class="title">A</span>):</span></span><br><span class="line"><span class="class">    <span class="title">pass</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class"><span class="title">print</span>(<span class="title">issubclass</span>(<span class="title">B</span>,<span class="title">A</span>))    # 返回 <span class="title">True</span></span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure>
<h2 id="iter"><a href="#iter" class="headerlink" title="iter()"></a>iter()</h2><p>返回一个可迭代对象，sentinel可省略</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;lst = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">iter</span>(lst):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
<h2 id="len"><a href="#len" class="headerlink" title="len()"></a>len()</h2><p>返回对象的长度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">200</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(dic)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="list"><a href="#list" class="headerlink" title="list()"></a>list()</h2><p>返回可变序列类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (<span class="number">123</span>,<span class="string">&#x27;xyz&#x27;</span>,<span class="string">&#x27;zara&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(a)</span><br><span class="line">[<span class="number">123</span>, <span class="string">&#x27;xyz&#x27;</span>, <span class="string">&#x27;zara&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h2><p>返回一个将function应用于iterable中每一项并输出其结果的迭代器</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">def</span> <span class="title function_">square</span>(<span class="params">x</span>) :            <span class="comment"># 计算平方数</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(square, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])   <span class="comment"># 计算列表各个元素的平方</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])  <span class="comment"># 使用 lambda 匿名函数</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提供了两个列表，对相同位置的列表数据进行相加</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">map</span>(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>])</span><br><span class="line">[<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">19</span>]</span><br></pre></td></tr></table></figure>
<h2 id="max"><a href="#max" class="headerlink" title="max()"></a>max()</h2><p>返回最大值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>)</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="min"><a href="#min" class="headerlink" title="min()"></a>min()</h2><p>返回最小值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">min</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="memoryview"><a href="#memoryview" class="headerlink" title="memoryview()"></a>memoryview()</h2><p>返回给定参数的内存查看对象(memory view)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;v = <span class="built_in">memoryview</span>(<span class="built_in">bytearray</span>(<span class="string">&quot;abcefg&quot;</span>, <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(v[<span class="number">1</span>])</span><br><span class="line"><span class="number">98</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(v[-<span class="number">1</span>])</span><br><span class="line"><span class="number">103</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(v[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line">&lt;memory at <span class="number">0x10f543a08</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(v[<span class="number">1</span>:<span class="number">4</span>].tobytes())</span><br><span class="line"><span class="string">b&#x27;bce&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="next"><a href="#next" class="headerlink" title="next()"></a>next()</h2><p>返回可迭代对象的下一个元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">iter</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(a)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;pyshell#72&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">next</span>(a)</span><br><span class="line">StopIteration</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="object"><a href="#object" class="headerlink" title="object()"></a>object()</h2><p>返回一个没有特征的新对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">object</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="open"><a href="#open" class="headerlink" title="open()"></a>open()</h2><p>返回文件对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">&#x27;123/123/123&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="pow"><a href="#pow" class="headerlink" title="pow()"></a>pow()</h2><p>base为底的exp次幂，如果mod给出，取余</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">pow</span> (<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="print"><a href="#print" class="headerlink" title="print()"></a>print()</h2><p>打印对象</p>
<h2 id="class-property"><a href="#class-property" class="headerlink" title="class property()"></a>class property()</h2><p>返回property属性</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>._x = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getx</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._x</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setx</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="variable language_">self</span>._x = value</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delx</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span>._x</span><br><span class="line"> </span><br><span class="line">    x = <span class="built_in">property</span>(getx, setx, delx, <span class="string">&quot;I&#x27;m the &#x27;x&#x27; property.&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="range"><a href="#range" class="headerlink" title="range()"></a>range()</h2><p>生成一个不可变序列</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">range</span>(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="reversed"><a href="#reversed" class="headerlink" title="reversed()"></a>reversed()</h2><p>返回一个反向的iterator</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">reversed</span>(a)))</span><br><span class="line">[<span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;t&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="round（）"><a href="#round（）" class="headerlink" title="round（）"></a>round（）</h2><p>四舍五入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span> (<span class="number">3.33333333</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">3.3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="class-set"><a href="#class-set" class="headerlink" title="class set()"></a>class set()</h2><p>返回一个set对象，可实现去重</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">set</span>(a)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="class-slice"><a href="#class-slice" class="headerlink" title="class slice()"></a>class slice()</h2><p>返回一个表示有1range所指定的索引集的slice对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="built_in">slice</span>(<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>)]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="sorted"><a href="#sorted" class="headerlink" title="sorted()"></a>sorted()</h2><p>对所有可迭代的对象进行排序操作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(a,reverse=<span class="literal">True</span>)</span><br><span class="line">[<span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="staticmethod"><a href="#staticmethod" class="headerlink" title="@staticmethod"></a>@staticmethod</h2><p>将方法转换为静态方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;blxt&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">C.f();          <span class="comment"># 静态方法无需实例化</span></span><br><span class="line">cobj = C()</span><br><span class="line">cobj.f()        <span class="comment"># 也可以实例化后调用</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test</span><br><span class="line">test</span><br></pre></td></tr></table></figure>
<h2 id="sum"><a href="#sum" class="headerlink" title="sum()"></a>sum()</h2><p>求和</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(a)</span><br><span class="line"><span class="number">40</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="super"><a href="#super" class="headerlink" title="super()"></a>super()</h2><p>返回一个代理对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">     <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x</span>):</span><br><span class="line">         y = x+<span class="number">1</span></span><br><span class="line">         <span class="built_in">print</span>(y)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="built_in">super</span>().add(x)</span><br><span class="line">b = B()</span><br><span class="line">b.add(<span class="number">2</span>)  <span class="comment"># 3</span></span><br></pre></td></tr></table></figure>
<h2 id="tuple"><a href="#tuple" class="headerlink" title="tuple()"></a>tuple()</h2><p>不可变的序列类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">&#x27;www&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b =<span class="built_in">tuple</span>(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">(<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span></span><br></pre></td></tr></table></figure>
<h2 id="zip"><a href="#zip" class="headerlink" title="zip()"></a>zip()</h2><p>将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zipped = <span class="built_in">zip</span>(a,b)     <span class="comment"># 打包为元组的列表</span></span><br><span class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">zip</span>(a,c)              <span class="comment"># 元素个数与最短的列表一致</span></span><br><span class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">zip</span>(*zipped)          <span class="comment"># 与 zip 相反，*zipped 可理解为解压，返回二维矩阵式</span></span><br><span class="line">[(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python内置函数列表</title>
    <url>/2025/01/13/2025011314/</url>
    <content><![CDATA[<p>Python内置函数列表</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>函数（点击可跳转示例）</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t0">abs()</a></td>
<td>返回数字绝对值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t1">all()</a></td>
<td>判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t2">any()</a></td>
<td>判断给定的可迭代参数 iterable 是否全部为 False，则返回 False，如果有一个为 True，则返回 True</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t3">ascii()</a></td>
<td>调用对象的repr()方法，获取该方法的返回值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t4">bin()</a></td>
<td>将十进制转换为二进制</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t5">oct()</a></td>
<td>将十进制转换为八进制</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t6">hex()</a></td>
<td>将十进制转换为十六进制</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t7">bool()</a></td>
<td>测试对象是True，还是False</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t8">bytes()</a></td>
<td>将一个字符转换为字节类型</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t9">str()</a></td>
<td>将字符、数值类型转换为字符串类型</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t10">callable()</a></td>
<td>检查一个对象是否是可调用的</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t11">chr()</a></td>
<td>查看十进制整数对应的ASCll字符</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t12">ord()</a></td>
<td>查看某个ascii对应的十进制</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t13">classmethod()</a></td>
<td>修饰符对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t14">compile()</a></td>
<td>将字符串编译成python能识别或者可以执行的代码。也可以将文字读成字符串再编译</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t15">complex ()</a></td>
<td>创建一个复数</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t16">delattr()</a></td>
<td>删除对象属性</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t17">dict()</a></td>
<td>创建数据字典</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t18">dir() </a></td>
<td>函数不带参数时，返回当前范围内的变量、方法和定义的类型列表</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t19">divmod()</a></td>
<td>分别取商和余数</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t20">enumerate()</a></td>
<td>返回一个可以枚举的对象，该对象的next()方法将返回一个元组</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t21">eval()</a></td>
<td>将字符串str当成有效表达式来求值并返回计算结果取出字符串中内容</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t22">exec()</a></td>
<td>执行字符串或complie方法编译过的字符串，没有返回值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t23">filter()</a></td>
<td>过滤器，构建一个序列，等价于</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t24">float()</a></td>
<td>将一个字符串或整数转换为浮点数</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t25">format()</a></td>
<td>格式化输出字符串</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t26">frozenset()</a></td>
<td>创建一个不可修改的集合</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t27">getattr()</a></td>
<td>获取对象属性</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t28">globals()</a></td>
<td>返回一个描述当前全局变量的字典</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t29">hasattr()</a></td>
<td>函数用于判断对象是否包含对应的属性</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t30">hash()</a></td>
<td>返回对象的哈希值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t31">help()</a></td>
<td>返回对象的帮助文档</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t32">id()</a></td>
<td>返回对象的内存地址</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t33">input()</a></td>
<td>获取用户输入内容</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t34">int()</a></td>
<td>用于将一个字符串或数字转换为整型</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t35">isinstance()</a></td>
<td>来判断一个对象是否是一个已知的类型，类似 type()</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t36">issubclass()</a></td>
<td>用于判断参数 class 是否是类型参数 classinfo 的子类</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t37">iter()</a></td>
<td>返回一个可迭代对象，sentinel可省略</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t38">len()</a></td>
<td>返回对象的长度</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t39">list()</a></td>
<td>返回可变序列类型</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t40">map()</a></td>
<td>返回一个将function应用于iterable中每一项并输出其结果的迭代器</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t41">max()</a></td>
<td>返回最大值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t42">min()</a></td>
<td>返回最小值</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t43">memoryview()</a></td>
<td>返回给定参数的内存查看对象(memory view)</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t44">next()</a></td>
<td>返回可迭代对象的下一个元素</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t45">object()</a></td>
<td>返回一个没有特征的新对象</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t46">open()</a></td>
<td>返回文件对象</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t47">pow()</a></td>
<td>base为底的exp次幂，如果mod给出，取余</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t48">print()</a></td>
<td>打印对象</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t49">class property()</a></td>
<td>返回property属性</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t50">range()</a></td>
<td>生成一个不可变序列</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t51">reversed()</a></td>
<td>返回一个反向的iterator</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t52">round（）</a></td>
<td>四舍五入</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t53">class set()</a></td>
<td>返回一个set对象，可实现去重</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t54">class slice()</a></td>
<td>返回一个表示有1range所指定的索引集的slice对象</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t55">sorted()</a></td>
<td>对所有可迭代的对象进行排序操作</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t56">@staticmethod</a></td>
<td>将方法转换为静态方法</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t57">sum()</a></td>
<td>求和</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t58">super()</a></td>
<td>返回一个代理对象</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t59">tuple()</a></td>
<td>不可变的序列类型</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/106188197#t60">zip()</a></td>
<td>将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>制作网页黑白背景</title>
    <url>/2025/01/13/2025011315/</url>
    <content><![CDATA[<p>2020年4月4日为悼念次重大疫情逝去的人们，各大网站整体变为了黑白背景，下面是各大网站的相关截图</p>
<span id="more"></span>
<p><strong>百度</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/8124fda7dcb9a157d959da7ba6d8c3e9.png) -->
<script> document.write('<img src="'+ imgurl +'1736750609/8124fda7dcb9a157d959da7ba6d8c3e9.png">'); </script><br>

<p><strong>CSDN</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/af84e6f2928db749add6450bbcf9fba5.png) -->
<script> document.write('<img src="'+ imgurl +'1736750609/af84e6f2928db749add6450bbcf9fba5.png">'); </script><br>

<p><strong>JD</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/9bcb82835c541799c1ea4804ee0089b3.png) -->
<script> document.write('<img src="'+ imgurl +'1736750609/9bcb82835c541799c1ea4804ee0089b3.png">'); </script><br>

<p><strong>淘宝</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/cc79fd0603e61cf8f3c8a4c3b53b2079.png) -->
<script> document.write('<img src="'+ imgurl +'1736750609/cc79fd0603e61cf8f3c8a4c3b53b2079.png">'); </script><br>

<p>那么下面我们就来说一下如何使设置网站背景为黑白，其实很简单只需要加入一段CSS样式就可以了，具体代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">html&#123;</span><br><span class="line">-webkit-filter: grayscale(100%);</span><br><span class="line">-moz-filter: grayscale(100%);</span><br><span class="line">-ms-filter: grayscale(100%);</span><br><span class="line">-o-filter: grayscale(100%);</span><br><span class="line">filter: grayscale(100%);</span><br><span class="line">filter: gray; </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令总结大全，包含所有linux命令</title>
    <url>/2025/01/13/2025011311/</url>
    <content><![CDATA[<p><strong>使用说明：此文档包含所有的Linux命令，只有你想不到的没有你看不到的，此文档共计10万余字，有8400多行，预计阅读时间差不多需要3个小时左右，所以要给大家说一说如何阅读此文档</strong></p>
<span id="more"></span>
<p><strong>为了方便大家阅读，我这里做了相关索引，建议使用搜索的方式阅读，如果您有大把时光去阅读的话您可以试着去</strong><br><strong>建议直接在csdn关注此博客，在博主资源中下载<br>搜索的话直接使用浏览器的搜索方式就可以了，我这里使用谷歌浏览器进行演示</strong></p>
<p><strong>打开文档</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/2bc50529707898567f8cf45c1ba5f4a2.png) -->
<script> document.write('<img src="'+ imgurl +'1736749733/2bc50529707898567f8cf45c1ba5f4a2.png">'); </script><br>

<p><strong>打开谷歌的搜索，键入ctrl+f</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/29058b6b3d12d9d953885c19b8286941.png) -->
<script> document.write('<img src="'+ imgurl +'1736749733/29058b6b3d12d9d953885c19b8286941.png">'); </script><br>

<p><strong>右上角出现搜索框后，直接在搜索框中输入要查询的命令，但是查询结果有很多，如我直接输入ls</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/7e12bf65379bc4ce97892df99fc9856f.png) -->
<script> document.write('<img src="'+ imgurl +'1736749733/7e12bf65379bc4ce97892df99fc9856f.png">'); </script><br>

<p><strong>共计123个结果，如果要准确搜索您需要在命令前面加三个*号，注意后面不要加空格</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/ad516c9b9c4f16158adddb9cd4f20f06.png) -->
<script> document.write('<img src="'+ imgurl +'1736749733/ad516c9b9c4f16158adddb9cd4f20f06.png">'); </script>

<p><strong>这下只有6个结果了</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/16ca8bba47547ac98a7c74b30f32dff3.png) -->
<script> document.write('<img src="'+ imgurl +'1736749733/16ca8bba47547ac98a7c74b30f32dff3.png">'); </script>

<h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><h3 id="bye"><a href="#bye" class="headerlink" title="***bye"></a>***bye</h3><p> <strong>说明</strong>:  中断FTP连线并结束程序</p>
<p><strong>语法</strong>:  bye</p>
<p><strong>补充说明</strong>:  在ftp模式下，输入bye即可中断目前的连线作业，并结束ftp的执行</p>
<h3 id="ftp"><a href="#ftp" class="headerlink" title="***ftp"></a>***ftp</h3><p><strong>说明</strong>:  设置文件系统相关功能</p>
<p><strong>语法</strong>:  ftp [-dignv][主机名称或IP地址]</p>
<p><strong>补充说明</strong>:  FTP是ARPANet的标准文件传输协议，该网络就是现今Internet的前身</p>
<p><strong>参数</strong>:   </p>
<p>​		-d  详细显示指令执行过程，便于排错或分析程序执行的情形。  </p>
<p>​		-i  关闭互动模式，不询问任何问题。 </p>
<p>​		-g  关闭本地主机文件名称支持特殊字符的扩充特性。  </p>
<p>​		-n  不使用自动登陆。  </p>
<p>​		-v  显示指令执行过程。</p>
<h3 id="ftpcount"><a href="#ftpcount" class="headerlink" title="***ftpcount"></a>***ftpcount</h3><p><strong>功能说明</strong>: 显示目前以FTP登入的用户人数。  </p>
<p><strong>语法</strong>: ftpcount  </p>
<p><strong>补充说明</strong>: 执行这项指令可得知目前用FTP登入系统的人数以及FTP登入人数的上限。</p>
<h3 id="ftpshut"><a href="#ftpshut" class="headerlink" title="***ftpshut"></a>***ftpshut</h3><p><strong>功能说明</strong>: 在指定的时间关闭FTP服务器。  </p>
<p><strong>语法</strong>: ftpshut [-d&lt;分钟&gt;][-l&lt;分钟&gt;][关闭时间][“警告信息”]  </p>
<p><strong>补充说明</strong>: 本指令提供系统管理者在设置的时间关闭FTP服务器，且能在关闭之前发出警告信息通知用户。关闭时间若设置后为”none”，则会马上关闭服务器。如果采用”+30”的方式来设置表示服务器在30分钟之后关闭。依次类推，假设使用”1130”的格式则代表服务器会在每日的11时30分关闭，时间格式为24小时制。FTP服务器关闭后，在&#x2F;etc目录下会产生一个名称为shutmsg的文件，把它删除后即可再度启动FTP服务器的功能。  </p>
<p><strong>参数</strong>:   </p>
<p>​		-d&lt;分钟&gt;  切断所有FTP连线时间。  </p>
<p>​		-l&lt;分钟&gt;  停止接受FTP登入的时间。</p>
<h3 id="ftpwho"><a href="#ftpwho" class="headerlink" title="***ftpwho"></a>***ftpwho</h3><p><strong>功能说明</strong>: 显示目前所有以FTP登入的用户信息。<br><strong>语法</strong>: ftpwho  </p>
<p><strong>补充说明</strong>: 执行这项指令可得知目前用FTP登入系统的用户有那些人，以及他们正在进行的操作。</p>
<h3 id="ncftp"><a href="#ncftp" class="headerlink" title="***ncftp"></a>***ncftp</h3><p><strong>功能说明</strong>: 传输文件。  </p>
<p><strong>语法</strong>: ncftp [主机或IP地址]  </p>
<p><strong>补充说明</strong>: FTP让用户得以下载存放于服务器主机的文件，也能将文件上传到远端主机放置。NcFTP是文字模式FTP程序的佼佼者，它具备多样特色， 包括显示传输速率，下载进度，自动续传，标住书签，可通过防火墙和代理服务器等。</p>
<h3 id="tftp"><a href="#tftp" class="headerlink" title="***tftp"></a>***tftp</h3><p><strong>功能说明</strong>: 传输文件。  </p>
<p><strong>语法</strong>: tftp [主机名称或IP地址]  </p>
<p><strong>补充说明</strong>: FTP让用户得以下载存放于远端主机的文件，也能将文件上传到远端主机放置。tftp是简单的文字模式ftp程序，它所使用的指令和FTP类似。</p>
<h3 id="uucico"><a href="#uucico" class="headerlink" title="*** uucico"></a>*** uucico</h3><p><strong>功能说明</strong>: UUCP文件传输服务程序。  </p>
<p><strong>语法</strong>: uucico [-cCDefqvwz][-i&lt;类型&gt;][-I&lt;文件&gt;][-p&lt;连接端口号码&gt;][-][-rl][-s&lt;主机&gt;][-S&lt;主机&gt;][-u&lt;用户&gt;][-x&lt;类型&gt;][–help]  </p>
<p><strong>补充说明</strong>: uucico是用来处理uucp或uux送到队列的文件传输工具。uucico有两种工作模式：主动模式和附属模式。当在主动模式下时，uucico会调用远端主机；在附属模式下时，uucico则接受远端主机的调用。  </p>
<p><strong>参数</strong>:   </p>
<p>-c或–quiet  当不执行任何工作时，不要更改记录文件的内容及更新目前的状态。  </p>
<p>-C或–ifwork  当有工作要执行时，才调用-s或-S参数所指定主机。  </p>
<p>-D或–nodetach  不要与控制终端机离线。  </p>
<p>-e或–loop  在附属模式下执行，并且出现要求登入的提示画面。  </p>
<p>-f或–force  当执行错误时，不等待任何时间即重新调用主机。  </p>
<p>-i&lt;类型&gt;或–stdin&lt;类型&gt;  当使用到标准输入设备时，指定连接端口的类型。  </p>
<p>-I&lt;文件&gt;–config&lt;文件&gt;  指定使用的配置文件。  </p>
<p>-l或–prompt  出现要求登入的提示画面。  </p>
<p>-p&lt;连接端口号码&gt;或-port&lt;连接端口号码&gt;  指定连接端口号码。  </p>
<p>-q或–quiet  不要启动uuxqt服务程序。  </p>
<p>-r0或–slave  以附属模式启动。  </p>
<p>-s&lt;主机&gt;或–system&lt;主机&gt;  调用指定的主机。  </p>
<p>-u&lt;用户&gt;或–login&lt;用户&gt;  指定登入的用户帐号，而不允许输入任意的登入帐号。  </p>
<p>-v或–version  显示版本信息，并且结束程序。  </p>
<p>-w或–wait  在主动模式下，当执行调用动作时，则出现要求登入的提示画面。  </p>
<p>-x&lt;类型&gt;或-X&lt;类型&gt;或outgoing-debug&lt;类型&gt;  启动指定的排错模式。  </p>
<p>-z或–try-next  当执行不成功时，尝试下一个选择而不结束程序。  </p>
<p>–help  显示帮助，并且结束程序。</p>
<h3 id="uucp"><a href="#uucp" class="headerlink" title="***uucp"></a>***uucp</h3><p><strong>功能说明</strong>: 在Unix系统之间传送文件。  </p>
<p><strong>语法</strong>: uucp [-cCdfjmrRtvW][-g&lt;等级&gt;][-I&lt;配置文件&gt;][-n&lt;用户&gt;][-x&lt;类型&gt;][–help][…来源][目的]  </p>
<p><strong>补充说明</strong>: UUCP为Unix系统之间，通过序列线来连线的协议。uucp使用UUCP协议，主要的功能为传送文件。<br><strong>参数</strong> :   </p>
<p>-c或–nocopy  不用将文件复制到缓冲区。  </p>
<p>-C或–copy  将文件复制到缓冲区。 </p>
<p>-d或–directiories  在传送文件时，自动在[目的]建立必要的目录。  </p>
<p>-f或–nodirectiories  在传送文件时，若需要在[目的]建立目录，则放弃执行该作业。  </p>
<p>-g&lt;等级&gt;或–grade&lt;等级&gt;  指定文件传送作业的优先顺序。  </p>
<p>-I&lt;配置文件&gt;或–config&lt;配置文件&gt;  指定uucp配置文件。 </p>
<p> -j或–jobid  显示作业编号。  </p>
<p>-m或–mail  作业结束后，以电子邮件报告作业是否顺利完成。  </p>
<p>-n&lt;用户&gt;或–notify&lt;用户&gt;  作业结束后，以电子邮件向指定的用户报告作业是否顺利完成。  </p>
<p>-r或–nouucico  不要立即启动uucico服务程序，仅将作业送到队列中，待稍后再执行。 </p>
<p>-R或–recursive  若[来源]为目录，则将整个目录包含子目录复制到[目的]。  </p>
<p>-t或–uuto  将最后一个参数视为”主机名!用户”。  </p>
<p>-v或–version  显示版本信息。  </p>
<p>-W或–noexpand  不要将目前所在的目录加入路径。  </p>
<p>-x&lt;类型&gt;或–debug&lt;类型&gt;启动指定的排错模式。  </p>
<p>–help  显示帮助。  [源…]  指定源文件或路径。  [目的]  指定目标文件或路径。</p>
<h3 id="uupick"><a href="#uupick" class="headerlink" title="***uupick"></a>***uupick</h3><p><strong>功能说明</strong>: 处理传送进来的文件。  </p>
<p><strong>语法</strong>: uupick [-v][-I&lt;配置文件&gt;][-s&lt;主机&gt;][-x&lt;层级&gt;][–help]  </p>
<p><strong>补充说明</strong>: 当其他主机通过UUCP将文件传送进来时，可利用uupick指令取出这些文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-I&lt;配置文件&gt;或–config&lt;配置文件&gt;  指定配置文件。  </p>
<p>-s&lt;主机&gt;或–system&lt;主机&gt;  处理由指定主机传送过来的文件。  </p>
<p>-v或–version  显示版本信息。  </p>
<p>–help  显示帮助。</p>
<h3 id="uuto"><a href="#uuto" class="headerlink" title="***uuto"></a>***uuto</h3><p><strong>功能说明</strong>: 将文件传送到远端的UUCP主机。  </p>
<p><strong>语法</strong>: uuto [文件][目的]  </p>
<p><strong>补充说明</strong>: uuto为script文件，它实际上会执行uucp，用来将文件传送到远端UUCP主机，并在完成工作后，以邮件通知远端主机上的用户。  </p>
<p><strong>参数</strong>:   相关参数请参考uucp指令。</p>
<h2 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h2><h3 id="ar"><a href="#ar" class="headerlink" title="***ar"></a>***ar</h3><p><strong>功能说明</strong>: 建立或修改备存文件，或是从备存文件中抽取文件。  </p>
<p><strong>语法</strong>: ar[-dmpqrtx][cfosSuvV][a&lt;成员文件&gt;][b&lt;成员文件&gt;][i&lt;成员文件&gt;][备存文件][成员文件]  </p>
<p><strong>补充说明</strong>: ar可让您集合许多文件，成为单一的备存文件。在备存文件中，所有成员文件皆保有原来的属性与权限。  </p>
<p><strong>参数</strong>:  </p>
<p>指令参数：</p>
<p>-d 删除备存文件中的成员文件。  　</p>
<p>-m 变更成员文件在备存文件中的次序。  　</p>
<p>-p 显示备存文件中的成员文件内容。  　</p>
<p>-q 将问家附加在备存文件末端。  　</p>
<p>-r 将文件插入备存文件中。  　</p>
<p>-t 显示备存文件中所包含的文件。  　</p>
<p>-x 自备存文件中取出成员文件。  　</p>
<p>选项参数 ： 　</p>
<p>a&lt;成员文件&gt; 将文件插入备存文件中指定的成员文件之后。  　</p>
<p>b&lt;成员文件&gt; 将文件插入备存文件中指定的成员文件之前。  　</p>
<p>c 建立备存文件。  　</p>
<p>f 为避免过长的文件名不兼容于其他系统的ar指令指令，因此可利用此参数，截掉要放入备存文件中过长的成员文件名称。  　</p>
<p>i&lt;成员文件&gt; 将问家插入备存文件中指定的成员文件之前。  　</p>
<p>o 保留备存文件中文件的日期。  　</p>
<p>s 若备存文件中包含了对象模式，可利用此参数建立备存文件的符号表。  　</p>
<p>S 不产生符号表。  　</p>
<p>u 只将日期较新文件插入备存文件中。  　</p>
<p>v 程序执行时显示详细的信息。  　</p>
<p>V 显示版本信息。</p>
<h3 id="bunzip2"><a href="#bunzip2" class="headerlink" title="***bunzip2"></a>***bunzip2</h3><p><strong>功能说明</strong>: .bz2文件的解压缩程序。  </p>
<p><strong>语法</strong>: bunzip2 [-fkLsvV][.bz2压缩文件]  </p>
<p><strong>补充说明</strong>: bunzip2可解压缩.bz2格式的压缩文件。bunzip2实际上是bzip2的符号连接，执行bunzip2与bzip2 -d的效果相同。  </p>
<p><strong>参数</strong>:  　</p>
<p>-f或–force 解压缩时，若输出的文件与现有文件同名时，预设不会覆盖现有的文件。若要覆盖，请使用此参数。  　</p>
<p>-k或–keep 在解压缩后，预设会删除原来的压缩文件。若要保留压缩文件，请使用此参数。  　</p>
<p>-s或–small 降低程序执行时，内存的使用量。  　</p>
<p>-v或–verbose 解压缩文件时，显示详细的信息。  　</p>
<p>-l,–license,-V或–version 显示版本信息。</p>
<h3 id="bzip2"><a href="#bzip2" class="headerlink" title="***bzip2"></a>***bzip2</h3><p><strong>功能说明</strong>: .bz2文件的压缩程序。 </p>
<p><strong>语法</strong>: bzip2 [-cdfhkLstvVz][–repetitive-best][–repetitive-fast][- 压缩等级][要压缩的文件] </p>
<p><strong>补充说明</strong>: bzip2采用新的压缩演算法，压缩效果比传统的LZ77&#x2F;LZ78压缩演算法来得好。若没有加上任何参数，bzip2压缩完文件后会产生.bz2的压缩文件，并删除原始的文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-c或–stdout 将压缩与解压缩的结果送到标准输出。  　</p>
<p>-d或–decompress 执行解压缩。  　</p>
<p>-f或–force bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖，请使用此参数。  -h或–help 显示帮助。  　</p>
<p>-k或–keep bzip2在压缩或解压缩后，会删除原始的文件。若要保留原始文件，请使用此参数。  　-s或–small 降低程序执行时内存的使用量。  　</p>
<p>-t或–test 测试.bz2压缩文件的完整性。  　</p>
<p>-v或–verbose 压缩或解压缩文件时，显示详细的信息。  　</p>
<p>-z或–compress 强制执行压缩。  　</p>
<p>-L,–license, 　</p>
<p>-V或–version 显示版本信息。  　</p>
<p>–repetitive-best 若文件中有重复出现的资料时，可利用此参数提高压缩效果。  　</p>
<p>–repetitive-fast 若文件中有重复出现的资料时，可利用此参数加快执行速度。  　</p>
<p>-压缩等级 压缩时的区块大小。</p>
<h3 id="bzip2recover"><a href="#bzip2recover" class="headerlink" title="***bzip2recover"></a>***bzip2recover</h3><p><strong>功能说明</strong>: 用来修复损坏的.bz2文件。  </p>
<p><strong>语法</strong>: bzip2recover [.bz2 压缩文件]  </p>
<p><strong>补充说明</strong>: bzip2是以区块的方式来压缩文件，每个区块视为独立的单位。因此，当某一区块损坏时，便可利用bzip2recover，试着将文件中的区块隔开来，以便解压缩正常的区块。通常只适用在压缩文件很大的情况。</p>
<h3 id="compress"><a href="#compress" class="headerlink" title="***compress"></a>***compress</h3><p><strong>功能说明</strong>: 压缩或解压文件。  </p>
<p><strong>语法</strong>: compress [-cdfrvV][-b &lt;压缩效率&gt;][文件或目录…]  </p>
<p><strong>补充说明</strong>: compress是个历史悠久的压缩程序，文件经它压缩后，其名称后面会多出”.Z”的扩展名。当要解压缩时，可执行uncompress指令。事实上uncompress是指向compress的符号连接，因此不论是压缩或解压缩，都可通过compress指令单独完成。  </p>
<p><strong>参数</strong>:  　</p>
<p>-b&lt;压缩效率&gt; 压缩效率是一个介于9－16的数值，预设值为”16”，指定愈大的数值，压缩效率就愈高。  　</p>
<p>-c 把压缩后的文件输出到标准输出设备，不去更动原始文件。  　</p>
<p>-d 对文件进行解压缩而非压缩。  　</p>
<p>-f 强制保存压缩文件，不理会文件名称或硬连接是否存在，该文件是否为符号连接以及压缩效率高低的问题。  　</p>
<p>-r 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v 显示指令执行过程。  　</p>
<p>-V 显示指令版本及程序预设值。</p>
<h3 id="cpio"><a href="#cpio" class="headerlink" title="***cpio"></a>***cpio</h3><p><strong>功能说明</strong>: 备份文件。  </p>
<p><strong>语法</strong>: cpio [-0aABckLovV][-C &lt;输入&#x2F;输出大小&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-O &lt;备份档&gt;][–block-size&#x3D;&lt;区块大小&gt;][–force-local][–help][–quiet][–version] 或 cpio [-bBcdfikmnrsStuvV][-C &lt;输入&#x2F;输出大小&gt;][-E &lt;范本文件&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-I &lt;备份档&gt;][-M &lt;回传信息&gt;][-R &lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt;][–block-size&#x3D;&lt;区块大小&gt;][–force-local][–help][–no-absolute-filenames][–no-preserve-owner][–only-verify-crc][–quiet][–sparse][–version][范本样式…] 或 cpio [-0adkiLmpuvV][-R &lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt;][–help][–no-preserve-owner][–quiet][–sparse][–version][目的目]  </p>
<p><strong>补充说明</strong>: cpio是用来建立，还原备份档的工具程序，它可以加入，解开cpio或tra备份档内的文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-0或–null 接受新增列控制字符，通常配合find指令的”-print0”参数使用。  　</p>
<p>-a或–reset-access-time 重新设置文件的存取时间。  　</p>
<p>-A或–append 附加到已存在的备份档中，且这个备份档必须存放在磁盘上，而不能放置于磁带机里。  　</p>
<p>-b或–swap 此参数的效果和同时指定”-sS”参数相同。  　</p>
<p>-B 将输入&#x2F;输出的区块大小改成5210 Bytes。  　</p>
<p>-c 使用旧ASCII备份格式。  　</p>
<p>-C&lt;区块大小&gt;或–io-size&#x3D;&lt;区块大小&gt; 设置输入&#x2F;输出的区块大小，单位是Byte。  　</p>
<p>-d或–make-directories 如有需要cpio会自行建立目录。  　</p>
<p>-E&lt;范本文件&gt;或–pattern-file&#x3D;&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让cpio解开符合范本条件的文件，格式为每列一个范本样式。  　</p>
<p>-f或–nonmatching 让cpio解开所有不符合范本条件的文件。  　</p>
<p>-F&lt;备份档&gt;或–file&#x3D;&lt;备份档&gt; 指定备份档的名称，用来取代标准输入或输出，也能借此通过网络使用另一台主机的保存设备存取备份档。  　</p>
<p>-H&lt;备份格式&gt; 指定备份时欲使用的文件格式。  　</p>
<p>-i或–extract 执行copy-in模式，还原备份档。  　</p>
<p>-l&lt;备份档&gt; 指定备份档的名称，用来取代标准输入，也能借此通过网络使用另一台主机的保存设备读取备份档。  　</p>
<p>-k 此参数将忽略不予处理，仅负责解决cpio不同版本间的兼容性问题。  　</p>
<p>-l或–link 以硬连接的方式取代复制文件，可在copy-pass模式下运用。  　</p>
<p>-L或–dereference 不建立符号连接，直接复制该连接所指向的原始文件。  　</p>
<p>-m或preserve-modification-time 不去更换文件的更改时间。  　</p>
<p>-M&lt;回传信息&gt;或–message&#x3D;&lt;回传信息&gt; 设置更换保存媒体的信息。  　</p>
<p>-n或–numeric-uid-gid 使用”-tv”参数列出备份档的内容时，若再加上参数”-n”，则会以用户识别码和群组识别码替代拥有者和群组名称列出文件清单。  　</p>
<p>-o或–create 执行copy-out模式，建立备份档。  　</p>
<p>-O&lt;备份档&gt; 指定备份档的名称，用来取代标准输出，也能借此通过网络　使用另一台主机的保存设备存放备份档。  　</p>
<p>-p或–pass-through 执行copy-pass模式，略过备份步骤，直接将文件复制到目的目录。  　</p>
<p>-r或–rename 当有文件名称需要更动时，采用互动模式。  　</p>
<p>-R&lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt;或 　</p>
<p>—-owner&lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt; 在copy-in模式还原备份档，或copy-pass模式复制文件时，可指定这些备份，复制的文件的拥有者与所属群组。  　</p>
<p>-s或–swap-bytes 交换每对字节的内容。  　</p>
<p>-S或–swap-halfwords 交换每半个字节的内容。  　</p>
<p>-t或–list 将输入的内容呈现出来。  　</p>
<p>-u或–unconditional 置换所有文件，不论日期时间的新旧与否，皆不予询问而直接覆盖。  　</p>
<p>-v或–verbose 详细显示指令的执行过程。  　</p>
<p>-V或–dot 执行指令时，在每个文件的执行程序前面加上”.”号  　</p>
<p>–block-size&#x3D;&lt;区块大小&gt; 设置输入&#x2F;输出的区块大小，假如设置数值为5，则区块大小为2500，若设置成10，则区块大小为5120，依次类推。  　</p>
<p>–force-local 强制将备份档存放在本地主机。  　</p>
<p>–help 在线帮助。  　</p>
<p>–no-absolute-filenames 使用相对路径建立文件名称。  　</p>
<p>–no-preserve-owner 不保留文件的拥有者，谁解开了备份档，那些文件就归谁所有。  　</p>
<p>-only-verify-crc 当备份档采用CRC备份格式时，可使用这项参数检查备份档内的每个文件是否正确无误。  　</p>
<p>–quiet 不显示复制了多少区块。  　</p>
<p>–sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="dump"><a href="#dump" class="headerlink" title="***dump"></a>***dump</h3><p><strong>功能说明</strong>: 备份文件系统。  </p>
<p><strong>语法</strong>: dump [-cnu][-0123456789][-b &lt;区块大小&gt;][-B &lt;区块数目&gt;][-d &lt;密度&gt;][-f &lt;设备名称&gt;][-h &lt;层级&gt;][-s &lt;磁带长度&gt;][-T &lt;日期&gt;][目录或文件系统] 或 dump [-wW]  </p>
<p><strong>补充说明</strong>: dump为备份工具程序，可将目录或整个文件系统备份至指定的设备，或备份成一个大文件。 </p>
<p><strong>参数</strong>:  　</p>
<p>-0123456789 备份的层级。  　</p>
<p>-b&lt;区块大小&gt; 指定区块的大小，单位为KB。  　</p>
<p>-B&lt;区块数目&gt; 指定备份卷册的区块数目。  　</p>
<p>-c 修改备份磁带预设的密度与容量。  　</p>
<p>-d&lt;密度&gt; 设置磁带的密度。单位为BPI。  　</p>
<p>-f&lt;设备名称&gt; 指定备份设备。  　</p>
<p>-h&lt;层级&gt; 当备份层级等于或大雨指定的层级时，将不备份用户标示为”nodump”的文件。  　</p>
<p>-n 当备份工作需要管理员介入时，向所有”operator”群组中的使用者发出通知。  　</p>
<p>-s&lt;磁带长度&gt; 备份磁带的长度，单位为英尺。  　</p>
<p>-T&lt;日期&gt; 指定开始备份的时间与日期。  　</p>
<p>-u 备份完毕后，在&#x2F;etc&#x2F;dumpdates中记录备份的文件系统，层级，日期与时间等。  　</p>
<p>-w 与-W类似，但仅显示需要备份的文件。  　</p>
<p>-W 显示需要备份的文件及其最后一次备份的层级，时间与日期。</p>
<h3 id="gunzip"><a href="#gunzip" class="headerlink" title="***gunzip"></a>***gunzip</h3><p><strong>功能说明</strong>: 解压文件。  </p>
<p><strong>语法</strong>: gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][文件…] 或 gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][目录]  </p>
<p><strong>补充说明</strong>: gunzip是个使用广泛的解压缩程序，它用于解开被gzip压缩过的文件，这些压缩文件预设最后的扩展名为”.gz”。事实上gunzip就是gzip的硬连接，因此不论是压缩或解压缩，都可通过gzip指令单独完成。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–ascii 使用ASCII文字模式。  　</p>
<p>-c或–stdout或–to-stdout 把解压后的文件输出到标准输出设备。  　</p>
<p>-f或-force 强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接。  　</p>
<p>-h或–help 在线帮助。  　</p>
<p>-l或–list 列出压缩文件的相关信息。  　</p>
<p>-L或–license 显示版本与版权信息。  　</p>
<p>-n或–no-name 解压缩时，若压缩文件内含有远来的文件名称及时间戳记，则将其忽略不予处理。  　</p>
<p>-N或–name 解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其回存到解开的文件上。  　</p>
<p>-q或–quiet 不显示警告信息。  　</p>
<p>-r或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-S&lt;压缩字尾字符串&gt;或–suffix&lt;压缩字尾字符串&gt; 更改压缩字尾字符串。  　</p>
<p>-t或–test 测试压缩文件是否正确无误。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>-V或–version 显示版本信息。</p>
<h3 id="gzexe"><a href="#gzexe" class="headerlink" title="***gzexe"></a>***gzexe</h3><p><strong>功能说明</strong>: 压缩执行文件。 </p>
<p><strong>语法</strong>: gzexe [-d][执行文件…]  </p>
<p><strong>补充说明</strong>: gzexe是用来压缩执行文件的程序。当您去执行被压缩过的执行文件时，该文件会自动解压然后继续执行，和使用一般的执行文件相同。  </p>
<p><strong>参数</strong>:  　</p>
<p>-d 解开压缩文件。</p>
<h3 id="gzip"><a href="#gzip" class="headerlink" title="***gzip"></a>***gzip</h3><p><strong>功能说明</strong>: 压缩文件。  </p>
<p><strong>语法</strong>: gzip [-acdfhlLnNqrtvV][-S &lt;压缩字尾字符串&gt;][-&lt;压缩效率&gt;][–best&#x2F;fast][文件…] 或 gzip [-acdfhlLnNqrtvV][-S &lt;压缩字尾字符串&gt;][-&lt;压缩效率&gt;][–best&#x2F;fast][目录]  </p>
<p><strong>补充说明</strong>: gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多出”.gz”的扩展名。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–ascii 使用ASCII文字模式。  　</p>
<p>-c或–stdout或–to-stdout 把压缩后的文件输出到标准输出设备，不去更动原始文件。  　</p>
<p>-d或–decompress或—-uncompress 解开压缩文件。  　</p>
<p>-f或–force 强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接。  　</p>
<p>-h或–help 在线帮助。  　</p>
<p>-l或–list 列出压缩文件的相关信息。  　</p>
<p>-L或–license 显示版本与版权信息。  　</p>
<p>-n或–no-name 压缩文件时，不保存原来的文件名称及时间戳记。  　</p>
<p>-N或–name 压缩文件时，保存原来的文件名称及时间戳记。  　</p>
<p>-q或–quiet 不显示警告信息。  　</p>
<p>-r或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-S&lt;压缩字尾字符串&gt;或—-suffix&lt;压缩字尾字符串&gt; 更改压缩字尾字符串。  　</p>
<p>-t或–test 测试压缩文件是否正确无误。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>-V或–version 显示版本信息。  　</p>
<p>-&lt;压缩效率&gt; 压缩效率是一个介于1－9的数值，预设值为”6”，指定愈大的数值，压缩效率就会愈高。  　</p>
<p>–best 此参数的效果和指定”-9”参数相同。  　</p>
<p>–fast 此参数的效果和指定”-1”参数相同。</p>
<h3 id="lha"><a href="#lha" class="headerlink" title="***lha"></a>***lha</h3><p><strong>功能说明</strong>: 压缩或解压缩文件。  </p>
<p><strong>语法</strong>: lha [-acdfglmnpqtuvx][-a &lt;0&#x2F;1&#x2F;2&gt;&#x2F;u][-&lt;a&#x2F;c&#x2F;u&gt;d][-i][-&lt;a&#x2F;u&gt;o][-w&#x3D;&lt;目的目录&gt;][-&lt;a&#x2F;u&gt;z][压缩文件][文件…] 或 lha [-acdfglmnpqtuvx][-a &lt;0&#x2F;1&#x2F;2&gt;&#x2F;u][-&lt;a&#x2F;c&#x2F;u&gt;d][-i][-&lt;a&#x2F;u&gt;o][-w&#x3D;&lt;目的目录&gt;][-&lt;a&#x2F;u&gt;z][压缩文件][目录…]  </p>
<p><strong>补充说明</strong>: lha是从lharc演变而来的压缩程序，文件经它压缩后，会另外产生具有”.lzh”扩展名的压缩文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-a或a  压缩文件，并加入到压缩文件内。  </p>
<p>-a&lt;0&#x2F;1&#x2F;2&gt;&#x2F;u&lt;&#x2F;0&#x2F;1&#x2F;2&gt;  压缩文件时，采用不同的文件头。  </p>
<p>-c或c  压缩文件，重新建构新的压缩文件后，再将其加入。 </p>
<p> -d或d  从压缩文件内删除指定的文件。 </p>
<p> -&lt;a&#x2F;c&#x2F;u&gt;d或&lt;a&#x2F;c&#x2F;u&gt;d  压缩文件，然后将其加入，重新建构，更新压缩文件或，删除原始文件，也就是把文件移到压缩文件中。  </p>
<p>-e或e  解开压缩文件。  </p>
<p>-f或f  强制执行lha命令，在解压时会直接覆盖已有的文件而不加以询问。  </p>
<p>-g或g  使用通用的压缩格式，便于解决兼容性的问题。 </p>
<p> -&lt;e&#x2F;x&gt;i或&lt;e&#x2F;x&gt;i  解开压缩文件时，忽略保存在压缩文件内的文件路径，直接将其解压后存放在现行目录下或是指定的目录中。  </p>
<p>-l或l  列出压缩文件的相关信息。 </p>
<p>-m或m  此参数的效果和同时指定”-ad”参数相同。 </p>
<p> -n或n  不执行指令，仅列出实际执行会进行的动作。 </p>
<p> -&lt;a&#x2F;u&gt;o或&lt;a&#x2F;u&gt;o  采用lharc兼容格式，将压缩后的文件加入，更新压缩文件。  </p>
<p>-p或p  从压缩文件内输出到标准输出设备。  </p>
<p>-q或q  不显示指令执行过程。  -t或t  检查备份文件内的每个文件是否正确无误。 </p>
<p> -u或u  更换较新的文件到压缩文件内。  </p>
<p>-u&lt;&#x2F;0&#x2F;1&#x2F;2&gt;或u&lt;&#x2F;0&#x2F;1&#x2F;2&gt;  在文件压缩时采用不同的文件头，然后更新到压缩文件内。  </p>
<p>-v或v  详细列出压缩文件的相关信息。 </p>
<p> -&lt;e&#x2F;x&gt;w&#x3D;&lt;目的目录&gt;或&lt;e&#x2F;x&gt;w&#x3D;&lt;目的目录&gt;  指定解压缩的目录。  </p>
<p>-x或x  解开压缩文件。  </p>
<p>-&lt;a&#x2F;u&gt;z或&lt;a&#x2F;u&gt;z  不压缩文件，直接把它加入，更新压缩文件。</p>
<h3 id="restore"><a href="#restore" class="headerlink" title="***restore"></a>***restore</h3><p><strong>功能说明</strong>: 还原(Restore)由倾倒(Dump)操作所备份下来的文件或整个文件系统(一个分区)。  </p>
<p><strong>语法</strong>: restore [-cCvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-chimvy][-b &lt;区块大小&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-crvy][-b &lt;区块大小&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-cRvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [chtvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;][文件…] 或 restore [-chmvxy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;][文件…]  </p>
<p><strong>补充说明</strong>: restore 指令所进行的操作和dump指令相反，倾倒操作可用来备份文件，而还原操作则是写回这些已备份的文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-b&lt;区块大小&gt;  设置区块大小，单位是Byte。  </p>
<p>-c  不检查倾倒操作的备份格式，仅准许读取使用旧格式的备份文件。 </p>
<p>-C  使用对比模式，将备份的文件与现行的文件相互对比。 </p>
<p> -D&lt;文件系统&gt;  允许用户指定文件系统的名称。  </p>
<p>-f&lt;备份文件&gt;  从指定的文件中读取备份数据，进行还原操作。  </p>
<p>-h  仅解出目录而不包括与该目录相关的所有文件。 </p>
<p>-i  使用互动模式，在进行还原操作时，restore指令将依序询问用户。  </p>
<p>-m  解开符合指定的inode编号的文件或目录而非采用文件名称指定。  </p>
<p>-r  进行还原操作。  </p>
<p>-R  全面还原文件系统时，检查应从何处开始进行。  </p>
<p>-s&lt;文件编号&gt;  当备份数据超过一卷磁带时，您可以指定备份文件的编号。  </p>
<p>-t  指定文件名称，若该文件已存在备份文件中，则列出它们的名称。 </p>
<p> -v  显示指令执行过程。 </p>
<p> -x  设置文件名称，且从指定的存储媒体里读入它们，若该文件已存在在备份文件中，则将其还原到文件系统内。  </p>
<p>-y  不询问任何问题，一律以同意回答并继续执行指令。</p>
<h3 id="tar"><a href="#tar" class="headerlink" title="***tar"></a>***tar</h3><p><strong>功能说明</strong>: 备份文件。  </p>
<p><strong>语法</strong>: tar [-ABcdgGhiklmMoOpPrRsStuUvwWxzZ][-b &lt;区块数目&gt;][-C &lt;目的目录&gt;][-f &lt;备份文件&gt;][-F &lt;Script文件&gt;][-K &lt;文件&gt;][-L &lt;媒体容量&gt;][-N &lt;日期时间&gt;][-T &lt;范本文件&gt;][-V &lt;卷册名称&gt;][-X &lt;范本文件&gt;][-&lt;设备编号&gt;&lt;存储密度&gt;][–after-date&#x3D;&lt;日期时间&gt;][–atime-preserve][–backuup&#x3D;&lt;备份方式&gt;][–checkpoint][–concatenate][–confirmation][–delete][–exclude&#x3D;&lt;范本样式&gt;][–force-local][–group&#x3D;&lt;群组名称&gt;][–help][–ignore-failed-read][–new-volume-script&#x3D;&lt;Script文件&gt;][–newer-mtime][–no-recursion][–null][–numeric-owner][–owner&#x3D;&lt;用户名称&gt;][–posix][–erve][–preserve-order][–preserve-permissions][–record-size&#x3D;&lt;区块数目&gt;][–recursive-unlink][–remove-files][–rsh-command&#x3D;&lt;执行指令&gt;][–same-owner][–suffix&#x3D;&lt;备份字尾字符串&gt;][–totals][–use-compress-program&#x3D;&lt;执行指令&gt;][–version][–volno-file&#x3D;&lt;编号文件&gt;][文件或目录…]  </p>
<p><strong>补充说明</strong>: tar是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件。  </p>
<p><strong>参数</strong>:  </p>
<p>-A或–catenate  新增温暖件到已存在的备份文件。  </p>
<p>-b&lt;区块数目&gt;或–blocking-factor&#x3D;&lt;区块数目&gt;  设置每笔记录的区块数目，每个区块大小为12Bytes。 </p>
<p>-B或–read-full-records  读取数据时重设区块大小。 </p>
<p>-c或–create  建立新的备份文件。  </p>
<p>-C&lt;目的目录&gt;或–directory&#x3D;&lt;目的目录&gt;  切换到指定的目录。  </p>
<p>-d或–diff或–compare  对比备份文件内和文件系统上的文件的差异。  </p>
<p>-f&lt;备份文件&gt;或–file&#x3D;&lt;备份文件&gt;  指定备份文件。 </p>
<p>-F&lt;Script文件&gt;或–info-script&#x3D;&lt;Script文件&gt;  每次更换磁带时，就执行指定的Script文件。  </p>
<p>-g或–listed-incremental  处理GNU格式的大量备份。  </p>
<p>-G或–incremental  处理旧的GNU格式的大量备份。  </p>
<p>-h或–dereference  不建立符号连接，直接复制该连接所指向的原始文件。 </p>
<p>-i或–ignore-zeros  忽略备份文件中的0 Byte区块，也就是EOF。 </p>
<p>-k或–keep-old-files  解开备份文件时，不覆盖已有的文件。  </p>
<p>-K&lt;文件&gt;或–starting-file&#x3D;&lt;文件&gt;  从指定的文件开始还原。  </p>
<p>-l或–one-file-system  复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相同，否则不予复制。  </p>
<p>-L&lt;媒体容量&gt;或-tape-length&#x3D;&lt;媒体容量&gt;  设置存放每体的容量，单位以1024 Bytes计算。  </p>
<p>-m或–modification-time  还原文件时，不变更文件的更改时间。  </p>
<p>-M或–multi-volume  在建立，还原备份文件或列出其中的内容时，采用多卷册模式。 </p>
<p>-N&lt;日期格式&gt;或–newer&#x3D;&lt;日期时间&gt;  只将较指定日期更新的文件保存到备份文件里。  </p>
<p>-o或–old-archive或–portability  将资料写入备份文件时使用V7格式。  </p>
<p>-O或–stdout  把从备份文件里还原的文件输出到标准输出设备。 </p>
<p>-p或–same-permissions  用原来的文件权限还原文件。  </p>
<p>-P或–absolute-names  文件名使用绝对名称，不移除文件名称前的”&#x2F;“号。  </p>
<p>-r或–append  新增文件到已存在的备份文件的结尾部分。  </p>
<p>-R或–block-number  列出每个信息在备份文件中的区块编号。 </p>
<p>-s或–same-order  还原文件的顺序和备份文件内的存放顺序相同。  </p>
<p>-S或–sparse  倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。 </p>
<p>-t或–list  列出备份文件的内容。  </p>
<p>-T&lt;范本文件&gt;或–files-from&#x3D;&lt;范本文件&gt;  指定范本文件，其内含有一个或多个范本样式，让tar解开或建立符合设置条件的文件。  </p>
<p>-u或–update  仅置换较备份文件内的文件更新的文件。  </p>
<p>-U或–unlink-first  解开压缩文件还原文件之前，先解除文件的连接。  </p>
<p>-v或–verbose  显示指令执行过程。  </p>
<p>-V&lt;卷册名称&gt;或–label&#x3D;&lt;卷册名称&gt;  建立使用指定的卷册名称的备份文件。  </p>
<p>-w或–interactive  遭遇问题时先询问用户。  </p>
<p>-W或–verify  写入备份文件后，确认文件正确无误。  </p>
<p>-x或–extract或–get 从备份文件中还原文件。  </p>
<p>-X&lt;范本文件&gt;或–exclude-from&#x3D;&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除符合设置条件的文件。  </p>
<p>-z或–gzip或–ungzip  通过gzip指令处理备份文件。  </p>
<p>-Z或–compress或–uncompress  通过compress指令处理备份文件。  </p>
<p>-&lt;设备编号&gt;&lt;存储密度&gt;  设置备份用的外围设备编号及存放数据的密度。  </p>
<p>–after-date&#x3D;&lt;日期时间&gt;  此参数的效果和指定”-N”参数相同。  </p>
<p>–atime-preserve  不变更文件的存取时间。  </p>
<p>–backup&#x3D;&lt;备份方式&gt;或–backup  移除文件前先进行备份。  </p>
<p>–checkpoint  读取备份文件时列出目录名称。  </p>
<p>–concatenate  此参数的效果和指定”-A”参数相同。  </p>
<p>–confirmation  此参数的效果和指定”-w”参数相同。  </p>
<p>–delete  从备份文件中删除指定的文件。 </p>
<p>–exclude&#x3D;&lt;范本样式&gt;  排除符合范本样式的问家。 </p>
<p>–group&#x3D;&lt;群组名称&gt;  把加入设备文件中的文件的所属群组设成指定的群组。  </p>
<p>–help  在线帮助。  </p>
<p>–ignore-failed-read  忽略数据读取错误，不中断程序的执行。  </p>
<p>–new-volume-script&#x3D;&lt;Script文件&gt;  此参数的效果和指定”-F”参数相同。  </p>
<p>–newer-mtime  只保存更改过的文件。  </p>
<p>–no-recursion  不做递归处理，也就是指定目录下的所有文件及子目录不予处理。  </p>
<p>–null  从null设备读取文件名称。  </p>
<p>–numeric-owner  以用户识别码及群组识别码取代用户名称和群组名称。  </p>
<p>–owner&#x3D;&lt;用户名称&gt;  把加入备份文件中的文件的拥有者设成指定的用户。  </p>
<p>–posix  将数据写入备份文件时使用POSIX格式。  </p>
<p>–preserve   此参数的效果和指定”-ps”参数相同。  </p>
<p>–preserve-order   此参数的效果和指定”-A”参数相同。  </p>
<p>–preserve-permissions   此参数的效果和指定”-p”参数相同。  </p>
<p>–record-size&#x3D;&lt;区块数目&gt;   此参数的效果和指定”-b”参数相同。  </p>
<p>–recursive-unlink  解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。  </p>
<p>–remove-files  文件加入备份文件后，就将其删除。  </p>
<p>–rsh-command&#x3D;&lt;执行指令&gt;  设置要在远端主机上执行的指令，以取代rsh指令。  </p>
<p>–same-owner  尝试以相同的文件拥有者还原问家你。  </p>
<p>–suffix&#x3D;&lt;备份字尾字符串&gt;  移除文件前先行备份。  </p>
<p>–totals  备份文件建立后，列出文件大小。  </p>
<p>–use-compress-program&#x3D;&lt;执行指令&gt;  通过指定的指令处理备份文件。  </p>
<p>–version  显示版本信息。  </p>
<p>–volno-file&#x3D;&lt;编号文件&gt;  使用指定文件内的编号取代预设的卷册编号。</p>
<h3 id="unarj"><a href="#unarj" class="headerlink" title="***unarj"></a>***unarj</h3><p><strong>功能说明</strong>: 解压缩.arj文件。  </p>
<p><strong>语法</strong>: unarj [eltx][.arj压缩文件]  </p>
<p><strong>补充说明</strong>: unarj为.arj压缩文件的压缩程序。  </p>
<p><strong>参数</strong>:   </p>
<p>e  解压缩.arj文件。  </p>
<p>l  显示压缩文件内所包含的文件。 </p>
<p>t  检查压缩文件是否正确。</p>
<p>x  解压缩时保留原有的路径。</p>
<h3 id="unzip"><a href="#unzip" class="headerlink" title="***unzip"></a>***unzip</h3><p><strong>功能说明</strong>: 解压缩zip文件  </p>
<p><strong>语法</strong>: unzip [-cflptuvz][-agCjLMnoqsVX][-P &lt;密码&gt;][.zip文件][文件][-d &lt;目录&gt;][-x &lt;文件&gt;] 或 unzip [-Z]  </p>
<p><strong>补充说明</strong>: unzip为.zip压缩文件的解压缩程序。  </p>
<p><strong>参数</strong>:   </p>
<p>-c  将解压缩的结果显示到屏幕上，并对字符做适当的转换。  </p>
<p>-f  更新现有的文件。  </p>
<p>-l  显示压缩文件内所包含的文件。  </p>
<p>-p  与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。  </p>
<p>-t  检查压缩文件是否正确。  </p>
<p>-u  与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。  </p>
<p>-v  执行是时显示详细的信息。  </p>
<p>-z  仅显示压缩文件的备注文字。  </p>
<p>-a  对文本文件进行必要的字符转换。  </p>
<p>-b  不要对文本文件进行字符转换。   </p>
<p>-C  压缩文件中的文件名称区分大小写。  </p>
<p>-j  不处理压缩文件中原有的目录路径。 </p>
<p> -L  将压缩文件中的全部文件名改为小写。 </p>
<p>-M  将输出结果送到more程序处理。  </p>
<p>-n  解压缩时不要覆盖原有的文件。  </p>
<p>-o  不必先询问用户，unzip执行后覆盖原有文件。  </p>
<p>-P&lt;密码&gt;  使用zip的密码选项。  </p>
<p>-q  执行时不显示任何信息。  </p>
<p>-s  将文件名中的空白字符转换为底线字符。  </p>
<p>-V  保留VMS的文件版本信息。  </p>
<p>-X  解压缩时同时回存文件原来的UID&#x2F;GID。  </p>
<p>[.zip文件]  指定.zip压缩文件。  </p>
<p>[文件]  指定要处理.zip压缩文件中的哪些文件。  </p>
<p>-d&lt;目录&gt;  指定文件解压缩后所要存储的目录。  </p>
<p>-x&lt;文件&gt;  指定不要处理.zip压缩文件中的哪些文件。  </p>
<p>-Z  unzip -Z等于执行zipinfo指令。</p>
<h3 id="zip"><a href="#zip" class="headerlink" title="***zip"></a>***zip</h3><p><strong>功能说明</strong>: 压缩文件。  </p>
<p><strong>语法</strong>: zip [-AcdDfFghjJKlLmoqrSTuvVwXyz$][-b &lt;工作目录&gt;][-ll][-n &lt;字尾字符串&gt;][-t &lt;日期时间&gt;][-&lt;压缩效率&gt;][压缩文件][文件…][-i &lt;范本样式&gt;][-x &lt;范本样式&gt;]  </p>
<p><strong>补充说明</strong>: zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具有”.zip”扩展名的压缩文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-A  调整可执行的自动解压缩文件。  </p>
<p>-b&lt;工作目录&gt;  指定暂时存放文件的目录。  </p>
<p>-c  替每个被压缩的文件加上注释。  </p>
<p>-d  从压缩文件内删除指定的文件。  </p>
<p>-D  压缩文件内不建立目录名称。  </p>
<p>-f  此参数的效果和指定”-u”参数类似，但不仅更新既有文件，如果某些文件原本不存在于压缩文件内，使用本参数会一并将其加入压缩文件中。  </p>
<p>-F  尝试修复已损坏的压缩文件。  </p>
<p>-g  将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。  </p>
<p>-h  在线帮助。  </p>
<p>-i&lt;范本样式&gt;  只压缩符合条件的文件。 </p>
<p> -j  只保存文件名称及其内容，而不存放任何目录名称。  </p>
<p>-J  删除压缩文件前面不必要的数据。  </p>
<p>-k  使用MS-DOS兼容格式的文件名称。 </p>
<p>-l  压缩文件时，把LF字符置换成LF+CR字符。 </p>
<p>-ll  压缩文件时，把LF+CR字符置换成LF字符。  </p>
<p>-L  显示版权信息。  </p>
<p>-m  将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。  </p>
<p>-n&lt;字尾字符串&gt;  不压缩具有特定字尾字符串的文件。  </p>
<p>-o  以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。  </p>
<p>-q  不显示指令执行过程。  </p>
<p>-r  递归处理，将指定目录下的所有文件和子目录一并处理。  </p>
<p>-S  包含系统和隐藏文件。  </p>
<p>-t&lt;日期时间&gt;  把压缩文件的日期设成指定的日期。  </p>
<p>-T  检查备份文件内的每个文件是否正确无误。  </p>
<p>-u  更换较新的文件到压缩文件内。  </p>
<p>-v  显示指令执行过程或显示版本信息。  </p>
<p>-V  保存VMS操作系统的文件属性。  </p>
<p>-w  在文件名称里假如版本编号，本参数仅在VMS操作系统下有效。  </p>
<p>-x&lt;范本样式&gt;  压缩时排除符合条件的文件。  </p>
<p>-X  不保存额外的文件属性。  </p>
<p>-y  直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效。  </p>
<p>-z  替压缩文件加上注释。  </p>
<p>-$  保存第一个被压缩文件所在磁盘的卷册名称。  </p>
<p>-&lt;压缩效率&gt;  压缩效率是一个介于1-9的数值。</p>
<h3 id="zipinfo"><a href="#zipinfo" class="headerlink" title="***zipinfo"></a>***zipinfo</h3><p><strong>功能说明</strong>: 列出压缩文件信息。  </p>
<p><strong>语法</strong>: zipinfo [-12hlmMstTvz][压缩文件][文件…][-x &lt;范本样式&gt;] </p>
<p><strong>补充说明</strong>: 执行zipinfo指令可得知zip压缩文件的详细信息。  </p>
<p><strong>参数</strong>:   </p>
<p>-1  只列出文件名称。  </p>
<p>-2  此参数的效果和指定”-1”参数类似，但可搭配”-h”,”-t”和”-z”参数使用。  </p>
<p>-h  只列出压缩文件的文件名称。  </p>
<p>-l  此参数的效果和指定”-m”参数类似，但会列出原始文件的大小而非每个文件的压缩率。 </p>
<p>-m  此参数的效果和指定”-s”参数类似，但多会列出每个文件的压缩率。  </p>
<p>-M  若信息内容超过一个画面，则采用类似more指令的方式列出信息。  </p>
<p>-s  用类似执行”ls -l”指令的效果列出压缩文件内容。 </p>
<p>-t  只列出压缩文件内所包含的文件数目，压缩前后的文件大小及压缩率。  </p>
<p>-T  将压缩文件内每个文件的日期时间用年，月，日，时，分，秒的顺序列出。  </p>
<p>-v  详细显示压缩文件内每一个文件的信息。  </p>
<p>-x&lt;范本样式&gt;  不列出符合条件的文件的信息。  </p>
<p>-z  如果压缩文件内含有注释，就将注释显示出来。</p>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="diff"><a href="#diff" class="headerlink" title="***diff"></a>***diff</h3><p><strong>功能说明</strong>: 比较文件的差异。   </p>
<p><strong>语法</strong>: diff [-abBcdefHilnNpPqrstTuvwy][-&lt;行数&gt;][-C &lt;行数&gt;][-D &lt;巨集名称&gt;][-I &lt;字符或字符串&gt;][-S &lt;文件&gt;][-W &lt;宽度&gt;][-x &lt;文件或目录&gt;][-X &lt;文件&gt;][–help][–left-column][–suppress-common-line][文件或目录1][文件或目录2]   </p>
<p><strong>补充说明</strong>: diff以逐行的方式，比较文本文件的异同处。所是指定要比较目录，则diff会比较目录中相同文件名的文件，但不会比较其中子目录。  </p>
<p><strong>参数</strong>:  　</p>
<p>-&lt;行数&gt; 指定要显示多少行的文本。此参数必须与-c或-u参数一并使用。  　</p>
<p>-a或–text diff预设只会逐行比较文本文件。 　</p>
<p>-b或–ignore-space-change 不检查空格字符的不同。  　</p>
<p>-B或–ignore-blank-lines 不检查空白行。  　</p>
<p>-c 显示全部内文，并标出不同之处。  　</p>
<p>-C&lt;行数&gt;或–context&lt;行数&gt; 与执行”-c-&lt;行数&gt;”指令相同。  　</p>
<p>-d或–minimal 使用不同的演算法，以较小的单位来做比较。  　</p>
<p>-D&lt;巨集名称&gt;或ifdef&lt;巨集名称&gt; 此参数的输出格式可用于前置处理器巨集。  　</p>
<p>-e或–ed 此参数的输出格式可用于ed的script文件。  　</p>
<p>-f或-forward-ed 输出的格式类似ed的script文件，但按照原来文件的顺序来显示不同处。  　</p>
<p>-H或–speed-large-files 比较大文件时，可加快速度。  　</p>
<p>-l&lt;字符或字符串&gt;或–ignore-matching-lines&lt;字符或字符串&gt; 若两个文件在某几行有所不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。  　</p>
<p>-i或–ignore-case 不检查大小写的不同。  　</p>
<p>-l或–paginate 将结果交由pr程序来分页。  　</p>
<p>-n或–rcs 将比较结果以RCS的格式来显示。  　</p>
<p>-N或–new-file 在比较目录时，若文件A仅出现在某个目录中，预设会显示： Only in目录：文件A若使用-N参数，则diff会将文件A与一个空白的文件比较。  　</p>
<p>-p 若比较的文件为C语言的程序码文件时，显示差异所在的函数名称。  　</p>
<p>-P或–unidirectional-new-file 与-N类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。  　</p>
<p>-q或–brief 仅显示有无差异，不显示详细的信息。  　</p>
<p>-r或–recursive 比较子目录中的文件。  　</p>
<p>-s或–report-identical-files 若没有发现任何差异，仍然显示信息。  　</p>
<p>-S&lt;文件&gt;或–starting-file&lt;文件&gt; 在比较目录时，从指定的文件开始比较。  　</p>
<p>-t或–expand-tabs 在输出时，将tab字符展开。  　</p>
<p>-T或–initial-tab 在每行前面加上tab字符以便对齐。  　</p>
<p>-u,-U&lt;列数&gt;或–unified&#x3D;&lt;列数&gt; 以合并的方式来显示文件内容的不同。  　</p>
<p>-v或–version 显示版本信息。  　</p>
<p>-w或–ignore-all-space 忽略全部的空格字符。  　</p>
<p>-W&lt;宽度&gt;或–width&lt;宽度&gt; 在使用-y参数时，指定栏宽。  　</p>
<p>-x&lt;文件名或目录&gt;或–exclude&lt;文件名或目录&gt; 不比较选项中所指定的文件或目录。  </p>
<p>-X&lt;文件&gt;或–exclude-from&lt;文件&gt; 您可以将文件或目录类型存成文本文件，然后在&#x3D;&lt;文件&gt;中指定此文本文件。  　</p>
<p>-y或–side-by-side 以并列的方式显示文件的异同之处。  　</p>
<p>–help 显示帮助。  　</p>
<p>–left-column 在使用-y参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容。 　</p>
<p>–suppress-common-lines 在使用-y参数时，仅显示不同之处。</p>
<h3 id="diffstat"><a href="#diffstat" class="headerlink" title="***diffstat"></a>***diffstat</h3><p><strong>功能说明</strong>: 根据diff的比较结果，显示统计数字。  </p>
<p><strong>语法</strong>: diff [-wV][-n &lt;文件名长度&gt;][-p &lt;文件名长度&gt;]  </p>
<p><strong>补充说明</strong>: diffstat读取diff的输出结果，然后统计各文件的插入，删除，修改等差异计量。 </p>
<p> <strong>参数</strong>:  　</p>
<p>-n&lt;文件名长度&gt; 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。  　</p>
<p>-p&lt;文件名长度&gt; 与-n参数相同，但此处的&lt;文件名长度&gt;包括了文件的路径。  　</p>
<p>-w 指定输出时栏位的宽度。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="file"><a href="#file" class="headerlink" title="***file"></a>***file</h3><p><strong>功能说明</strong>: 辨识文件类型。   </p>
<p><strong>语法</strong>: file [-beLvz][-f &lt;名称文件&gt;][-m &lt;魔法数字文件&gt;…][文件或目录…]   </p>
<p><strong>补充说明</strong>: 通过file指令，我们得以辨识该文件的类型。   </p>
<p><strong>参数</strong>:  　</p>
<p>-b 列出辨识结果时，不显示文件名称。  　</p>
<p>-c 详细显示指令执行过程，便于排错或分析程序执行的情形。  　</p>
<p>-f&lt;名称文件&gt; 指定名称文件，其内容有一个或多个文件名称呢感，让file依序辨识这些文件，格式为每列一个文件名称。  </p>
<p>-L 直接显示符号连接所指向的文件的类别。  　</p>
<p>-m&lt;魔法数字文件&gt; 指定魔法数字文件。  　</p>
<p>-v 显示版本信息。  　</p>
<p>-z 尝试去解读压缩文件的内容。</p>
<h3 id="find"><a href="#find" class="headerlink" title="***find"></a>***find</h3><p><strong>功能说明</strong>: 查找文件或目录。  </p>
<p><strong>语法</strong>: find [目录…][-amin &lt;分钟&gt;][-anewer &lt;参考文件或目录&gt;][-atime &lt;24小时数&gt;][-cmin &lt;分钟&gt;][-cnewer &lt;参考文件或目录&gt;][-ctime &lt;24小时数&gt;][-daystart][-depyh][-empty][-exec &lt;执行指令&gt;][-false][-fls &lt;列表文件&gt;][-follow][-fprint &lt;列表文件&gt;][-fprint0 &lt;列表文件&gt;][-fprintf &lt;列表文件&gt;&lt;输出格式&gt;][-fstype &lt;文件系统类型&gt;][-gid &lt;群组识别码&gt;][-group &lt;群组名称&gt;][-help][-ilname &lt;范本样式&gt;][-iname &lt;范本样式&gt;][-inum ][-ipath &lt;范本样式&gt;][-iregex &lt;范本样式&gt;][-links &lt;连接数目&gt;][-lname &lt;范本样式&gt;][-ls][-maxdepth &lt;目录层级&gt;][-mindepth &lt;目录层级&gt;][-mmin &lt;分钟&gt;][-mount]  [-mtime &lt;24小时数&gt;][-name &lt;范本样式&gt;][-newer &lt;参考文件或目录&gt;][-nogroup][noleaf] [-nouser][-ok &lt;执行指令&gt;][-path &lt;范本样式&gt;][-perm &lt;权限数值&gt;][-print][-print0][-printf &lt;输出格式&gt;][-prune][-regex &lt;范本样式&gt;][-size &lt;文件大小&gt;][-true][-type &lt;文件类型&gt;][-uid &lt;用户识别码&gt;][-used &lt;日数&gt;][-user &lt;拥有者名称&gt;][-version][-xdev][-xtype &lt;文件类型&gt;] </p>
<p><strong>补充说明</strong>: find指令用于查找符合条件的文件。任何位于参数之前的字符串都将被视为欲查找的目录。  </p>
<p><strong>参数</strong>:  　</p>
<p>-amin&lt;分钟&gt; 查找在指定时间曾被存取过的文件或目录，单位以分钟计算。  　</p>
<p>-anewer&lt;参考文件或目录&gt; 查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录。  　</p>
<p>-atime&lt;24小时数&gt; 查找在指定时间曾被存取过的文件或目录，单位以24小时计算。  　</p>
<p>-cmin&lt;分钟&gt; 查找在指定时间之时被更改的文件或目录。  　</p>
<p>-cnewer&lt;参考文件或目录&gt; 查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录。  　</p>
<p>-ctime&lt;24小时数&gt; 查找在指定时间之时被更改的文件或目录，单位以24小时计算。  　</p>
<p>-daystart 从本日开始计算时间。  　</p>
<p>-depth 从指定目录下最深层的子目录开始查找。  　</p>
<p>-expty 寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录。  　</p>
<p>-exec&lt;执行指令&gt; 假设find指令的回传值为True，就执行该指令。  　</p>
<p>-false 将find指令的回传值皆设为False。  　</p>
<p>-fls&lt;列表文件&gt; 此参数的效果和指定”-ls”参数类似，但会把结果保存为指定的列表文件。  　</p>
<p>-follow 排除符号连接。  　</p>
<p>-fprint&lt;列表文件&gt; 此参数的效果和指定”-print”参数类似，但会把结果保存成指定的列表文件。  　</p>
<p>-fprint0&lt;列表文件&gt; 此参数的效果和指定”-print0”参数类似，但会把结果保存成指定的列表文件。  　</p>
<p>-fprintf&lt;列表文件&gt;&lt;输出格式&gt; 此参数的效果和指定”-printf”参数类似，但会把结果保存成指定的列表文件。  </p>
<p>-fstype&lt;文件系统类型&gt; 只寻找该文件系统类型下的文件或目录。  　</p>
<p>-gid&lt;群组识别码&gt; 查找符合指定之群组识别码的文件或目录。  　</p>
<p>-group&lt;群组名称&gt; 查找符合指定之群组名称的文件或目录。  　</p>
<p>-help或–help 在线帮助。  　</p>
<p>-ilname&lt;范本样式&gt; 此参数的效果和指定”-lname”参数类似，但忽略字符大小写的差别。  　</p>
<p>-iname&lt;范本样式&gt; 此参数的效果和指定”-name”参数类似，但忽略字符大小写的差别。  　</p>
<p>-inum&lt;inode编号&gt; 查找符合指定的inode编号的文件或目录。  　</p>
<p>-ipath&lt;范本样式&gt; 此参数的效果和指定”-ipath”参数类似，但忽略字符大小写的差别。  　</p>
<p>-iregex&lt;范本样式&gt; 此参数的效果和指定”-regexe”参数类似，但忽略字符大小写的差别。  　</p>
<p>-links&lt;连接数目&gt; 查找符合指定的硬连接数目的文件或目录。  　</p>
<p>-iname&lt;范本样式&gt; 指定字符串作为寻找符号连接的范本样式。  　</p>
<p>-ls 假设find指令的回传值为True，就将文件或目录名称列出到标准输出。  　</p>
<p>-maxdepth&lt;目录层级&gt; 设置最大目录层级。  　</p>
<p>-mindepth&lt;目录层级&gt; 设置最小目录层级。  　</p>
<p>-mmin&lt;分钟&gt; 查找在指定时间曾被更改过的文件或目录，单位以分钟计算。  　</p>
<p>-mount 此参数的效果和指定”-xdev”相同。  　</p>
<p>-mtime&lt;24小时数&gt; 查找在指定时间曾被更改过的文件或目录，单位以24小时计算。  　</p>
<p>-name&lt;范本样式&gt; 指定字符串作为寻找文件或目录的范本样式。  　</p>
<p>-newer&lt;参考文件或目录&gt; 查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录。  　</p>
<p>-nogroup 找出不属于本地主机群组识别码的文件或目录。  　</p>
<p>-noleaf 不去考虑目录至少需拥有两个硬连接存在。  　</p>
<p>-nouser 找出不属于本地主机用户识别码的文件或目录。  　</p>
<p>-ok&lt;执行指令&gt; 此参数的效果和指定”-exec”参数类似，但在执行指令之前会先询问用户，若回答”y”或”Y”，则放弃执行指令。  　</p>
<p>-path&lt;范本样式&gt; 指定字符串作为寻找目录的范本样式。  　</p>
<p>-perm&lt;权限数值&gt; 查找符合指定的权限数值的文件或目录。  　</p>
<p>-print 假设find指令的回传值为True，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称之前皆有”.&#x2F;“字符串。  　</p>
<p>-print0 假设find指令的回传值为True，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行。  　</p>
<p>-printf&lt;输出格式&gt; 假设find指令的回传值为True，就将文件或目录名称列出到标准输出。格式可以自行指定。  　</p>
<p>-prune 不寻找字符串作为寻找文件或目录的范本样式。  　</p>
<p>-regex&lt;范本样式&gt; 指定字符串作为寻找文件或目录的范本样式。  　</p>
<p>-size&lt;文件大小&gt; 查找符合指定的文件大小的文件。  　</p>
<p>-true 将find指令的回传值皆设为True。  　</p>
<p>-typ&lt;文件类型&gt; 只寻找符合指定的文件类型的文件。  　</p>
<p>-uid&lt;用户识别码&gt; 查找符合指定的用户识别码的文件或目录。  　</p>
<p>-used&lt;日数&gt; 查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算。  　</p>
<p>-user&lt;拥有者名称&gt; 查找符合指定的拥有者名称的文件或目录。  　</p>
<p>-version或–version 显示版本信息。  　</p>
<p>-xdev 将范围局限在先行的文件系统中。  　</p>
<p>-xtype&lt;文件类型&gt; 此参数的效果和指定”-type”参数类似，差别在于它针对符号连接检查。</p>
<h3 id="git"><a href="#git" class="headerlink" title="***git"></a>***git</h3><p><strong>功能说明</strong>: 文字模式下的文件管理员。   </p>
<p><strong>语法</strong>: git  </p>
<p><strong>补充说明</strong>: git是用来管理文件的程序，它十分类似DOS下的Norton Commander，具有互动式操作界面。它的操作方法和Norton Commander几乎一样，略诉如下：   </p>
<p>F1 ：执行info指令，查询指令相关信息，会要求您输入欲查询的名称。  </p>
<p>F2 ：执行cat指令，列出文件内容。  </p>
<p>F3 ：执行gitview指令，观看文件内容。   </p>
<p>F4 ：执行vi指令，编辑文件内容。   </p>
<p>F5 ：执行cp指令，复制文件或目录，会要求您输入目标文件或目录。   </p>
<p>F6 ：执行mv指令，移动文件或目录，或是更改其名称，会要求您输入目标文件或目录。   </p>
<p>F7 ：执行mkdir指令，建立目录。   </p>
<p>F8 ：执行rm指令，删除文件或目录。   </p>
<p>F9 ：执行make指令，批处理执行指令或编译程序时，会要求您输入相关命令。   </p>
<p>F10 ：离开git文件管理员。</p>
<h3 id="gitview"><a href="#gitview" class="headerlink" title="***gitview"></a>***gitview</h3><p><strong>功能说明</strong>: Hex&#x2F;ASCII的看文件程序。   </p>
<p><strong>语法</strong>: gitview [-bchilv][文件]  </p>
<p><strong>补充说明</strong>: gitview指令可用于观看文件的内容，它会同时显示十六进制和ASCII格式的字码。   </p>
<p><strong>参数</strong>:   </p>
<p>-b 单色模式，不使用ANSI控制码显示彩色。   </p>
<p>-c 彩色模式，使用ANSI控制码显示色彩。   </p>
<p>-h 在线帮助。   </p>
<p>-i 显示存放gitview程序的所在位置。   </p>
<p>-l 不使用先前的显示字符。   </p>
<p>-v 显示版本信息。</p>
<h3 id="ln"><a href="#ln" class="headerlink" title="***ln"></a>***ln</h3><p><strong>功能说明</strong>: 连接文件或目录。   </p>
<p><strong>语法</strong>: ln [-bdfinsv][-S &lt;字尾备份字符串&gt;][-V &lt;备份方式&gt;][–help][–version][源文件或目录][目标文件或目录] 或 ln [-bdfinsv][-S &lt;字尾备份字符串&gt;][-V &lt;备份方式&gt;][–help][–version][源文件或目录…][目的目录]   </p>
<p><strong>补充说明</strong>: ln指令用在连接文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，且最后的目的地并非是一个已存在的目录，则会出现错误信息。   </p>
<p><strong>参数</strong>:  　</p>
<p>-b或–backup 删除，覆盖目标文件之前的备份。  　</p>
<p>-d或-F或–directory 建立目录的硬连接。  　</p>
<p>-f或–force 强行建立文件或目录的连接，不论文件或目录是否存在。  　</p>
<p>-i或–interactive 覆盖既有文件之前先询问用户。  　</p>
<p>-n或–no-dereference 把符号连接的目的目录视为一般文件。  　</p>
<p>-s或–symbolic 对源文件建立符号连接，而非硬连接。  　</p>
<p>-S&lt;字尾备份字符串&gt;或–suffix&#x3D;&lt;字尾备份字符串&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，预设的字尾备份字符串是符号”~”，您可通过”-S”参数来改变它。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>-V&lt;备份方式&gt;或–version-control&#x3D;&lt;备份方式&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用”-S”参数变更，当使用”-V”参数&lt;备份方式&gt;指定不同备份方式时，也会产生不同字尾的备份字符串。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="locate"><a href="#locate" class="headerlink" title="***locate"></a>***locate</h3><p><strong>功能说明</strong>: 查找文件。   </p>
<p><strong>语法</strong>: locate [-d &lt;数据库文件&gt;][–help][–version][范本样式…]  </p>
<p><strong>补充说明</strong>: locate指令用于查找符合条件的文件，它会去保存文件与目录名称的数据库内，查找合乎范本样式条件的文件或目录。  </p>
<p><strong>参数</strong>:  　</p>
<p>-d&lt;数据库文件&gt;或–database&#x3D;&lt;数据库文件&gt; 设置locate指令使用的数据库。locate指令预设的数据库位于&#x2F;var&#x2F;lib&#x2F;slocate目录里，文件名为slocate.db，您可使用这个参数另行指定。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="lsattr"><a href="#lsattr" class="headerlink" title="***lsattr"></a>***lsattr</h3><p><strong>功能说明</strong>: 显示文件属性。   </p>
<p><strong>语法</strong>: lsattr [-adlRvV][文件或目录…]   </p>
<p><strong>补充说明</strong>: 用chattr执行改变文件或目录的属性，可执行lsattr指令查询其属性。   </p>
<p><strong>参数</strong>:   </p>
<p>-a 显示所有文件和目录，包括以”.”为名称开头字符的额外内建，现行目录”.”与上层目录”..”。   </p>
<p>-d 显示，目录名称，而非其内容。   </p>
<p>-l 此参数目前没有任何作用。   </p>
<p>-R 递归处理，将指定目录下的所有文件及子目录一并处理。   </p>
<p>-v 显示文件或目录版本。   </p>
<p>-V 显示版本信息。</p>
<h3 id="mattrib"><a href="#mattrib" class="headerlink" title="***mattrib"></a>***mattrib</h3><p><strong>功能说明</strong>: 变更或显示MS-DOS文件的属性。   </p>
<p><strong>语法</strong>: mattrib [+&#x2F;-][ahrs][-&#x2F;X][文件] 或 mattrib [-&#x2F;X][文件]   </p>
<p><strong>补充说明</strong>: mattrib为mtools工具指令，模拟MS-DOS的attrib指令，可变更MS-DOS文件的属性。   </p>
<p><strong>参数</strong>:  　</p>
<p>+&#x2F;- “+”代表开启指定的文件属性。”-“代表关闭指定的文件属性。  　</p>
<p>a 备份属性。使备份程序可用来判断文件是否已经备份过。  　</p>
<p>h 隐藏属性。  　</p>
<p>r 只读属性。  　</p>
<p>s 系统属性。  　</p>
<p>-&#x2F; 列出指定目录及子目录下所有文件的属性。  　</p>
<p>-X 显示文件属性时，中间不输入空格。</p>
<h3 id="mc"><a href="#mc" class="headerlink" title="***mc"></a>***mc</h3><p><strong>功能说明</strong>: 提供一个菜单式的文件管理程序。  </p>
<p><strong>语法</strong>: mc [-abcdfhkPstuUVx][-C &lt;参数&gt;][-l &lt;文件&gt;][-v &lt;文件&gt;][目录]   </p>
<p><strong>补充说明</strong>: 执行mc之后，将会看到菜单式的文件管理程序，共分成４个部分。   </p>
<p><strong>参数</strong>:  　</p>
<p>-a 当mc程序画线时不用绘图字符画线。  　</p>
<p>-b 使用单色模式显示。  　</p>
<p>-c 使用彩色模式显示。  　</p>
<p>-C&lt;参数&gt; 指定显示的颜色。  　</p>
<p>-d 不使用鼠标。  　</p>
<p>-f 显示mc函数库所在的目录。  　</p>
<p>-h 显示帮助。  　</p>
<p>-k 重设softkeys成预设置。  　</p>
<p>-l&lt;文件&gt; 在指定文件中保存ftpfs对话窗的内容。  　</p>
<p>-P 程序结束时，列出最后的工作目录。  　</p>
<p>-s 用慢速的终端机模式显示，在这模式下将减少大量的绘图及文字显示。  　</p>
<p>-t 使用TEMPCAP变量设置终端机，而不使用预设置。  　</p>
<p>-u 不用目前的shell程序。  　</p>
<p>-U 使用目前的shell程序。  　</p>
<p>-v&lt;文件&gt; 使用mc的内部编辑器来显示指定的文件。  　</p>
<p>-V 显示版本信息。  　</p>
<p>-x 指定以xterm模式显示。</p>
<h3 id="mcopy"><a href="#mcopy" class="headerlink" title="***mcopy"></a>***mcopy</h3><p><strong>功能说明</strong>: 复制MS-DOS文件。  </p>
<p><strong>语法</strong>: mcopy [-bnmpQt&#x2F;][源文件][目标文件或目录]  </p>
<p><strong>补充说明</strong>: mcopy为mtools工具指令，可在MS-DOS文件系统中复制文件或是在MS-DOS与Linux的文件系统之间复制文件。mcopy会MS-DOS磁盘驱动器代号出现的位置来判断如何复制文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-b 批处理模式。   </p>
<p>-n 覆盖其他文件时，不需进行确认而直接覆盖。  </p>
<p>-m 将源文件修改时间设为目标文件的修改时间。   </p>
<p>-p 将源文件属性设为目标文件的属性。   </p>
<p>-Q 复制多个文件时，若发生错误，则立即结束程序。   </p>
<p>-t 转换文本文件。   </p>
<p>-&#x2F; 复制子目录以及其中的所有文件。</p>
<h3 id="mdel"><a href="#mdel" class="headerlink" title="***mdel"></a>***mdel</h3><p><strong>功能说明</strong>: 删除MS-DOS文件。  </p>
<p><strong>语法</strong>: mdel [文件…]  </p>
<p><strong>补充说明</strong>: mdel为mtools工具指令，模拟MS-DOS的del指令，可删除MS-DOS文件系统中的文件。</p>
<h3 id="mdir"><a href="#mdir" class="headerlink" title="***mdir"></a>***mdir</h3><p><strong>功能说明</strong>: 显示MS-DOS目录。  </p>
<p><strong>语法</strong>: mdir [-afwx&#x2F;][目录]  </p>
<p><strong>补充说明</strong>: mdir为mtools工具指令，模拟MS-DOS的dir指令，可显示MS-DOS文件系统中的目录内容。 </p>
<p><strong>参数</strong>:   </p>
<p>-&#x2F;  显示目录下所有子目录与文件。  </p>
<p>-a 显示隐藏文件。   </p>
<p>-f 不显示磁盘所剩余的可用空间。   </p>
<p>-w 仅显示目录或文件名称，并以横排方式呈现，以便一次能显示较多的目录或文件。   </p>
<p>-X 仅显示目录下所有子目录与文件的完整路径，不显示其他信息。</p>
<h3 id="mktemp"><a href="#mktemp" class="headerlink" title="***mktemp"></a>***mktemp</h3><p><strong>功能说明</strong>: 建立暂存文件。  </p>
<p><strong>语法</strong>: mktemp [-qu][文件名参数]  </p>
<p><strong>补充说明</strong>: mktemp可建立一个暂存文件，供shell script使用。  </p>
<p><strong>参数</strong>:  　</p>
<p>-q 执行时若发生错误，不会显示任何信息。  　</p>
<p>-u 暂存文件会在mktemp结束前先行删除。  　</p>
<p>[文件名参数] 文件名参数必须是以”自订名称.XXXXXX”的格式。</p>
<h3 id="mmove"><a href="#mmove" class="headerlink" title="***mmove"></a>***mmove</h3><p><strong>功能说明</strong>: 在MS-DOS文件系统中，移动文件或目录，或更改名称。 </p>
<p><strong>语法</strong>: mmove [源文件或目录…][目标文件或目录]  </p>
<p><strong>补充说明</strong>: mmove为mtools工具指令，模拟MS-DOS的move指令，可在MS-DOS文件系统中移动现有的文件或目录，或是更改现有文件或目录的名称。</p>
<h3 id="mread"><a href="#mread" class="headerlink" title="***mread"></a>***mread</h3><p><strong>功能说明</strong>: 将MS-DOS文件复制到Linux&#x2F;Unix的目录中。  </p>
<p><strong>语法</strong>: mread [MS-DOS文件…][Linux文件或目录]  </p>
<p><strong>补充说明</strong>: mread为mtools工具指令，可将MS-DOS文件复制到Linux的文件系统中。这个指令目前已经不常用，一般都使用mcopy指令来代替。</p>
<h3 id="mren"><a href="#mren" class="headerlink" title="***mren"></a>***mren</h3><p><strong>功能说明</strong>: 更改MS-DOS文件或目录的名称，或是移动文件或目录。  </p>
<p><strong>语法</strong>: mren [源文件或目录…][目标文件或目录]  </p>
<p><strong>补充说明</strong>: mren为MS-DOS工具指令，模拟MS-DOS的ren指令，可更改MS-DOS文件或目录名称。除此之外，ren也可移动文件或目录，但仅限于在同一设备内</p>
<h3 id="mshowfat"><a href="#mshowfat" class="headerlink" title="***mshowfat"></a>***mshowfat</h3><p><strong>功能说明</strong>: 显示MS-DOS文件在FAT中的记录。 </p>
<p><strong>语法</strong>: mshowfat [文件…]  </p>
<p><strong>补充说明</strong>: mshowfat为mtools工具指令，可显示MS-DOS文件在FAT中的记录编号。</p>
<h3 id="mtools"><a href="#mtools" class="headerlink" title="***mtools"></a>***mtools</h3><p><strong>功能说明</strong>: 显示mtools支持的指令。  </p>
<p><strong>语法</strong>: mtools  </p>
<p><strong>补充说明</strong>: mtools为MS-DOS文件系统的工具程序，可模拟许多MS-DOS的指令。这些指令都是mtools的符号连接，因此会有一些共同的特性。 </p>
<p><strong>参数</strong>:   </p>
<p>-a 长文件名重复时自动更改目标文件的长文件名。  </p>
<p>-A 短文件名重复但长文件名不同时自动更改目标文件的短文件名。  </p>
<p>-o 长文件名重复时，将目标文件覆盖现有的文件。   </p>
<p>-O 短文件名重复但长文件名不同时，将目标文件覆盖现有的文件。   </p>
<p>-r 长文件名重复时，要求用户更改目标文件的长文件名。   </p>
<p>-R 短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名。   </p>
<p>-s 长文件名重复时，则不处理该目标文件。   </p>
<p>-S 短文件名重复但长文件名不同时，则不处理该目标文件。   </p>
<p>-v 执行时显示详细的说明。  </p>
<p>-V 显示版本信息。</p>
<h3 id="mtoolstest"><a href="#mtoolstest" class="headerlink" title="***mtoolstest"></a>***mtoolstest</h3><p><strong>功能说明</strong>: 测试并显示mtools的相关设置。  </p>
<p><strong>语法</strong>: mtoolstest  </p>
<p><strong>补充说明</strong>: mtoolstest为mtools工具指令，可读取与分析mtools的配置文件，并在屏幕上显示结果。</p>
<h3 id="mv"><a href="#mv" class="headerlink" title="***mv"></a>***mv</h3><p><strong>功能说明</strong>: 移动或更名现有的文件或目录。  </p>
<p><strong>语法</strong>: mv [-bfiuv][–help][–version][-S &lt;附加字尾&gt;][-V &lt;方法&gt;][源文件或目录][目标文件或目录]  </p>
<p><strong>补充说明</strong>: mv可移动文件或目录，或是更改文件或目录的名称。  </p>
<p><strong>参数</strong>:  　</p>
<p>-b或–backup 若需覆盖文件，则覆盖前先行备份。  　</p>
<p>-f或–force 若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文　件或目录。  　</p>
<p>-i或–interactive 覆盖前先行询问用户。  　</p>
<p>-S&lt;附加字尾&gt;或 　</p>
<p>–suffix&#x3D;&lt;附加字尾&gt; 与-b参数一并使用，可指定备份文件的所要附加的字尾。  　</p>
<p>-u或–update 在移动或更改文件名时，若目标文件已存在，且其文件日期比源文件新，则不覆盖目标文件。  　</p>
<p>-v或–verbose 执行时显示详细的信息。  　</p>
<p>-V&#x3D;&lt;方法&gt;或 　–version-control&#x3D;&lt;方法&gt; 与-b参数一并使用，可指定备份的方法。  　</p>
<p>–help 显示帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="od"><a href="#od" class="headerlink" title="***od"></a>***od</h3><p><strong>功能说明</strong>: 输出文件内容。  </p>
<p><strong>语法</strong>: od [-abcdfhilovx][-A &lt;字码基数&gt;][-j &lt;字符数目&gt;][-N &lt;字符数目&gt;][-s &lt;字符串字符数&gt;][-t &lt;输出格式&gt;][-w &lt;每列字符数&gt;][–help][–version][文件…]  </p>
<p><strong>补充说明</strong>: od指令会读取所给予的文件的内容，并将其内容以八进制字码呈现出来。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a 此参数的效果和同时指定”-ta”参数相同。  　</p>
<p>-A&lt;字码基数&gt; 选择要以何种基数计算字码。  　</p>
<p>-b 此参数的效果和同时指定”-toC”参数相同。  　</p>
<p>-c 此参数的效果和同时指定”-tC”参数相同。  　</p>
<p>-d 此参数的效果和同时指定”-tu2”参数相同。  　</p>
<p>-f 此参数的效果和同时指定”-tfF”参数相同。  　</p>
<p>-h 此参数的效果和同时指定”-tx2”参数相同。  　</p>
<p>-i 此参数的效果和同时指定”-td2”参数相同。  　</p>
<p>-j&lt;字符数目&gt;或–skip-bytes&#x3D;&lt;字符数目&gt; 略过设置的字符数目。  　</p>
<p>-l 此参数的效果和同时指定”-td4”参数相同。  　</p>
<p>-N&lt;字符数目&gt;或–read-bytes&#x3D;&lt;字符数目&gt; 到设置的字符数目为止。  　</p>
<p>-o 此参数的效果和同时指定”-to2”参数相同。  　</p>
<p>-s&lt;字符串字符数&gt;或–strings&#x3D;&lt;字符串字符数&gt; 只显示符合指定的字符数目的字符串。  　</p>
<p>-t&lt;输出格式&gt;或–format&#x3D;&lt;输出格式&gt; 设置输出格式。  　</p>
<p>-v或–output-duplicates 输出时不省略重复的数据。  　</p>
<p>-w&lt;每列字符数&gt;或–width&#x3D;&lt;每列字符数&gt; 设置每列的最大字符数。  </p>
<p>-x 此参数的效果和同时指定”-h”参数相同。  　</p>
<p>–help 在线帮助。  　</p>
<p>-version 显示版本信息。</p>
<h3 id="paste"><a href="#paste" class="headerlink" title="***paste"></a>***paste</h3><p><strong>功能说明</strong>: 合并文件的列。  </p>
<p><strong>语法</strong>: paste [-s][-d &lt;间隔字符&gt;][–help][–version][文件…]  </p>
<p><strong>补充说明</strong>: paste指令会把每个文件以列对列的方式，一列列地加以合并。  </p>
<p><strong>参数：</strong> 　</p>
<p>-d&lt;间隔字符&gt;或–delimiters&#x3D;&lt;间隔字符&gt; 用指定的间隔字符取代跳格字符。  　</p>
<p>-s或–serial 串列进行而非平行处理。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示帮助信息。</p>
<h3 id="patch"><a href="#patch" class="headerlink" title="***patch"></a>***patch</h3><p><strong>功能说明</strong>: 修补文件。  </p>
<p><strong>语法</strong>: patch [-bceEflnNRstTuvZ][-B &lt;备份字首字符串&gt;][-d &lt;工作目录&gt;][-D &lt;标示符号&gt;][-F &lt;监别列数&gt;][-g &lt;控制数值&gt;][-i &lt;修补文件&gt;][-o &lt;输出文件&gt;][-p &lt;剥离层级&gt;][-r &lt;拒绝文件&gt;][-V &lt;备份方式&gt;][-Y &lt;备份字首字符串&gt;][-z &lt;备份字尾字符串&gt;][–backup-if -mismatch][–binary][–help][–nobackup-if-mismatch][–verbose][原始文件 &lt;修补文件&gt;] 或 path [-p &lt;剥离层级&gt;] &lt; [修补文件]  </p>
<p><strong>补充说明</strong>: patch指令让用户利用设置修补文件的方式，修改，更新原始文件。倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。  </p>
<p><strong>参数</strong>:  　</p>
<p>-b或–backup 备份每一个原始文件。  　</p>
<p>-B&lt;备份字首字符串&gt;或–prefix&#x3D;&lt;备份字首字符串&gt; 设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称。  　</p>
<p>-c或–context 把修补数据解译成关联性的差异。  　</p>
<p>-d&lt;工作目录&gt;或–directory&#x3D;&lt;工作目录&gt; 设置工作目录。  　</p>
<p>-D&lt;标示符号&gt;或–ifdef&#x3D;&lt;标示符号&gt; 用指定的符号把改变的地方标示出来。  　</p>
<p>-e或–ed 把修补数据解译成ed指令可用的叙述文件。  　</p>
<p>E或–remove-empty-files 若修补过后输出的文件其内容是一片空白，则移除该文件。  　</p>
<p>-f或–force 此参数的效果和指定”-t”参数类似，但会假设修补数据的版本为新　版本。  　</p>
<p>-F&lt;监别列数&gt;或–fuzz&lt;监别列数&gt; 设置监别列数的最大值。  　</p>
<p>-g&lt;控制数值&gt;或–get&#x3D;&lt;控制数值&gt; 设置以RSC或SCCS控制修补作业。  　</p>
<p>-i&lt;修补文件&gt;或–input&#x3D;&lt;修补文件&gt; 读取指定的修补问家你。  　</p>
<p>-l或–ignore-whitespace 忽略修补数据与输入数据的跳格，空格字符。  　</p>
<p>-n或–normal 把修补数据解译成一般性的差异。  　</p>
<p>-N或–forward 忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使　用过。  　</p>
<p>-o&lt;输出文件&gt;或–output&#x3D;&lt;输出文件&gt; 设置输出文件的名称，修补过的文件会以该名称存放。  　</p>
<p>-p&lt;剥离层级&gt;或–strip&#x3D;&lt;剥离层级&gt; 设置欲剥离几层路径名称。  　</p>
<p>-f&lt;拒绝文件&gt;或–reject-file&#x3D;&lt;拒绝文件&gt; 设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej。  　</p>
<p>-R或–reverse 假设修补数据是由新旧文件交换位置而产生。  　</p>
<p>-s或–quiet或–silent 不显示指令执行过程，除非发生错误。  　</p>
<p>-t或–batch 自动略过错误，不询问任何问题。  　</p>
<p>-T或–set-time 此参数的效果和指定”-Z”参数类似，但以本地时间为主。  　</p>
<p>-u或–unified 把修补数据解译成一致化的差异。  　</p>
<p>-v或–version 显示版本信息。  　</p>
<p>-V&lt;备份方式&gt;或–version-control&#x3D;&lt;备份方式&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用”-z”参数变更，当使用”-V”参数指定不同备份方式时，也会产生不同字尾的备份字符串。 　</p>
<p>-Y&lt;备份字首字符串&gt;或–basename-prefix&#x3D;–&lt;备份字首字符串&gt; 设置文件备份时，附加在文件基本名称开头的字首字符串。 　</p>
<p>-z&lt;备份字尾字符串&gt;或–suffix&#x3D;&lt;备份字尾字符串&gt; 此参数的效果和指定”-B”参数类似，差别在于修补作业使用的路径与文件名若为src&#x2F;linux&#x2F;fs&#x2F;super.c，加上”backup&#x2F;“字符串后，文件super.c会备份于&#x2F;src&#x2F;linux&#x2F;fs&#x2F;backup目录里。  　</p>
<p>-Z或–set-utc 把修补过的文件更改，存取时间设为UTC。  　</p>
<p>–backup-if-mismatch 在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件。  　</p>
<p>–binary 以二进制模式读写数据，而不通过标准输出设备。  　</p>
<p>–help 在线帮助。  　</p>
<p>–nobackup-if-mismatch 在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件。  　</p>
<p>–verbose 详细显示指令的执行过程。</p>
<h3 id="rcp"><a href="#rcp" class="headerlink" title="***rcp"></a>***rcp</h3><p><strong>功能说明</strong>: 远端复制文件或目录。  </p>
<p><strong>语法</strong>: rcp [-pr][源文件或目录][目标文件或目录] 或 rcp [-pr][源文件或目录…][目标文件]  </p>
<p><strong>补充说明</strong> ：rcp指令用在远端复制文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则它灰把前面指定的所有文件或目录复制到该目录中。 </p>
<p><strong>参数</strong> :   </p>
<p>-p 保留源文件或目录的属性，包括拥有者，所属群组，权限与时间。   </p>
<p>-r 递归处理，将指定目录下的文件与子目录一并处理。</p>
<h3 id="rhmask"><a href="#rhmask" class="headerlink" title="***rhmask"></a>***rhmask</h3><p><strong>功能说明</strong>: 产生与还原加密文件。  </p>
<p><strong>语法</strong>: rhmask [加密文件][输出文件] 或 rhmask [-d][加密文件][源文件][输出文件]  </p>
<p><strong>补充说明</strong>: 执行rhmask指令可制作加密过的文件，方便用户在公开的网络上传输该文件，而不至于被任意盗用。 </p>
<p><strong>参数：</strong>  </p>
<p>-d 产生加密过的文件。</p>
<h3 id="rm"><a href="#rm" class="headerlink" title="***rm"></a>***rm</h3><p><strong>功能说明</strong>: 删除文件或目录。  </p>
<p><strong>语法</strong>: rm [-dfirv][–help][–version][文件或目录…]  </p>
<p><strong>补充说明</strong>: 执行rm指令可删除文件或目录，如欲删除目录必须加上参数”-r”，否则预设仅会删除文件。 </p>
<p><strong>参数</strong>:  　</p>
<p>-d或–directory 直接把欲删除的目录的硬连接数据删成0，删除该目录。  　</p>
<p>-f或–force 强制删除文件或目录。  　</p>
<p>-i或–interactive 删除既有文件或目录之前先询问用户。  　</p>
<p>-r或-R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="slocate"><a href="#slocate" class="headerlink" title="***slocate"></a>***slocate</h3><p><strong>功能说明</strong>: 查找文件或目录。  </p>
<p><strong>语法</strong>: slocate [-u][–help][–version][-d &lt;目录&gt;][查找的文件]  </p>
<p><strong>补充说明</strong>: slocate本身具有一个数据库，里面存放了系统中文件与目录的相关信息。  </p>
<p><strong>参数</strong>:  　</p>
<p>-d&lt;目录&gt;或–database&#x3D;&lt;目录&gt; 指定数据库所在的目录。  　</p>
<p>-u 更新slocate数据库。  　</p>
<p>–help 显示帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="split"><a href="#split" class="headerlink" title="***split"></a>***split</h3><p><strong>功能说明</strong>: 切割文件。  </p>
<p><strong>语法</strong>: split [–help][–version][-&lt;行数&gt;][-b &lt;字节&gt;][-C &lt;字节&gt;][-l &lt;行数&gt;][要切割的文件][输出文件名] </p>
<p><strong>补充说明</strong>: split可将文件切成较小的文件，预设每1000行会切成一个小文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-&lt;行数&gt;或-l&lt;行数&gt; 指定每多少行就要切成一个小文件。  　</p>
<p>-b&lt;字节&gt; 指定每多少字就要切成一个小文件。  　</p>
<p>-C&lt;字节&gt; 与-b参数类似，但切割时尽量维持每行的完整性。  　</p>
<p>–help 显示帮助。  　</p>
<p>–version 显示版本信息。  　</p>
<p>[输出文件名] 设置切割后文件的前置文件名，split会自动在前置文件名后再加上编号。</p>
<h3 id="tee"><a href="#tee" class="headerlink" title="***tee"></a>***tee</h3><p><strong>功能说明</strong>: 读取标准输入的数据，并将其内容输出成文件。  </p>
<p><strong>语法</strong>: tee [-ai][–help][–version][文件…]  </p>
<p><strong>补充说明</strong>: tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–append 附加到既有文件的后面，而非覆盖它．  　</p>
<p>-i-i或–ignore-interrupts 忽略中断信号。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="tmpwatch"><a href="#tmpwatch" class="headerlink" title="***tmpwatch"></a>***tmpwatch</h3><p><strong>功能说明</strong>: 删除暂存文件。  </p>
<p><strong>语法</strong>: tmpwatch [-afqv][–test][超期时间][目录…]  </p>
<p><strong>补充说明</strong>: 执行tmpwatch指令可删除不必要的暂存文件，您可以设置文件超期时间，单位以小时计算。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–all 删除任何类型的文件。  　</p>
<p>-f或–force 强制删除文件或目录，其效果类似rm指令的”-f”参数。  　</p>
<p>-q或–quiet 不显示指令执行过程。  　</p>
<p>-v或–verbose 详细显示指令执行过程。  　</p>
<p>-test 仅作测试，并不真的删除文件或目录。</p>
<h3 id="touch"><a href="#touch" class="headerlink" title="***touch"></a>***touch</h3><p><strong>功能说明</strong>: 改变文件或目录时间。  </p>
<p><strong>语法</strong>: touch [-acfm][-d &lt;日期时间&gt;][-r &lt;参考文件或目录&gt;][-t &lt;日期时间&gt;][–help]　　 [–version][文件或目录…] 或 touch [-acfm][–help][–version][日期时间][文件或目录…]   </p>
<p><strong>补充说明</strong>: 使用touch指令可更改文件或目录的日期时间，包括存取时间和更改时间。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–time&#x3D;atime或–time&#x3D;access或–time&#x3D;use 只更改存取时间。  　</p>
<p>-c或–no-create 不建立任何文件。  　</p>
<p>-d&lt;时间日期&gt; 使用指定的日期时间，而非现在的时间。  　</p>
<p>-f 此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题。  　</p>
<p>-m或–time&#x3D;mtime或–time&#x3D;modify 只更改变动时间。  　</p>
<p>-r&lt;参考文件或目录&gt; 把指定文件或目录的日期时间，统统设成和参考文件或目录的日期时间相同。  　</p>
<p>-t&lt;日期时间&gt; 使用指定的日期时间，而非现在的时间。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="umask"><a href="#umask" class="headerlink" title="***umask"></a>***umask</h3><p><strong>功能说明</strong>: 指定在建立文件时预设的权限掩码。  </p>
<p><strong>语法</strong>: umask [-S][权限掩码]  </p>
<p><strong>补充说明</strong>: umask可用来设定[权限掩码]。[权限掩码]是由3个八进制的数字所组成，将现有的存取权限减掉权限掩码后，即可产生建立文件时预设的权限。  </p>
<p><strong>参数</strong>:   </p>
<p>-S 以文字的方式来表示权限掩码。</p>
<h3 id="whereis"><a href="#whereis" class="headerlink" title="***whereis"></a>***whereis</h3><p><strong>功能说明</strong>: 查找文件。 </p>
<p><strong>语法</strong>: whereis [-bfmsu][-B &lt;目录&gt;…][-M &lt;目录&gt;…][-S &lt;目录&gt;…][文件…] </p>
<p><strong>补充说明</strong>: whereis指令会在特定目录中查找符合条件的文件。这些文件的烈性应属于原始代码，二进制文件，或是帮助文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-b 只查找二进制文件。  　</p>
<p>-B&lt;目录&gt; 只在设置的目录下查找二进制文件。  　</p>
<p>-f 不显示文件名前的路径名称。  　</p>
<p>-m 只查找说明文件。  　</p>
<p>-M&lt;目录&gt; 只在设置的目录下查找说明文件。  　</p>
<p>-s 只查找原始代码文件。  　</p>
<p>-S&lt;目录&gt; 只在设置的目录下查找原始代码文件。  　</p>
<p>-u 查找不包含指定类型的文件。</p>
<h3 id="which"><a href="#which" class="headerlink" title="***which"></a>***which</h3><p><strong>功能说明</strong>: 查找文件</p>
<p><strong>语法</strong>: which [文件…]  </p>
<p><strong>补充说明</strong>: which指令会在环境变量$PATH设置的目录里查找符合条件的文件。  </p>
<p><strong>参数</strong>:  　</p>
<p>-n&lt;文件名长度&gt; 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。  　</p>
<p>-p&lt;文件名长度&gt; 与-n参数相同，但此处的&lt;文件名长度&gt;包括了文件的路径。  　</p>
<p>-w 指定输出时栏位的宽度。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="cat"><a href="#cat" class="headerlink" title="***cat"></a>***cat</h3><p><strong>使用权限</strong>:  所有使用者</p>
<p><strong>语法</strong>: cat [-AbeEnstTuv] [–help] [–version] fileName   </p>
<p><strong>说明</strong>:  把档案串连接后传到基本输出（萤幕或加 ** &gt; fileName**  到另一个档案） </p>
<p><strong>参数</strong>:  </p>
<p>-n 或 –number 由  1 开始对所有输出的行数编号 </p>
<p>-b 或 –number-nonblank 和 -n 相似，只不过对于空白行不编号 </p>
<p>-s 或  –squeeze-blank 当遇到有连续两行以上的空白行，就代换为一行的空白行</p>
<p>-v 或  –show-nonprinting </p>
<p><strong>示例</strong>: </p>
<p>cat -n textfile1 &gt; textfile2 把 textfile1  的档案内容加上行号后输入 textfile2 这个档案里 </p>
<p>cat -b textfile1 textfile2 &gt;&gt; textfile3 把  textfile1 和 textfile2 的档案内容加上行号（空白行不加）之后将内容附加到 textfile3 里。</p>
<h3 id="chattr"><a href="#chattr" class="headerlink" title="***chattr"></a>***chattr</h3><p><strong>功能说明</strong>: 改变文件属性。  </p>
<p><strong>语法</strong>: chattr [-RV][-v&lt;版本编号&gt;][+&#x2F;-&#x2F;&#x3D;&lt;属性&gt;][文件或目录…]  </p>
<p><strong>补充说明</strong>: 这项指令可改变存放在ext2文件系统上的文件或目录属性，这些属性共有以下8种模式：  　</p>
<p>a：让文件或目录仅供附加用途。  　</p>
<p>b：不更新文件或目录的最后存取时间。  　</p>
<p>c：将文件或目录压缩后存放。  　</p>
<p>d：将文件或目录排除在倾倒操作之外。  　</p>
<p>i：不得任意更动文件或目录。  　</p>
<p>s：保密性删除文件或目录。  　</p>
<p>S：即时更新文件或目录。  　</p>
<p>u：预防以外删除。    </p>
<p><strong>参数</strong>:  　</p>
<p>-R 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v&lt;版本编号&gt; 设置文件或目录版本。  　</p>
<p>-V 显示指令执行过程。  　</p>
<p>+&lt;属性&gt; 开启文件或目录的该项属性。  　</p>
<p>-&lt;属性&gt; 关闭文件或目录的该项属性。  　</p>
<p>&#x3D;&lt;属性&gt; 指定文件或目录的该项属性。</p>
<h3 id="chgrp"><a href="#chgrp" class="headerlink" title="***chgrp"></a>***chgrp</h3><p><strong>功能说明</strong>: 变更文件或目录的所属群组。  </p>
<p><strong>语法</strong>: chgrp [-cfhRv][–help][–version][所属群组][文件或目录…] 或 chgrp [-cfhRv][–help][–reference&#x3D;&lt;参考文件或目录&gt;][–version][文件或目录…]   </p>
<p><strong>补充说明</strong>: 在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。您可以使用chgrp指令去变更文件与目录的所属群组，设置方式采用群组名称或群组识别码皆可。   </p>
<p><strong>参数</strong>:  　</p>
<p>-c或–changes 效果类似”-v”参数，但仅回报更改的部分。  　</p>
<p>-f或–quiet或–silent 不显示错误信息。  　</p>
<p>-h或–no-dereference 只对符号连接的文件作修改，而不更动其他任何相关文件。  　</p>
<p>-R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>–help 在线帮助。  　</p>
<p>–reference&#x3D;&lt;参考文件或目录&gt; 把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="chmod"><a href="#chmod" class="headerlink" title="***chmod"></a>***chmod</h3><p><strong>功能说明</strong>: 变更文件或目录的权限。  </p>
<p><strong>语法</strong>: chmod [-cfRv][–help][–version][&lt;权限范围&gt;+&#x2F;-&#x2F;&#x3D;&lt;权限设置…&gt;][文件或目录…] 或 chmod [-cfRv][–help][–version][数字代号][文件或目录…] 或 chmod [-cfRv][–help][–reference&#x3D;&lt;参考文件或目录&gt;][–version][文件或目录…]   </p>
<p><strong>补充说明</strong>: 在UNIX系统家族里，文件或目录权限的控制分别以读取，写入，执行3种一般权限来区分，另有3种特殊权限可供运用，再搭配拥有者与所属群组管理权限范围。您可以使用chmod指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果您对符号连接修改权限，其改变会作用在被连接的原始文件。权限范围的表示法如下：  　</p>
<p>u：User，即文件或目录的拥有者。  　</p>
<p>g：Group，即文件或目录的所属群组。  　</p>
<p>o：Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围。  　</p>
<p>a：All，即全部的用户，包含拥有者，所属群组以及其他用户。    　</p>
<p>有关权限代号的部分，列表于下：  　</p>
<p>r：读取权限，数字代号为”4”。  　</p>
<p>w：写入权限，数字代号为”2”。  　</p>
<p>x：执行或切换权限，数字代号为”1”。  　</p>
<p>-：不具任何权限，数字代号为”0”。  　</p>
<p>s：特殊?b&gt;功能说明：变更文件或目录的权限。   </p>
<p><strong>参数</strong>:  　</p>
<p>-c或–changes 效果类似”-v”参数，但仅回报更改的部分。  　</p>
<p>-f或–quiet或–silent 不显示错误信息。  　</p>
<p>-R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>–help 在线帮助。  　</p>
<p>–reference&#x3D;&lt;参考文件或目录&gt; 把指定文件或目录的权限全部设成和参考文件或目录的权限相同  　</p>
<p>–version 显示版本信息。  　</p>
<p>&lt;权限范围&gt;+&lt;权限设置&gt; 开启权限范围的文件或目录的该项权限设置。  　</p>
<p>&lt;权限范围&gt;-&lt;权限设置&gt; 关闭权限范围的文件或目录的该项权限设置。  　</p>
<p>&lt;权限范围&gt;&#x3D;&lt;权限设置&gt; 指定权限范围的文件或目录的该项权限设置。</p>
<h3 id="chown"><a href="#chown" class="headerlink" title="***chown"></a>***chown</h3><p><strong>功能说明</strong>: 变更文件或目录的拥有者或所属群组。  </p>
<p><strong>语法</strong>: chown [-cfhRv][–dereference][–help][–version][拥有者.&lt;所属群组&gt;][文件或目录..] 或chown [-chfRv][–dereference][–help][–version][.所属群组][文件或目录… …] 或chown [-cfhRv][–dereference][–help][–reference&#x3D;&lt;参考文件或目录&gt;][–version][文件或目录…]   </p>
<p><strong>补充说明</strong>: 在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。您可以使用chown指令去变更文件与目录的拥有者或所属群组，设置方式采用用户名称或用户识别码皆可，设置群组则用群组名称或群组识别码。   </p>
<p><strong>参数</strong>:  　</p>
<p>-c或–changes 效果类似”-v”参数，但仅回报更改的部分。  　</p>
<p>-f或–quite或–silent 不显示错误信息。  　</p>
<p>-h或–no-dereference 之对符号连接的文件作修改，而不更动其他任何相关文件。  　</p>
<p>-R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。  　</p>
<p>-v或–version 显示指令执行过程。  　</p>
<p>–dereference 效果和”-h”参数相同。  　</p>
<p>–help 在线帮助。  　</p>
<p>–reference&#x3D;&lt;参考文件或目录&gt; 把指定文件或目录的拥有者与所属群组全部设成和参考文件或目　录的拥有者与所属群组相同。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="cksum"><a href="#cksum" class="headerlink" title="***cksum"></a>***cksum</h3><p><strong>功能说明</strong>: 检查文件的CRC是否正确。   </p>
<p><strong>语法</strong>: cksum [–help][–version][文件…]   </p>
<p><strong>补充说明</strong>: CRC是一种排错检查方式，该演算法的标准由CCITT所指定，至少可检测到99.998%的已知错误。指定文件交由cksum演算，它会回报计算结果，供用户核对文件是否正确无误。若不指定任何文件名称或是所给予的文件名为”-“，则cksum指令会从标准输入设备读取数据。   </p>
<p><strong>参数</strong>:  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="cmp"><a href="#cmp" class="headerlink" title="***cmp"></a>***cmp</h3><p><strong>功能说明</strong>: 比较两个文件是否有差异。  </p>
<p><strong>语法</strong>: cmp [-clsv][-i &lt;字符数目&gt;][–help][第一个文件][第二个文件]  </p>
<p><strong>补充说明</strong>: 当相互比较的两个文件完全一样时，则该指令不会显示任何信息。若发现有所差异，预设会标示出第一个不同之处的字符和列数编号。若不指定任何文件名称或是所给予的文件名为”-“，则cmp指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  　</p>
<p>-c或–print-chars 除了标明差异处的十进制字码之外，一并显示该字符所对应字符。  　</p>
<p>-i&lt;字符数目&gt;或–ignore-initial&#x3D;&lt;字符数目&gt; 指定一个数目。  　</p>
<p>-l或–verbose 标示出所有不一样的地方。  　</p>
<p>-s或–quiet或–silent 不显示错误信息。  　</p>
<p>-v或–version 显示版本信息。  　</p>
<p>–help 在线帮助。</p>
<h3 id="cp"><a href="#cp" class="headerlink" title="***cp"></a>***cp</h3><p><strong>功能说明</strong>: 复制文件或目录。   </p>
<p><strong>语法</strong>: cp [-abdfilpPrRsuvx][-S &lt;备份字尾字符串&gt;][-V &lt;备份方式&gt;][–help][–spares&#x3D;&lt;使用时机&gt;][–version][源文件或目录][目标文件或目录] [目的目录]   </p>
<p><strong>补充说明</strong>: cp指令用在复制文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则它会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，而最后的目的地并非是一个已存在的目录，则会出现错误信息。  </p>
<p><strong>参数</strong>:  　</p>
<p>-a或–archive 此参数的效果和同时指定”-dpR”参数相同。  　</p>
<p>-b或–backup 删除，覆盖目标文件之前的备份，备份文件会在字尾加上一个备份字符串。  　</p>
<p>-d或–no-dereference 当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录。  　</p>
<p>-f或–force 强行复制文件或目录，不论目标文件或目录是否已存在。  　</p>
<p>-i或–interactive 覆盖既有文件之前先询问用户。  　</p>
<p>-l或–link 对源文件建立硬连接，而非复制文件。  　</p>
<p>-p或–preserve 保留源文件或目录的属性。  　</p>
<p>-P或–parents 保留源文件或目录的路径。  　</p>
<p>-r 递归处理，将指定目录下的文件与子目录一并处理。  　</p>
<p>-R或–recursive 递归处理，将指定目录下的所有文件与子目录一并处理。  　</p>
<p>-s或–symbolic-link 对源文件建立符号连接，而非复制文件。  　</p>
<p>-S&lt;备份字尾字符串&gt;或–suffix&#x3D;&lt;备份字尾字符串&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，预设的备份字尾字符串是符号”~”。  　</p>
<p>-u或–update 使用这项参数后只会在源文件的更改时间较目标文件更新时或是　名称相互对应的目标文件并不存在，才复制文件。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>-V&lt;备份方式&gt;或–version-control&#x3D;&lt;备份方式&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这字符串不仅可用”-S”参数变更，当使用”-V”参数指定不同备份方式时，也会产生不同字尾的备份字串。  　</p>
<p>-x或–one-file-system 复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不予复制。  　</p>
<p>–help 在线帮助。  　</p>
<p>–sparse&#x3D;&lt;使用时机&gt; 设置保存稀疏文件的时机。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="cut"><a href="#cut" class="headerlink" title="***cut"></a>***<strong>cut</strong></h3><p><strong>使用权限</strong>:  所有使用者 </p>
<p><strong>用法</strong>: cut -cnum1-num2 filename 说明：显示每行从开头算起 num1 到 num2 的文字。 </p>
<p><strong>范例</strong>:      </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shell&gt;&gt; cat example    </span><br><span class="line">test2     </span><br><span class="line">this is  test1     </span><br><span class="line">shell&gt;&gt; cut -c0-6 example    ## print 开头算起前 6  个字元     t</span><br><span class="line">est2     </span><br><span class="line">this i  </span><br></pre></td></tr></table></figure>

<h3 id="indent"><a href="#indent" class="headerlink" title="***indent"></a>***indent</h3><p><strong>功能说明</strong>: 调整C原始代码文件的格式。  </p>
<p> <strong>语法</strong>: indent [参数][源文件] 或 indent [参数][源文件][-o 目标文件]  </p>
<p><strong>补充说明</strong>: indent可辨识C的原始代码文件，并加以格式化，以方便程序设计师阅读。  </p>
<p><strong>参数</strong>:  　</p>
<p>-bad或–blank-lines-after-declarations 　在声明区段或加上空白行。  　</p>
<p>-bap或–blank-lines-after-procedures 在程序或加上空白行。  　</p>
<p>-bbb或–blank-lines-after-block-comments 在注释区段后加上空白行。  　</p>
<p>-bc或–blank-lines-after-commas 　在声明区段中，若出现逗号即换行。  　</p>
<p>-bl或–braces-after-if-line if(或是else,for等等)与后面执行区段的”{“不同行，且”}”自成一行。  　</p>
<p>-bli&lt;缩排格数&gt;或–brace-indent&lt;缩排格数&gt; 设置{ }缩排的格数。  　</p>
<p>-br或–braces-on-if-line if(或是else,for等等)与后面执行跛段的”{“不同行，且”}”自成一行。  　</p>
<p>-bs或–blank-before-sizeof 在sizeof之后空一格。  　</p>
<p>-c&lt;栏数&gt;或–comment-indentation&lt;栏数&gt; 将注释置于程序码右侧指定的栏位。  　</p>
<p>-cd&lt;栏数&gt;或–declaration-comment-column&lt;栏数&gt; 将注释置于声明右侧指定的栏位。  　</p>
<p>-cdb或–comment-delimiters-on-blank-lines 注释符号自成一行。  　</p>
<p>-ce或–cuddle-else 将else置于”}”(if执行区段的结尾)之后。  　</p>
<p>-ci&lt;缩排格数&gt;或–continuation-indentation&lt;缩排格数&gt; 叙述过长而换行时，指定换行后缩排的格数。  　</p>
<p>-cli&lt;缩排格数&gt;或–case-indentation-&lt;缩排格数&gt; 使用case时，switch缩排的格数。  　</p>
<p>-cp&lt;栏数&gt;或-else-endif-column&lt;栏数&gt; 将注释置于else与elseif叙述右侧定的栏位。  　</p>
<p>-cs或–space-after-cast 在cast之后空一格。  　</p>
<p>-d&lt;缩排格数&gt;或-line-comments-indentation&lt;缩排格数&gt; 针对不是放在程序码右侧的注释，设置其缩排格数。  　</p>
<p>-di&lt;栏数&gt;或–declaration-indentation&lt;栏数&gt; 将声明区段的变量置于指定的栏位。  　</p>
<p>-fc1或–format-first-column-comments 针对放在每行最前端的注释，设置其格式。  　</p>
<p>-fca或–format-all-comments 设置所有注释的格式。  　</p>
<p>-gnu或–gnu-style 指定使用GNU的格式，此为预设值。  　</p>
<p>-i&lt;格数&gt;或–indent-level&lt;格数&gt; 设置缩排的格数。  　</p>
<p>-ip&lt;格数&gt;或–parameter-indentation&lt;格数&gt; 设置参数的缩排格数。  　</p>
<p>-kr或–k-and-r-style 指定使用Kernighan&amp;Ritchie的格式。  　</p>
<p>-lp或–continue-at-parentheses 叙述过长而换行，且叙述中包含了括弧时，将括弧中的每行起始栏位内容垂直对其排列。  　</p>
<p>-nbad或–no-blank-lines-after-declarations 在声明区段后不要加上空白行。  　</p>
<p>-nbap或–no-blank-lines-after-procedures 在程序后不要加上空白行。  　</p>
<p>-nbbb或–no-blank-lines-after-block-comments 在注释区段后不要加上空白行。  　</p>
<p>-nbc或–no-blank-lines-after-commas 在声明区段中，即使出现逗号，仍旧不要换行。  　</p>
<p>-ncdb或–no-comment-delimiters-on-blank-lines 注释符号不要自成一行。  　</p>
<p>-nce或–dont-cuddle-else 不要将else置于”}”之后。  　</p>
<p>-ncs或–no-space-after-casts 不要在cast之后空一格。  　</p>
<p>-nfc1或–dont-format-first-column-comments 不要格式化放在每行最前端的注释。  　</p>
<p>-nfca或–dont-format-comments 不要格式化任何的注释。  　</p>
<p>-nip或–no-parameter-indentation 参数不要缩排。  　</p>
<p>-nlp或–dont-line-up-parentheses 叙述过长而换行，且叙述中包含了括弧时，不用将括弧中的每行起始栏位垂直对其排列。  　</p>
<p>-npcs或–no-space-after-function-call-names 在调用的函数名称之后，不要加上空格。  　</p>
<p>-npro或–ignore-profile 不要读取indent的配置文件.indent.pro。  　</p>
<p>-npsl或–dont-break-procedure-type 程序类型与程序名称放在同一行。  　</p>
<p>-nsc或–dont-star-comments 注解左侧不要加上星号(*)。  　</p>
<p>-nsob或–leave-optional-semicolon 不用处理多余的空白行。  　</p>
<p>-nss或–dont-space-special-semicolon 　若for或while区段仅有一行时，在分号前不加上空格。  　</p>
<p>-nv或–no-verbosity 不显示详细的信息。  　</p>
<p>-orig或–original 使用Berkeley的格式。  　</p>
<p>-pcs或–space-after-procedure-calls 在调用的函数名称与”{“之间加上空格。  　</p>
<p>-psl或–procnames-start-lines 程序类型置于程序名称的前一行。  　</p>
<p>-sc或–start-left-side-of-comments 在每行注释左侧加上星号(*)。  　</p>
<p>-sob或–swallow-optional-blank-lines 删除多余的空白行。  　</p>
<p>-ss或–space-special-semicolon 若for或swile区段今有一行时，在分号前加上空格。  　</p>
<p>-st或–standard-output 将结果显示在标准输出设备。  　</p>
<p>-T 数据类型名称缩排。  　</p>
<p>-ts&lt;格数&gt;或–tab-size&lt;格数&gt; 设置tab的长度。  　</p>
<p>-v或–verbose 执行时显示详细的信息。  　</p>
<p>-version 显示版本信息。</p>
<h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><h3 id="cd"><a href="#cd" class="headerlink" title="***cd"></a>***cd</h3><p><strong>功能说明</strong>: 切换目录。  </p>
<p><strong>语法</strong>: cd [目的目录]  </p>
<p><strong>补充说明</strong>: </p>
<p>cd指令可让用户在不同的目录间切换，但该用户必须拥有足够的权限进入目的目录。</p>
<h3 id="df"><a href="#df" class="headerlink" title="***df"></a>***df</h3><p><strong>功能说明</strong>: 显示磁盘的相关信息。  </p>
<p><strong>语法</strong>: df [-ahHiklmPT][–block-size&#x3D;&lt;区块大小&gt;][-t &lt;文件系统类型&gt;][-x &lt;文件系统类型&gt;][–help][–no-sync][–sync][–version][文件或设备]  </p>
<p><strong>补充说明</strong>: df可显示磁盘的文件系统与使用情形。  </p>
<p><strong>参数</strong>:   </p>
<p>-a或–all  包含全部的文件系统。  </p>
<p>–block-size&#x3D;&lt;区块大小&gt;  以指定的区块大小来显示区块数目。  </p>
<p>-h或–human-readable  以可读性较高的方式来显示信息。  </p>
<p>-H或–si  与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes。  </p>
<p>-i或–inodes  显示inode的信息。  </p>
<p>-k或–kilobytes  指定区块大小为1024字节。  </p>
<p>-l或–local  仅显示本地端的文件系统。  </p>
<p>-m或–megabytes  指定区块大小为1048576字节。  </p>
<p>–no-sync  在取得磁盘使用信息前，不要执行sync指令，此为预设值。  </p>
<p>-P或–portability  使用POSIX的输出格式。  </p>
<p>–sync  在取得磁盘使用信息前，先执行sync指令。 </p>
<p> -t&lt;文件系统类型&gt;或–type&#x3D;&lt;文件系统类型&gt;  仅显示指定文件系统类型的磁盘信息。 </p>
<p>-T或–print-type  显示文件系统的类型。  </p>
<p>-x&lt;文件系统类型&gt;或–exclude-type&#x3D;&lt;文件系统类型&gt;  不要显示指定文件系统类型的磁盘信息。 </p>
<p>–help  显示帮助。  </p>
<p>–version  显示版本信息。 </p>
<p> [文件或设备]  指定磁盘设备。</p>
<h3 id="dirs"><a href="#dirs" class="headerlink" title="***dirs"></a>***dirs</h3><p><strong>功能说明</strong>: 显示目录记录。  </p>
<p><strong>语法</strong>: dirs [+&#x2F;-n -l]  </p>
<p><strong>补充说明</strong>: 显示目录堆叠中的记录。 </p>
<p><strong>参数</strong>:  </p>
<p>+n  显示从左边算起第n笔的目录。  </p>
<p>-n  显示从右边算起第n笔的目录。  </p>
<p>-l  显示目录完整的记录。</p>
<h3 id="du"><a href="#du" class="headerlink" title="***du"></a>***du</h3><p><strong>功能说明</strong>: 显示目录或文件的大小。  </p>
<p><strong>语法</strong>: du [-abcDhHklmsSx][-L &lt;符号连接&gt;][-X &lt;文件&gt;][–block-size][–exclude&#x3D;&lt;目录或文件&gt;][–max-depth&#x3D;&lt;目录层数&gt;][–help][–version][目录或文件]  </p>
<p><strong>补充说明</strong>: du会显示指定的目录或文件所占用的磁盘空间。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或-all  显示目录中个别文件的大小。  </p>
<p>-b或-bytes  显示目录或文件大小时，以byte为单位。  </p>
<p>-c或–total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。  </p>
<p>-D或–dereference-args  显示指定符号连接的源文件大小。 </p>
<p>-h或–human-readable  以K，M，G为单位，提高信息的可读性。  </p>
<p>-H或–si  与-h参数相同，但是K，M，G是以1000为换算单位。 </p>
<p>-k或–kilobytes  以1024 bytes为单位。  </p>
<p>-l或–count-links  重复计算硬件连接的文件。  </p>
<p>-L&lt;符号连接&gt;或–dereference&lt;符号连接&gt;  显示选项中所指定符号连接的源文件大小。 </p>
<p>-m或–megabytes  以1MB为单位。  </p>
<p>-s或–summarize  仅显示总计。  </p>
<p>-S或–separate-dirs  显示个别目录的大小时，并不含其子目录的大小。  </p>
<p>-x或–one-file-xystem  以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。  </p>
<p>-X&lt;文件&gt;或–exclude-from&#x3D;&lt;文件&gt;  在&lt;文件&gt;指定目录或文件。 </p>
<p> –exclude&#x3D;&lt;目录或文件&gt;  略过指定的目录或文件。  </p>
<p>–max-depth&#x3D;&lt;目录层数&gt;  超过指定层数的目录后，予以忽略。  </p>
<p>–help  显示帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="edquota"><a href="#edquota" class="headerlink" title="***edquota"></a>***edquota</h3><p><strong>功能说明</strong>: 编辑用户或群组的quota。  </p>
<p><strong>语法</strong>: edquota [-p &lt;源用户名称&gt;][-ug][用户或群组名称…] 或 edquota [-ug] -t  </p>
<p><strong>补充说明</strong>: edquota预设会使用vi来编辑使用者或群组的quota设置。  </p>
<p><strong>参数</strong>:  </p>
<p>-u  设置用户的quota，这是预设的参数。  </p>
<p>-g  设置群组的quota。  </p>
<p>-p&lt;源用户名称&gt;  将源用户的quota设置套用至其他用户或群组。  </p>
<p>-t  设置宽限期限。</p>
<h3 id="eject"><a href="#eject" class="headerlink" title="***eject"></a>***eject</h3><p><strong>功能说明</strong>: 退出抽取式设备。  </p>
<p><strong>语法</strong>: eject [-dfhnqrstv][-a &lt;开关&gt;][-c &lt;光驱编号&gt;][设备]  </p>
<p><strong>补充说明</strong>: 若设备已挂入，则eject会先将该设备卸除再退出。  </p>
<p><strong>参数</strong>:   [设备]  设备可以是驱动程序名称，也可以是挂入点。  </p>
<p>-a&lt;开关&gt;或–auto&lt;开关&gt;  控制设备的自动退出功能。  </p>
<p>-c&lt;光驱编号&gt;或–changerslut&lt;光驱编号&gt;  选择光驱柜中的光驱。  </p>
<p>-d或–default  显示预设的设备，而不是实际执行动作。  </p>
<p>-f或–floppy  退出抽取式磁盘。 </p>
<p> -h或–help  显示帮助。 </p>
<p> -n或–noop  显示指定的设备。  </p>
<p>-q或–tape  退出磁带。 </p>
<p>-r或–cdrom  退出光盘。  </p>
<p>-s或–scsi  以SCSI指令来退出设备。  </p>
<p>-t或–trayclose  关闭光盘的托盘。  </p>
<p>-v或–verbose  执行时，显示详细的说明。</p>
<h3 id="lndir"><a href="#lndir" class="headerlink" title="***lndir"></a>***lndir</h3><p><strong>功能说明</strong>: 连接目录内容。  </p>
<p><strong>语法</strong>: lndir [-ignorelinks][-silent][源目录][目的目录]  </p>
<p><strong>补充说明</strong>: 执行lndir指令，可一口气把源目录底下的文件和子目录统统建立起相互对应的符号连接。  </p>
<p><strong>参数</strong>:   </p>
<p>-ignorelinks  直接建立符号连接的符号连接。  </p>
<p>-silent  不显示指令执行过程。</p>
<h3 id="ls"><a href="#ls" class="headerlink" title="***ls"></a>***ls</h3><p><strong>功能说明</strong>: 列出目录内容。  </p>
<p><strong>语法</strong>: ls [-1aAbBcCdDfFgGhHiklLmnNopqQrRsStuUvxX][-I &lt;范本样式&gt;][-T &lt;跳格字数&gt;][-w &lt;每列字符数&gt;][–block-size&#x3D;&lt;区块大小&gt;][–color&#x3D;&lt;使用时机&gt;][–format&#x3D;&lt;列表格式&gt;][–full-time][–help][–indicator-style&#x3D;&lt;标注样式&gt;][–quoting-style&#x3D;&lt;引号样式&gt;][–show-control-chars][–sort&#x3D;&lt;排序方式&gt;][–time&#x3D;&lt;时间戳记&gt;][–version][文件或目录…]  </p>
<p><strong>补充说明</strong>: 执行ls指令可列出目录的内容，包括文件和子目录的名称。  </p>
<p><strong>参数</strong>:   </p>
<p>-1  每列仅显示一个文件或目录名称。  </p>
<p>-a或–all  下所有文件和目录。  </p>
<p>-A或–almost-all  显示所有文件和目录，但不显示现行目录和上层目录。  </p>
<p>-b或–escape  显示脱离字符。 </p>
<p> -B或–ignore-backups  忽略备份文件和目录。  </p>
<p>-c  以更改时间排序，显示文件和目录。  </p>
<p>-C  以又上至下，从左到右的直行方式显示文件和目录名称。  </p>
<p>-d或–directory  显示目录名称而非其内容。 </p>
<p>-D或–dired  用Emacs的模式产生文件和目录列表。  </p>
<p>-f  此参数的效果和同时指定”aU”参数相同，并关闭”lst”参数的效果。  </p>
<p>-F或–classify  在执行文件，目录，Socket，符号连接，管道名称后面，各自加上”*”,”&#x2F;“,”&#x3D;”,”@”,”|”号。  *</p>
<p>-g  次参数将忽略不予处理。 </p>
<p>-G或–no-group  不显示群组名称。  </p>
<p>-h或–human-readable  用”K”,”M”,”G”来显示文件和目录的大小。  </p>
<p>-H或–si  此参数的效果和指定”-h”参数类似，但计算单位是1000Bytes而非1024Bytes。 </p>
<p>-i或–inode  显示文件和目录的inode编号。  </p>
<p>-I&lt;范本样式&gt;或–ignore&#x3D;&lt;范本样式&gt;  不显示符合范本样式的文件或目录名称。  </p>
<p>-k或–kilobytes  此参数的效果和指定”block-size&#x3D;1024”参数相同。  </p>
<p>-l  使用详细格式列表。  </p>
<p>-L或–dereference  如遇到性质为符号连接的文件或目录，直接列出该连接所指向的原始文件或目录。  </p>
<p>-m  用”,”号区隔每个文件和目录的名称。  </p>
<p>-n或–numeric-uid-gid  以用户识别码和群组识别码替代其名称。  </p>
<p>-N或–literal  直接列出文件和目录名称，包括控制字符。  </p>
<p>-o  此参数的效果和指定”-l” 参数类似，但不列出群组名称或识别码。  </p>
<p>-p或–file-type  此参数的效果和指定”-F”参数类似，但不会在执行文件名称后面加上”*”号。 </p>
<p>-q或–hide-control-chars  用”?”号取代控制字符，列出文件和目录名称。  </p>
<p>-Q或–quote-name  把文件和目录名称以””号标示起来。  </p>
<p>-r或–reverse  反向排序。  </p>
<p>-R或–recursive  递归处理，将指定目录下的所有文件及子目录一并处理。  </p>
<p>-s或–size  显示文件和目录的大小，以区块为单位。  </p>
<p>-S  用文件和目录的大小排序。  </p>
<p>-t  用文件和目录的更改时间排序。  </p>
<p>-T&lt;跳格字符&gt;或–tabsize&#x3D;&lt;跳格字数&gt;  设置跳格字符所对应的空白字符数。  </p>
<p>-u  以最后存取时间排序，显示文件和目录。  </p>
<p>-U  列出文件和目录名称时不予排序。  </p>
<p>-v  文件和目录的名称列表以版本进行排序。  </p>
<p>-w&lt;每列字符数&gt;或–width&#x3D;&lt;每列字符数&gt;  设置每列的最大字符数。  </p>
<p>-x  以从左到右，由上至下的横列方式显示文件和目录名称。  </p>
<p>-X  以文件和目录的最后一个扩展名排序。  </p>
<p>–block-size&#x3D;&lt;区块大小&gt;  指定存放文件的区块大小。 </p>
<p> –color&#x3D;&lt;列表格式&gt;  培植文件和目录的列表格式。  </p>
<p>–full-time  列出完整的日期与时间。  </p>
<p>–help  在线帮助。  </p>
<p>–indicator-style&#x3D;&lt;标注样式&gt;  在文件和目录等名称后面加上标注，易于辨识该名称所属的类型。  </p>
<p>–quoting-syte&#x3D;&lt;引号样式&gt;  把文件和目录名称以指定的引号样式标示起来。  </p>
<p>–show-control-chars  在文件和目录列表时，使用控制字符。  </p>
<p>–sort&#x3D;&lt;排序方式&gt;  配置文件和目录列表的排序方式。  </p>
<p>–time&#x3D;&lt;时间戳记&gt;  用指定的时间戳记取代更改时间。  </p>
<p>–version  显示版本信息。</p>
<h3 id="mcd"><a href="#mcd" class="headerlink" title="***mcd"></a>***mcd</h3><p><strong>功能说明</strong>: 在MS-DOS文件系统中切换工作目录  </p>
<p><strong>语法</strong>: mcd [目录名称]  </p>
<p><strong>补充说明：</strong></p>
<p>mcd为mtools工具指令，可在MS-DOS文件系统中切换工作目录。若不加任何参数，则显示目前所在的磁盘与工作目录。</p>
<h3 id="mdeltree"><a href="#mdeltree" class="headerlink" title="***mdeltree"></a>***mdeltree</h3><p><strong>功能说明</strong>: 删除MS-DOS目录  </p>
<p><strong>语法</strong>: mdeltree [目录…]  </p>
<p><strong>补充说明</strong>: mdel为mtools工具指令，模拟MS-DOS的deltree指令，可删除MS-DOS文件系统中的目录及目录下所有子目录与文件。</p>
<h3 id="mdu"><a href="#mdu" class="headerlink" title="***mdu"></a>***mdu</h3><p><strong>功能说明</strong>: 显示MS-DOS目录所占用的磁盘空间。  </p>
<p><strong>语法</strong>: mdu [-as][目录]  </p>
<p><strong>补充说明</strong>: mdu为mstools工具指令，可显示MS-DOS文件系统中目录所占用的磁盘空间。  </p>
<p><strong>参数</strong>:  </p>
<p> -a  显示每个文件及整个目录所占用的空间。  </p>
<p>-s  仅显示整个目录所占用的空间。</p>
<h3 id="mkdir"><a href="#mkdir" class="headerlink" title="***mkdir"></a>***mkdir</h3><p><strong>功能说明</strong>: 建立目录 </p>
<p><strong>语法</strong>: mkdir [-p][–help][–version][-m &lt;目录属性&gt;][目录名称]  </p>
<p><strong>补充说明</strong>: mkdir可建立目录并同时设置目录的权限。  </p>
<p><strong>参数</strong>:   </p>
<p>-m&lt;目录属性&gt;或–mode&lt;目录属性&gt;  建立目录时同时设置目录的权限。  </p>
<p>-p或–parents  若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录。  </p>
<p>–help  显示帮助。  </p>
<p>–verbose  执行时显示详细的信息。  </p>
<p>–version  显示版本信息。</p>
<h3 id="mlabel"><a href="#mlabel" class="headerlink" title="***mlabel"></a>***mlabel</h3><p><strong>功能说明</strong>: 显示或设置MS-DOS磁盘驱动器的标签名称。  </p>
<p><strong>语法</strong>: mlabel [-csvV][驱动器代号][标签名称]  </p>
<p><strong>补充说明</strong>: mlabel为mtools工具指令，模拟MS-DOS的label指令，可显示或设置MS-DOS磁盘驱动器的标签名称。 </p>
<p><strong>参数</strong>:   </p>
<p>-c  清楚标签名称  </p>
<p>-s  显示标签名称  </p>
<p>-v  执行时显示详细的信息。  </p>
<p>-V  显示版本信息。</p>
<h3 id="mmd"><a href="#mmd" class="headerlink" title="***mmd"></a>***mmd</h3><p><strong>功能说明</strong>: 在MS-DOS文件系统中建立目录。  </p>
<p><strong>语法</strong>: mmd [目录…]  </p>
<p><strong>补充说明</strong>: mmd为mtools工具指令，模拟MS-DOS的md指令，可在MS-DOS的文件系统中建立目录。</p>
<h3 id="mmount"><a href="#mmount" class="headerlink" title="***mmount"></a>***mmount</h3><p><strong>功能说明</strong>: 挂入MS-DOS文件系统。  </p>
<p><strong>语法</strong>: mmount [驱动器代号][mount参数]  </p>
<p><strong>补充说明</strong>: mmount为mtools工具指令，可根据[mount参数]中的设置，将磁盘内容挂入到Linux目录中。 </p>
<p><strong>参数</strong>:   </p>
<p>[mount参数]的用法请参考mount指令</p>
<h3 id="mrd"><a href="#mrd" class="headerlink" title="***mrd"></a>***mrd</h3><p><strong>功能说明</strong>: 删除MS-DOS文件系统中的目录。  </p>
<p><strong>语法</strong>: mrd [目录…]  </p>
<p><strong>补充说明</strong>: mrd为mtools工具指令，模拟MS-DOS的rd指令，可删除MS-DOS的目录。</p>
<h3 id="mzip"><a href="#mzip" class="headerlink" title="***mzip"></a>***mzip</h3><p><strong>功能说明</strong>: Zip&#x2F;Jaz磁盘驱动器控制指令。  </p>
<p><strong>语法</strong>: mzip [-efpqruwx]  </p>
<p><strong>补充说明</strong>: mzip为mtools工具指令，可设置Zip或Jaz磁盘驱动区的保护模式以及执行退出磁盘的动作。  </p>
<p><strong>参数</strong>:   </p>
<p>-e  退出磁盘。 </p>
<p>-f  与-e参数一并使用，不管是否已经挂入磁盘中的文件系统，一律强制退出磁盘。 </p>
<p>-p  设置磁盘的写入密码。 </p>
<p>-q  显示目前的状态。 </p>
<p>-r  将磁盘设为防写状态。 </p>
<p>-u  退出磁盘以前，暂时解除磁盘的保护状态。  </p>
<p>-w  将磁盘设为可写入状态。  </p>
<p>-x  设置磁盘的密码。</p>
<h3 id="pwd"><a href="#pwd" class="headerlink" title="***pwd"></a>***pwd</h3><p><strong>功能说明</strong>: 显示工作目录。  </p>
<p><strong>语法</strong>: pwd [–help][–version]  </p>
<p><strong>补充说明</strong>: 执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称。  </p>
<p><strong>参数</strong>:   </p>
<p>–help  在线帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="quota"><a href="#quota" class="headerlink" title="***quota"></a>***quota</h3><p><strong>功能说明</strong>: 显示磁盘已使用的空间与限制。  </p>
<p><strong>语法</strong>: quota [-quvV][用户名称…] 或 quota [-gqvV][群组名称…]  </p>
<p><strong>补充说明</strong>: 执行quota指令，可查询磁盘空间的限制，并得知已使用多少空间。  </p>
<p><strong>参数</strong>:   </p>
<p>-g  列出群组的磁盘空间限制。  </p>
<p>-q  简明列表，只列出超过限制的部分。 </p>
<p>-u  列出用户的磁盘空间限制。 </p>
<p>-v  显示该用户或群组，在所有挂入系统的存储设备的空间限制。  </p>
<p>-V  显示版本信息。</p>
<h3 id="quotacheck"><a href="#quotacheck" class="headerlink" title="***quotacheck"></a>***quotacheck</h3><p><strong>功能说明</strong>: 检查磁盘的使用空间与限制。  </p>
<p><strong>语法</strong>: quotacheck [-adgRuv][文件系统…]  </p>
<p><strong>补充说明</strong>: 执行quotacheck指令，扫描挂入系统的分区，并在各分区的文件系统根目录下产生quota.user和quota.group文件，设置用户和群组的磁盘空间限制。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  扫描在&#x2F;etc&#x2F;fstab文件里，有加入quota设置的分区。  </p>
<p>-d  详细显示指令执行过程，便于排错或了解程序执行的情形。  </p>
<p>-g  扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目。  </p>
<p>-R  排除根目录所在的分区。  </p>
<p>-u  扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目。  </p>
<p>-v  显示指令执行过程。</p>
<h3 id="quotaoff"><a href="#quotaoff" class="headerlink" title="***quotaoff"></a>***quotaoff</h3><p><strong>功能说明</strong>: 关闭磁盘空间限制。  </p>
<p><strong>语法</strong>: quotaoff [-aguv][文件系统…]  </p>
<p><strong>补充说明</strong>: 执行quotaoff指令可关闭用户和群组的磁盘空间限制。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  关闭在&#x2F;etc&#x2F;fstab文件里，有加入quota设置的分区的空间限制。  </p>
<p>-g  关闭群组的磁盘空间限制。  </p>
<p>-u  关闭用户的磁盘空间限制。  </p>
<p>-v  显示指令执行过程。</p>
<h3 id="quotaon"><a href="#quotaon" class="headerlink" title="***quotaon"></a>***quotaon</h3><p><strong>功能说明</strong>: 开启磁盘空间限制。  </p>
<p><strong>语法</strong>: quotaon [-aguv][文件系统…]  </p>
<p><strong>补充说明</strong>: 执行quotaon指令可开启用户和群组的才磅秒年空间限制，各分区的文件系统根目录必须有quota.user和quota.group配置文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  开启在&#x2F;ect&#x2F;fstab文件里，有加入quota设置的分区的空间限制。  </p>
<p>-g  开启群组的磁盘空间限制。  </p>
<p>-u  开启用户的磁盘空间限制。  </p>
<p>-v  显示指令指令执行过程。</p>
<h3 id="repquota"><a href="#repquota" class="headerlink" title="***repquota"></a>***repquota</h3><p><strong>功能说明</strong>: 检查磁盘空间限制的状态。  </p>
<p><strong>语法</strong>: repquota [-aguv][文件系统…]  </p>
<p><strong>补充说明</strong>: 执行repquota指令，可报告磁盘空间限制的状况，清楚得知每位用户或每个群组已使用多少空间。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  列出在&#x2F;etc&#x2F;fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组。  </p>
<p>-g  列出所有群组的磁盘空间限制。 </p>
<p>-u  列出所有用户的磁盘空间限制。  </p>
<p>-v  显示该用户或群组的所有空间限制。</p>
<h3 id="rmdir"><a href="#rmdir" class="headerlink" title="***rmdir"></a>***rmdir</h3><p><strong>功能说明</strong>: 删除目录。  </p>
<p><strong>语法</strong>: rmdir [-p][–help][–ignore-fail-on-non-empty][–verbose][–version][目录…]  </p>
<p><strong>补充说明</strong>: 当有空目录要删除时，可使用rmdir指令。  </p>
<p><strong>参数</strong>:   </p>
<p>-p或–parents  删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除。  </p>
<p>–help  在线帮助。  </p>
<p>–ignore-fail-on-non-empty  忽略非空目录的错误信息。  </p>
<p>–verbose  显示指令执行过程。  </p>
<p>–version  显示版本信息。</p>
<h3 id="rmt"><a href="#rmt" class="headerlink" title="***rmt"></a>***rmt</h3><p><strong>功能说明</strong>: 远端磁带传输协议模块。  </p>
<p><strong>语法</strong>: rmt  </p>
<p><strong>补充说明</strong>: 通过rmt指令，用户可通过IPC连线，远端操控磁带机的倾倒和还原操作。</p>
<h3 id="stat"><a href="#stat" class="headerlink" title="***stat"></a>***stat</h3><p><strong>功能说明</strong>: 显示inode内容。  </p>
<p><strong>语法</strong>: stat [文件或目录]  </p>
<p><strong>补充说明</strong>: stat以文字的格式来显示inode的内容。</p>
<h3 id="tree"><a href="#tree" class="headerlink" title="***tree"></a>***tree</h3><p><strong>功能说明</strong>: 以树状图列出目录的内容。  </p>
<p><strong>语法</strong>: tree [-aACdDfFgilnNpqstux][-I &lt;范本样式&gt;][-P &lt;范本样式&gt;][目录…]  </p>
<p><strong>补充说明</strong>: 执行tree指令，它会列出指定目录下的所有文件，包括子目录里的文件。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  显示所有文件和目录。 </p>
<p>-A  使用ASNI绘图字符显示树状图而非以ASCII字符组合。  </p>
<p>-C  在文件和目录清单加上色彩，便于区分各种类型。  </p>
<p>-d  显示目录名称而非内容。  </p>
<p>-D  列出文件或目录的更改时间。  </p>
<p>-f  在每个文件或目录之前，显示完整的相对路径名称。 </p>
<p>-F  在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”&#x2F;“,”&#x3D;”,”@”,”|”号。  </p>
<p>-g  列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。  </p>
<p>-i  不以阶梯状列出文件或目录名称。  </p>
<p>-I&lt;范本样式&gt;  不显示符合范本样式的文件或目录名称。  </p>
<p>-l  如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。 </p>
<p> -n  不在文件和目录清单加上色彩。  </p>
<p>-N  直接列出文件和目录名称，包括控制字符。  </p>
<p>-p  列出权限标示。  </p>
<p>-P&lt;范本样式&gt;  只显示符合范本样式的文件或目录名称。 </p>
<p> -q  用”?”号取代控制字符，列出文件和目录名称。  </p>
<p>-s  列出文件或目录大小。  </p>
<p>-t  用文件和目录的更改时间排序。  </p>
<p>-u  列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。  </p>
<p>-x  将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</p>
<h3 id="umount"><a href="#umount" class="headerlink" title="***umount"></a>***umount</h3><p><strong>功能说明</strong>: 卸除文件系统。  </p>
<p><strong>语法</strong>: umount [-ahnrvV][-t &lt;文件系统类型&gt;][文件系统]  </p>
<p><strong>补充说明</strong>: umount可卸除目前挂在Linux目录中的文件系统。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  卸除&#x2F;etc&#x2F;mtab中记录的所有文件系统。  </p>
<p>-h  显示帮助。  </p>
<p>-n  卸除时不要将信息存入&#x2F;etc&#x2F;mtab文件中。  </p>
<p>-r  若无法成功卸除，则尝试以只读的方式重新挂入文件系统。 </p>
<p>-t&lt;文件系统类型&gt;  仅卸除选项中所指定的文件系统。  </p>
<p>-v  执行时显示详细的信息。 </p>
<p>-V  显示版本信息。 </p>
<p> [文件系统]  除了直接指定文件系统外，也可以用设备名称或挂入点来表示文件系统。</p>
<h2 id="磁盘维护"><a href="#磁盘维护" class="headerlink" title="磁盘维护"></a>磁盘维护</h2><h3 id="badblocks"><a href="#badblocks" class="headerlink" title="***badblocks"></a>***badblocks</h3><p><strong>功能说明</strong>: 检查磁盘装置中损坏的区块。  </p>
<p><strong>语法</strong>: badblocks [-svw][-b &lt;区块大小&gt;][-o &lt;输出文件&gt;][磁盘装置][磁盘区块数][启始区块]  </p>
<p><strong>补充说明</strong>: 执行指令时须指定所要检查的磁盘装置，及此装置的磁盘区块数。  </p>
<p><strong>参数</strong>:   </p>
<p>-b&lt;区块大小&gt;  指定磁盘的区块大小，单位为字节。  </p>
<p>-o&lt;输出文件&gt;  将检查的结果写入指定的输出文件。  </p>
<p>-s  在检查时显示进度。  </p>
<p>-v  执行时显示详细的信息。  </p>
<p>-w  在检查时，执行写入测试。  </p>
<p>[磁盘装置]  指定要检查的磁盘装置。  </p>
<p>[磁盘区块数]  指定磁盘装置的区块总数。  </p>
<p>[启始区块]  指定要从哪个区块开始检查。</p>
<h3 id="cfdisk"><a href="#cfdisk" class="headerlink" title="***cfdisk"></a>***cfdisk</h3><p><strong>功能说明</strong>: 磁盘分区。  </p>
<p><strong>语法</strong>: cfdisk [-avz][-c &lt;柱面数目&gt;-h &lt;磁头数目&gt;-s &lt;盘区数目&gt;][-P &lt;r,s,t&gt;][外围设备代号]  </p>
<p><strong>补充说明</strong>: cfdisk是用来磁盘分区的程序，它十分类似DOS的fdisk，具有互动式操作界面而非传统fdisk的问答式界面，您可以轻易地利用方向键来操控分区操作。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  在程序里不用反白代表选取，而以箭头表示。  </p>
<p>-c&lt;柱面数目&gt;  忽略BIOS的数值，直接指定磁盘的柱面数目。  </p>
<p>-h&lt;磁头数目&gt;  忽略BIOS的数值，直接指定磁盘的磁头数目。  </p>
<p>-P&lt;r,s,t&gt;  显示分区表的内容，附加参数”r”会显示整个分区表的详细资料，附加参数”s”会依照磁区的顺序显示相关信息，附加参数”t”则会以磁头，磁区，柱面的方式来显示资料。  </p>
<p>-s&lt;磁区数目&gt;  忽略BIOS的数值，直接指定磁盘的磁区数目。  </p>
<p>-v  显示版本信息。  </p>
<p>-z  不读取现有的分区，直接当作没有分区的新磁盘使用。</p>
<h3 id="dd"><a href="#dd" class="headerlink" title="***dd"></a>***dd</h3><p><strong>功能说明</strong>: 读取，转换并输出数据。  </p>
<p><strong>语法</strong>: dd [bs&#x3D;&lt;字节数&gt;][cbs&#x3D;&lt;字节数&gt;][conv&#x3D;&lt;关键字&gt;][count&#x3D;&lt;区块数&gt;][ibs&#x3D;&lt;字节数&gt;][if&#x3D;&lt;文件&gt;][obs&#x3D;&lt;字节数&gt;][of&#x3D;&lt;文件&gt;][seek&#x3D;&lt;区块数&gt;][skip&#x3D;&lt;区块数&gt;][–help][–version]  </p>
<p><strong>补充说明</strong>: dd可从标准输入或文件读取数据，依指定的格式来转换数据，再输出到文件，设备或标准输出。  </p>
<p><strong>参数</strong>:   </p>
<p>bs&#x3D;&lt;字节数&gt;  将ibs( 输入)与obs(输出)设成指定的字节数。  </p>
<p>cbs&#x3D;&lt;字节数&gt;  转换时，每次只转换指定的字节数。  </p>
<p>conv&#x3D;&lt;关键字&gt;  指定文件转换的方式。  </p>
<p>count&#x3D;&lt;区块数&gt;  仅读取指定的区块数。  </p>
<p>ibs&#x3D;&lt;字节数&gt;  每次读取的字节数。  </p>
<p>if&#x3D;&lt;文件&gt;  从文件读取。  </p>
<p>obs&#x3D;&lt;字节数&gt;  每次输出的字节数。  </p>
<p>of&#x3D;&lt;文件&gt;  输出到文件。  </p>
<p>seek&#x3D;&lt;区块数&gt;  一开始输出时，跳过指定的区块数。  </p>
<p>skip&#x3D;&lt;区块数&gt;  一开始读取时，跳过指定的区块数。  </p>
<p>–help  帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="e2fsck"><a href="#e2fsck" class="headerlink" title="***e2fsck"></a>***e2fsck</h3><p><strong>功能说明</strong>: 检查ext2文件系统的正确性。 </p>
<p><strong>语法</strong>: e2fsck [-acCdfFnprsStvVy][-b ][-B &lt;区块大小&gt;][-l &lt;文件&gt;][-L &lt;文件&gt;][设备名称]  </p>
<p><strong>补充说明</strong>: e2fsck执行后的传回值及代表意义如下。  </p>
<p>0   没有任何错误发生。  </p>
<p>1   文件系统发生错误，并且已经修正。 </p>
<p> 2   文件系统发生错误，并且已经修正。  </p>
<p>4   文件系统发生错误，但没有修正。  </p>
<p>8   运作时发生错误。  </p>
<p>16  使用的语法发生错误。  </p>
<p>128  共享的函数库发生错误。 </p>
<p><strong>参数</strong>:   </p>
<p>-a  不询问使用者意见，便自动修复文件系统。 </p>
<p> -b<superblock>  指定superblock，而不使用预设的superblock。 </p>
<p> -B&lt;区块大小&gt;  指定区块的大小，单位为字节。  </p>
<p>-c  一并执行badblocks，以标示损坏的区块。  </p>
<p>-C  将检查过程的信息完整记录在file descriptor中，使得整个检查过程都能完整监控。  </p>
<p>-d  显示排错信息。  </p>
<p>-f  即使文件系统没有错误迹象，仍强制地检查正确性。  </p>
<p>-F  执行前先清除设备的缓冲区。  </p>
<p>-l&lt;文件&gt;  将文件中指定的区块加到损坏区块列表。  </p>
<p>-L&lt;文件&gt;  先清除损坏区块列表，再将文件中指定的区块加到损坏区块列表。因此损坏区块列表的区块跟文件中指定的区块是一样的。  </p>
<p>-n  以只读模式开启文件系统，并采取非互动方式执行，所有的问题对话均设置以”no”回答。  </p>
<p>-p  不询问使用者意见，便自动修复文件系统。  </p>
<p>-r  此参数只为了兼容性而存在，并无实际作用。  </p>
<p>-s  如果文件系统的字节顺序不适当，就交换字节顺序，否则不做任何动作。  </p>
<p>-S  不管文件系统的字节顺序，一律交换字节顺序。  </p>
<p>-t  显示时间信息。 </p>
<p>-v  执行时显示详细的信息。  </p>
<p>-V  显示版本信息。  </p>
<p>-y  采取非互动方式执行，所有的问题均设置以”yes”回答。</p>
<h3 id="ext2ed"><a href="#ext2ed" class="headerlink" title="***ext2ed"></a>***ext2ed</h3><p><strong>功能说明</strong>: ext2文件系统编辑程序。  </p>
<p><strong>语法</strong>: ext2ed </p>
<p><strong>补充说明</strong>: ext2ed可直接处理硬盘分区上的数据，这指令只有Red Hat Linux才提供。  </p>
<p><strong>参数</strong>:   </p>
<p><strong>功能说明</strong>: ext2文件系统编辑程序。  </p>
<p><strong>语法</strong>: ext2ed  </p>
<p><strong>补充说明</strong>: ext2ed可直接处理硬盘分区上的数据，这指令只有Red Hat Linux才提供。  </p>
<p><strong>参数</strong>:   </p>
<p><strong>一般指令</strong>   </p>
<p>​		setdevice[设备名称]  指定要处理的设备。  disablewrite  将ext2ed设为只读的状态。  enablewrite  将ext2ed设为可读写的状态。  help[指令]  显示个别指令的帮助。  next  移至下一个单位，单位会依目前所在的模式而异。  prev  移至前一个单位，单位会依目前所在的模式而异。  pgup  移至下一页。  pgdn  移至上一页。  set  修改目前的数据，参数会依目前所在的模式而异。  writedata  在执行此指令之后，才会实际修改分区中的数据。   </p>
<p><strong>ext2进入3种模式的指令</strong>  </p>
<p>​		 super  进入main superblock,即Superblock模式。  group&lt;编号&gt;  进入指定的group，即Group模式。  cd&lt;目录或文件&gt;  在inode模式下，进入指定的目录或文件，即Inode模式。   </p>
<p><strong>Superblock模式</strong>   </p>
<p>​		gocopy&lt;备份编号&gt;  进入指定的superblock备份。  setactivecopy  将目前所在的superblock，复制到main superblock。   </p>
<p><strong>Group模式</strong>   </p>
<p>​		blockbitmap  显示目前groupo的区块图。  inode  进入目前group的第一个inode。  inodebitmap  显示目前group的inode二进制码。  </p>
<p> <strong>Inode模式</strong>  </p>
<p>​		 dir  进入目录模式。  file  进入文件模式。</p>
<h3 id="fdisk"><a href="#fdisk" class="headerlink" title="***fdisk"></a>***fdisk</h3><p><strong>功能说明</strong>: 磁盘分区。  </p>
<p><strong>语法</strong>: fdisk [-b &lt;分区大小&gt;][-uv][外围设备代号] 或 fdisk [-l][-b &lt;分区大小&gt;][-uv][外围设备代号…] 或 fdisk [-s &lt;分区编号&gt;]  </p>
<p><strong>补充说明</strong>: fdisk是用来磁盘分区的程序，它采用传统的问答式界面，而非类似DOS fdisk的cfdisk互动式操作界面，因此在使用上较为不便，但功能却丝毫不打折扣。  </p>
<p><strong>参数</strong>:  </p>
<p>-b&lt;分区大小&gt;  指定每个分区的大小。  </p>
<p>-l  列出指定的外围设备的分区表状况。  </p>
<p>-s&lt;分区编号&gt;  将指定的分区大小输出到标准输出上，单位为区块。 </p>
<p>-u  搭配”-l”参数列表，会用分区数目取代柱面数目，来表示每个分区的起始地址。  </p>
<p>-v  显示版本信息。</p>
<h3 id="fsck-ext2"><a href="#fsck-ext2" class="headerlink" title="***fsck.ext2"></a>***fsck.ext2</h3><p><strong>功能说明</strong>: 检查文件系统并尝试修复错误。  </p>
<p><strong>语法</strong>: fsck.ext2 [-acdfFnprsStvVy][-b &lt;分区第一个磁区地址&gt;][-B &lt;区块大小&gt;][-C &lt;反叙述器&gt;][-I &lt;inode缓冲区块数&gt;][-l&#x2F;L &lt;损坏区块文件&gt;][-P &lt;处理inode大小&gt;][外围设备代号]  </p>
<p><strong>补充说明</strong>: 当ext2文件系统发生错误时，可用fsck.ext2指令尝试加以修复。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  自动修复文件系统，不询问任何问题。 </p>
<p>-b&lt;分区第一个磁区地址&gt;  指定分区的第一个磁区的起始地址，也就是Super Block。  </p>
<p>-B&lt;区块大小&gt;  设置该分区每个区块的大小。  </p>
<p>-c  检查指定的文件系统内，是否存在有损坏的区块。 </p>
<p>-C&lt;反叙述器&gt;  指定反叙述器，fsck.ext2指令会把全部的执行过程，都交由其逆向叙述，便于排错或监控程序执行的情形。  </p>
<p>-d  详细显示指令执行过程，便于排错或分析程序执行的情形。  </p>
<p>-f  强制对该文件系统进行完整检查，纵然该文件系统在慨略检查下没有问题。  </p>
<p>-F  检查文件系统之前，先清理该保存设备块区内的数据。  </p>
<p>-I&lt;inode缓冲区块数&gt;  设置欲检查的文件系统，其inode缓冲区的区块数目。  </p>
<p>-l&lt;损坏区块文件&gt;  把文件中所列出的区块，视为损坏区块并将其标示出来，避免应用程序使用该区块。  </p>
<p>-L&lt;损坏区块文件&gt;  此参数的效果和指定”-l”参数类似，但在参考损坏区块文件标示损坏区块之前，会先将原来标示成损坏区块者统统清楚，即全部重新设置，而非仅是加入新的损坏区块标示。  </p>
<p>-n  把欲检查的文件系统设成只读，并关闭互动模式，否决所有询问的问题。  </p>
<p>-p  此参数的效果和指定”-a”参数相同。  </p>
<p>-P&lt;处理inode大小&gt;  设置fsck.ext2指令所能处理的inode大小为多少。  </p>
<p>-r  此参数将忽略不予处理，仅负责解决兼容性的问题。  </p>
<p>-s  检查文件系统时，交换每对字节的内容。  </p>
<p>-S  此参数的效果和指定”-s”参数类似，但不论该文件系统是否已是标准位顺序，一律交换每对字节的内容。  </p>
<p>-t  显示fsck.ext2指令的时序信息。  </p>
<p>-v  详细显示指令执行过程。  </p>
<p>-V  显示版本信息。  </p>
<p>-y  关闭互动模式，且同意所有询问的问题。</p>
<h3 id="fsck"><a href="#fsck" class="headerlink" title="***fsck"></a>***fsck</h3><p><strong>功能说明</strong>: 检查文件系统并尝试修复错误。 </p>
<p><strong>语法</strong>: fsck [-aANPrRsTV][-t &lt;文件系统类型&gt;][文件系统…]  </p>
<p><strong>补充说明</strong>: 当文件系统发生错误四化，可用fsck指令尝试加以修复。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  自动修复文件系统，不询问任何问题。  </p>
<p>-A  依照&#x2F;etc&#x2F;fstab配置文件的内容，检查文件内所列的全部文件系统。  </p>
<p>-N  不执行指令，仅列出实际执行会进行的动作。 </p>
<p>-P  当搭配”-A”参数使用时，则会同时检查所有的文件系统。  </p>
<p>-r  采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式。  </p>
<p>-R  当搭配”-A”参数使用时，则会略过&#x2F;目录的文件系统不予检查。  </p>
<p>-s  依序执行检查作业，而非同时执行。  </p>
<p>-t&lt;文件系统类型&gt;  指定要检查的文件系统类型。  </p>
<p>-T  执行fsck指令时，不显示标题信息。  </p>
<p>-V  显示指令执行过程。</p>
<h3 id="fsck-minix"><a href="#fsck-minix" class="headerlink" title="***fsck.minix"></a>***fsck.minix</h3><p><strong>功能说明</strong>: 检查文件系统并尝试修复错误。 </p>
<p><strong>语法</strong>: fsck.minix [-aflmrsv][外围设备代号]  </p>
<p><strong>补充说明</strong>: 当minix文件系统发生错误时，可用fsck.minix指令尝试加以参考。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  自动修复文件系统，不询问任何问题。  </p>
<p>-f  强制对该文件系统进行完整检查，纵然该文件系统在慨略检查下没有问题。  </p>
<p>-l  列出所有文件名称。  </p>
<p>-m  使用类似MINIX操作系统的警告信息。  </p>
<p>-r  采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式。 </p>
<p>-s  显示该分区第一个磁区的相关信息。  </p>
<p>-v  显示指令执行过程。</p>
<h3 id="fsconf"><a href="#fsconf" class="headerlink" title="***fsconf"></a>***fsconf</h3><p><strong>功能说明</strong>: 设置文件系统相关功能。  </p>
<p><strong>语法</strong>: fsconf [–check]  </p>
<p><strong>补充说明</strong>: fsconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。  </p>
<p><strong>参数</strong>:   –chedk  检查特定文件的权限。</p>
<h3 id="hdparm"><a href="#hdparm" class="headerlink" title="***hdparm"></a>***hdparm</h3><p><strong>功能说明</strong>: 显示与设定硬盘的参数。  </p>
<p><strong>语法</strong>: hdparm [-CfghiIqtTvyYZ][-a &lt;快取分区&gt;][-A &lt;0或1&gt;][-c ][-d &lt;0或1&gt;][-k &lt;0或1&gt;][-K &lt;0或1&gt;][-m &lt;分区数&gt;][-n &lt;0或1&gt;][-p ][-P &lt;分区数&gt;][-r &lt;0或1&gt;][-S &lt;时间&gt;][-u &lt;0或1&gt;][-W &lt;0或1&gt;][-X &lt;传输模式&gt;][设备]  </p>
<p><strong>补充说明</strong>: hdparm可检测，显示与设定IDE或SCSI硬盘的参数。  </p>
<p><strong>参数</strong>:   </p>
<p>-a&lt;快取分区&gt;  设定读取文件时，预先存入块区的分区数，若不加上&lt;快取分区&gt;选项，则显示目前的设定。  </p>
<p>-A&lt;0或1&gt;  启动或关闭读取文件时的快取功能。  </p>
<p>-c&lt;I&#x2F;O模式&gt;  设定IDE32位I&#x2F;O模式。  </p>
<p>-C  检测IDE硬盘的电源管理模式。  </p>
<p>-d&lt;0或1&gt;  设定磁盘的DMA模式。  </p>
<p>-f  将内存缓冲区的数据写入硬盘，并清楚缓冲区。  </p>
<p>-g  显示硬盘的磁轨，磁头，磁区等参数。  </p>
<p>-h  显示帮助。  </p>
<p>-i  显示硬盘的硬件规格信息，这些信息是在开机时由硬盘本身所提供。  </p>
<p>-I  直接读取硬盘所提供的硬件规格信息。  </p>
<p>-k&lt;0或1&gt;  重设硬盘时，保留-dmu参数的设定。  </p>
<p>-K&lt;0或1&gt;  重设硬盘时，保留-APSWXZ参数的设定。  </p>
<p>-m&lt;磁区数&gt;  设定硬盘多重分区存取的分区数。  </p>
<p>-n&lt;0或1&gt;  忽略硬盘写入时所发生的错误。  </p>
<p>-p&lt;PIO模式&gt;  设定硬盘的PIO模式。  </p>
<p>-P&lt;磁区数&gt;  设定硬盘内部快取的分区数。  </p>
<p>-q  在执行后续的参数时，不在屏幕上显示任何信息。 </p>
<p> -r&lt;0或1&gt;  设定硬盘的读写模式。  </p>
<p>-S&lt;时间&gt;  设定硬盘进入省电模式前的等待时间。  </p>
<p>-t  评估硬盘的读取效率。  </p>
<p>-T  平谷硬盘快取的读取效率。 </p>
<p> -u&lt;0或1&gt;  在硬盘存取时，允许其他中断要求同时执行。  </p>
<p>-v  显示硬盘的相关设定。  </p>
<p>-W&lt;0或1&gt;  设定硬盘的写入快取。  </p>
<p>-X&lt;传输模式&gt;  设定硬盘的传输模式。 </p>
<p> -y  使IDE硬盘进入省电模式。  </p>
<p>-Y  使IDE硬盘进入睡眠模式。  </p>
<p>-Z  关闭某些Seagate硬盘的自动省电功能。</p>
<h3 id="losetup"><a href="#losetup" class="headerlink" title="***losetup"></a>***losetup</h3><p><strong>功能说明</strong>: 设置循环设备。  </p>
<p><strong>语法</strong>: losetup [-d][-e &lt;加密方式&gt;][-o &lt;平移数目&gt;][循环设备代号][文件]  </p>
<p><strong>补充说明</strong>: 循环设备可把文件虚拟成区块设备，籍以模拟整个文件系统，让用户得以将其视为硬盘驱动器，光驱或软驱等设备，并挂入当作目录来使用。  </p>
<p><strong>参数</strong>:  </p>
<p>-d  卸除设备。  </p>
<p>-e&lt;加密方式&gt;  启动加密编码。  </p>
<p>-o&lt;平移数目&gt;  设置数据平移的数目。</p>
<h3 id="mbadblocks"><a href="#mbadblocks" class="headerlink" title="***mbadblocks"></a>***mbadblocks</h3><p><strong>功能说明</strong>: 检查MS-DOS文件系统的磁盘是否有损坏的磁区。  </p>
<p><strong>语法</strong>: mbadblocks [驱动器代号]  </p>
<p><strong>补充说明</strong>: mbadblocks为mtools工具指令，可用来扫描MS-DOS文件系统的磁盘驱动器，并标示出损坏的磁区。</p>
<h3 id="mformat"><a href="#mformat" class="headerlink" title="***mformat"></a>***mformat</h3><p><strong>功能说明</strong>: 对MS-DOS文件系统的磁盘进行格式化。  </p>
<p><strong>语法</strong>: mformat [-1aCFIKX][-0 &lt;数据传输率&gt;][-2 &lt;磁区数&gt;][-A &lt;数据传输率&gt;][-B &lt;开机区文件&gt;][-c &lt;丛集大小&gt;][-h &lt;磁头数&gt;][-H &lt;隐藏磁区数&gt;][-l &lt;磁盘标签&gt;][-M &lt;磁区大小&gt;][-n &lt;序号&gt;][-r &lt;根目录大小&gt;][-s &lt;磁区数&gt;][-S &lt;磁区大小&gt;][-t &lt;柱面数&gt;][驱动器代号]  </p>
<p><strong>补充说明</strong>: mformat为mtools工具指令，模拟MS-DOS的format指令，可将指定的磁盘或硬盘分区格式化为MS-DOS文件系统。  </p>
<p><strong>参数</strong>:   </p>
<p>-0&lt;数据传输率&gt;  指定第0磁轨的数据传输率。  </p>
<p>-1  不使用2M格式。  </p>
<p>-2&lt;磁区数&gt;  指定在第0磁轨的第0个磁头的磁区数，也就是所谓的2M格式。  </p>
<p>-a  指定产生Atari格式的序号。  </p>
<p>-A&lt;数据传输率&gt;  指定第0磁轨以外所有磁轨的数据传输率。 </p>
<p> -B&lt;开机区文件&gt;  从指定的文件来建立开机区。 </p>
<p>-c&lt;丛集大小&gt;  指定丛集大小，单位为磁区。 </p>
<p>-C  建立磁盘MS-DOS文件系统的映像文件。  </p>
<p>-F  以FAT32来格式化磁盘。  </p>
<p>-H&lt;隐藏磁区数&gt;  指定隐藏磁区的数目。  </p>
<p>-I  指定FAT32的frVersion编号。  </p>
<p>-k  尽可能地保留原有的开机区。  </p>
<p>-l&lt;磁盘标签&gt;  指定磁盘标签名称。  </p>
<p>-M&lt;磁区大小&gt;  指定MS-DOS文件系统所使用的磁区大小，预设应该与硬体磁区大小相同，单位为字节。  </p>
<p>-n&lt;序号&gt;  指定序号。  </p>
<p>-r&lt;根目录大小&gt;  指定根目录的大小，单位为磁区。  </p>
<p>-s&lt;磁区数&gt;  指定每一磁轨所包含的磁区数目。  </p>
<p>-S&lt;磁区大小&gt;  指定硬件磁区大小。  </p>
<p>-t&lt;柱面数&gt;  指定柱面数目。  </p>
<p>-X  格式化XDF磁盘。</p>
<h3 id="mkbootdisk"><a href="#mkbootdisk" class="headerlink" title="***mkbootdisk"></a>***mkbootdisk</h3><p><strong>功能说明</strong>: 建立目前系统的启动盘。  </p>
<p><strong>语法</strong>: mkbootdisk [–noprompt][–verbose][–version][–device &lt;设备&gt;][–mkinitrdargs &lt;参数&gt;][kernel 版本]  </p>
<p><strong>补充说明</strong>: mkbootdisk可建立目前系统的启动盘。  </p>
<p><strong>参数</strong>:   </p>
<p>–device&lt;设备&gt;  指定设备。  </p>
<p>–mkinitrdargs&lt;参数&gt;  设置mkinitrd的参数。  </p>
<p>–noprompt  不会提示用户插入磁盘。 </p>
<p> –verbose  执行时显示详细的信息。 </p>
<p> –version  显示版本信息。</p>
<h3 id="mkdosfs"><a href="#mkdosfs" class="headerlink" title="***mkdosfs"></a>***mkdosfs</h3><p><strong>功能说明</strong>: 建立MS-DOS文件系统。  </p>
<p><strong>语法</strong>: mkdosfs [-cv][-f ][-F &lt;FAT记录的单位&gt;][-i &lt;磁盘序号&gt;][-l &lt;文件名&gt;][-m &lt;信息文件&gt;][-n &lt;标签&gt;][-r &lt;根目录项目数&gt;][-s &lt;磁区数&gt;][设备名称][区块数]  </p>
<p><strong>补充说明</strong>: mkdosfs可在Linux下，将磁盘格式化为MS-DOS文件系统的格式。  </p>
<p><strong>参数</strong>:   </p>
<p>-c  检查是否有损坏的区块。  </p>
<p>-f&lt;FAT数目&gt;  指定FAT的数目，目前支持1与2两种选项。  </p>
<p>-F&lt;FAT记录的单位&gt;  指定FAT记录的单位为12或16位。  </p>
<p>-i&lt;磁盘序号&gt;  设置文件系统的磁盘序号。  </p>
<p>-l&lt;文件名&gt;  从指定的文件中，读取文件系统中损坏区块的信息。  </p>
<p>-m&lt;信息文件&gt;  若以次文件系统开机，而却因操作系统没有正常安装，则会显示选项中所指定的信息文件内容。  </p>
<p>-n&lt;标签&gt;  设置文件系统的磁盘标签名称。  </p>
<p>-r&lt;根目录项目数&gt;  设置根目录最多能记载项目数。  </p>
<p>-s&lt;磁区数&gt;  指定每个丛集所包含的磁区数。  </p>
<p>-v  执行时显示详细的信息。</p>
<h3 id="mke2fs"><a href="#mke2fs" class="headerlink" title="***mke2fs"></a>***mke2fs</h3><p><strong>功能说明</strong>: 建立ext2文件系统。  </p>
<p><strong>语法</strong>: mke2fs [-cFMqrSvV][-b &lt;区块大小&gt;][-f &lt;不连续区段大小&gt;][-i &lt;字节&gt;][-N &lt;inode数&gt;][-l &lt;文件&gt;][-L &lt;标签&gt;][-m &lt;百分比值&gt;][-R&#x3D;&lt;区块数&gt;][ 设备名称][区块数]  </p>
<p><strong>补充说明</strong>: mke2fs可建立Linux的ext2文件系统。 </p>
<p><strong>参数</strong>:   </p>
<p>-b&lt;区块大小&gt;  指定区块大小，单位为字节。  </p>
<p>-c  检查是否有损坏的区块。  </p>
<p>-f&lt;不连续区段大小&gt;  指定不连续区段的大小，单位为字节。 </p>
<p> -F  不管指定的设备为何，强制执行mke2fs。  </p>
<p>-i&lt;字节&gt;  指定”字节&#x2F;inode”的比例。  </p>
<p>-N&lt;inode数&gt;  指定要建立的inode数目。  </p>
<p>-l&lt;文件&gt;  从指定的文件中，读取文件西中损坏区块的信息。  </p>
<p>-L&lt;标签&gt;  设置文件系统的标签名称。  </p>
<p>-m&lt;百分比值&gt;  指定给管理员保留区块的比例，预设为5%。 </p>
<p> -M  记录最后一次挂入的目录。  </p>
<p>-q  执行时不显示任何信息。  </p>
<p>-r  指定要建立的ext2文件系统版本。  </p>
<p>-R&#x3D;&lt;区块数&gt;  设置磁盘阵列参数。  </p>
<p>-S  仅写入superblock与group descriptors，而不更改inode able inode bitmap以及block bitmap。  </p>
<p>-v  执行时显示详细信息。  </p>
<p>-V  显示版本信息。</p>
<h3 id="mkfs-ext2"><a href="#mkfs-ext2" class="headerlink" title="*** mkfs.ext2"></a>*** mkfs.ext2</h3><p><strong>功能说明</strong>: 与mke2fs相同。</p>
<h3 id="mkfs"><a href="#mkfs" class="headerlink" title="***mkfs"></a>***mkfs</h3><p><strong>功能说明</strong>: 建立各种文件系统。  </p>
<p><strong>语法</strong>: mkfs [-vV][fs][-f &lt;文件系统类型&gt;][设备名称][区块数] </p>
<p><strong>补充说明</strong>: mkfs本身并不执行建立文件系统的工作，而是去调用相关的程序来执行。  </p>
<p><strong>参数</strong>:   </p>
<p>fs  指定建立文件系统时的参数。 </p>
<p>-t&lt;文件系统类型&gt;  指定要建立何种文件系统。 </p>
<p>-v  显示版本信息与详细的使用方法。 </p>
<p>-V  显示简要的使用方法。</p>
<h3 id="mkfs-minix"><a href="#mkfs-minix" class="headerlink" title="***mkfs.minix"></a>***mkfs.minix</h3><p><strong>功能说明</strong>: 建立Minix文件系统。  </p>
<p><strong>语法</strong>: mkfs.minix [-cv][-i ][-l &lt;文件&gt;][-n &lt;文件名长度&gt;][设备名称][区块数]  </p>
<p><strong>补充说明</strong>: mkfs.minix可建立Minix文件系统。  </p>
<p><strong>参数</strong>:   </p>
<p>-c  检查是否有损坏的区块。  </p>
<p>-i&lt;inode数目&gt;  指定文件系统的inode总数。  </p>
<p>-l&lt;文件&gt;  从指定的文件中，读取文件系统中损坏区块的信息。  </p>
<p>-n&lt;文件名长度&gt;  指定文件名称长度的上限。  </p>
<p>-v  建立第2版的Minix文件系统。</p>
<h3 id="mkfs-msdos"><a href="#mkfs-msdos" class="headerlink" title="***mkfs.msdos"></a>***mkfs.msdos</h3><p><strong>功能说明</strong>: 与mkdosfs相同。</p>
<h3 id="mkinitrd"><a href="#mkinitrd" class="headerlink" title="***mkinitrd"></a>***mkinitrd</h3><p><strong>功能说明</strong>: 建立要载入ramdisk的映像文件。  </p>
<p><strong>语法</strong>: mkinitrd [-fv][–omit-scsi-modules][–version][–preload&#x3D;&lt;模块名称&gt;][–with&#x3D;&lt;模块名称&gt;][映像文件][Kernel 版本]  </p>
<p><strong>补充说明</strong>: mkinitrd可建立映像文件，以供Linux开机时载入ramdisk。  </p>
<p><strong>参数</strong>:   </p>
<p>-f  若指定的映像问家名称与现有文件重复，则覆盖现有的文件。 　</p>
<p>-v　　执行时显示详细的信息。  </p>
<p>–omit-scsi-modules  不要载入SCSI模块。  </p>
<p>–preload&#x3D;&lt;模块名称&gt;  指定要载入的模块。  </p>
<p>–with&#x3D;&lt;模块名称&gt;  指定要载入的模块。  </p>
<p>–version  显示版本信息。</p>
<h3 id="mkisofs"><a href="#mkisofs" class="headerlink" title="***mkisofs"></a>***mkisofs</h3><p><strong>功能说明</strong>: 建立ISO 9660映像文件。  </p>
<p><strong>语法</strong>: mkisofs [-adDfhJlLNrRTvz][-print-size][-quiet][-A &lt;应用程序ID&gt;][-abstract &lt;摘要文件&gt;][-b &lt;开机映像文件&gt;][-biblio &lt;ISBN文件&gt;][-c &lt;开机文件名称&gt;][-C &lt;盘区编号，磁区编号&gt;][-copyright &lt;版权信息文件&gt;][-hide &lt;目录或文件名&gt;][-hide-joliet &lt;文件或目录名&gt;][-log-file &lt;记录文件&gt;][-m &lt;目录或文件名&gt;][-M &lt;开机映像文件&gt;][-o &lt;映像文件&gt;][-p &lt;数据处理人&gt;][-P &lt;光盘发行人&gt;][-sysid &lt;系统ID &gt;][-V &lt;光盘ID &gt;][-volset &lt;卷册集ID&gt;][-volset-size &lt;光盘总数&gt;][-volset-seqno &lt;卷册序号&gt;][-x &lt;目录&gt;][目录或文件]  </p>
<p><strong>补充说明</strong>: mkisofs可将指定的目录与文件做成ISO 9660格式的映像文件，以供刻录光盘。  </p>
<p><strong>参数</strong>:   </p>
<p>-a或–all  mkisofs通常不处理备份文件。使用此参数可以把备份文件加到映像文件中。  </p>
<p>-A&lt;应用程序ID&gt;或-appid&lt;应用程序ID&gt;  指定光盘的应用程序ID。 </p>
<p> -abstract&lt;摘要文件&gt;  指定摘要文件的文件名。  </p>
<p>-b&lt;开机映像文件&gt;或-eltorito-boot&lt;开机映像文件&gt;  指定在制作可开机光盘时所需的开机映像文件。 </p>
<p>-biblio&lt;ISBN文件&gt;  指定ISBN文件的文件名，ISBN文件位于光盘根目录下，记录光盘的ISBN。  </p>
<p>-c&lt;开机文件名称&gt;  制作可开机光盘时，mkisofs会将开机映像文件中的全-eltorito-catalog&lt;开机文件名称&gt;全部内容作成一个文件。  </p>
<p>-C&lt;盘区编号，盘区编号&gt;  将许多节区合成一个映像文件时，必须使用此参数。  -</p>
<p>copyright&lt;版权信息文件&gt;  指定版权信息文件的文件名。  </p>
<p>-d或-omit-period  省略文件后的句号。  </p>
<p>-D或-disable-deep-relocation  ISO 9660最多只能处理8层的目录，超过8层的部分，RRIP会自动将它们设置成ISO 9660兼容的格式。使用-D参数可关闭此功能。  </p>
<p>-f或-follow-links  忽略符号连接。  </p>
<p>-h  显示帮助。  </p>
<p>-hide&lt;目录或文件名&gt;  使指定的目录或文件在ISO 9660或Rock RidgeExtensions的系统中隐藏。 </p>
<p>-hide-joliet&lt;目录或文件名&gt;  使指定的目录或文件在Joliet系统中隐藏。  </p>
<p>-J或-joliet  使用Joliet格式的目录与文件名称。  </p>
<p>-l或-full-iso9660-filenames  使用ISO 9660 32字符长度的文件名。 </p>
<p>-L或-allow-leading-dots  允许文件名的第一个字符为句号。  </p>
<p>-log-file&lt;记录文件&gt;  在执行过程中若有错误信息，预设会显示在屏幕上。  </p>
<p>-m&lt;目录或文件名&gt;或-exclude&lt;目录或文件名&gt;  指定的目录或文件名将不会房入映像文件中。 </p>
<p>-M&lt;映像文件&gt;或-prev-session&lt;映像文件&gt;  与指定的映像文件合并。  </p>
<p>-N或-omit-version-number  省略ISO 9660文件中的版本信息。  </p>
<p>-o&lt;映像文件&gt;或-output&lt;映像文件&gt;  指定映像文件的名称。  </p>
<p>-p&lt;数据处理人&gt;或-preparer&lt;数据处理人&gt;  记录光盘的数据处理人。  </p>
<p>-print-size  显示预估的文件系统大小。  </p>
<p>-quiet  执行时不显示任何信息。  </p>
<p>-r或-rational-rock  使用Rock Ridge Extensions，并开放全部文件的读取权限。  </p>
<p>-R或-rock  使用Rock Ridge Extensions。  </p>
<p>-sysid&lt;系统ID&gt;  指定光盘的系统ID。  </p>
<p>-T或-translation-table  建立文件名的转换表，适用于不支持Rock Ridge Extensions的系统上。 </p>
<p> -v或-verbose  执行时显示详细的信息。 </p>
<p>-V&lt;光盘ID&gt;或-volid&lt;光盘ID&gt;  指定光盘的卷册集ID。 </p>
<p>-volset-size&lt;光盘总数&gt;  指定卷册集所包含的光盘张数。 </p>
<p>-volset-seqno&lt;卷册序号&gt;  指定光盘片在卷册集中的编号。  </p>
<p>-x&lt;目录&gt;  指定的目录将不会放入映像文件中。  </p>
<p>-z  建立通透性压缩文件的SUSP记录，此记录目前只在Alpha机器上的Linux有效。</p>
<h3 id="mkswap"><a href="#mkswap" class="headerlink" title="***mkswap"></a>***mkswap</h3><p><strong>功能说明</strong>: 设置交换区(swap area)。  </p>
<p><strong>语法</strong>: mkswap [-cf][-v0][-v1][设备名称或文件][交换区大小]  </p>
<p><strong>补充说明</strong>: mkswap可将磁盘分区或文件设为Linux的交换区。  </p>
<p><strong>参数</strong>:   </p>
<p>-c  建立交换区前，先检查是否有损坏的区块。  </p>
<p>-f  在SPARC电脑上建立交换区时，要加上此参数。  </p>
<p>-v0  建立旧式交换区，此为预设值。 </p>
<p>-v1  建立新式交换区。  [交换区大小]  指定交换区的大小，单位为1024字节。</p>
<h3 id="mpartition"><a href="#mpartition" class="headerlink" title="***mpartition"></a>***mpartition</h3><p><strong>功能说明</strong>: 建立或删除MS-DOS的分区。  </p>
<p><strong>语法</strong>: mpartition [-acdfIprv][-b &lt;磁区数&gt;][-h &lt;磁头数&gt;][l &lt;磁区数&gt;][-s &lt;磁区数&gt;][-t &lt;柱面数&gt;][驱动器代号]  </p>
<p><strong>补充说明</strong>: mpartition为mtools工具指令，可建立或删除磁盘分区。  </p>
<p><strong>参数</strong>:   </p>
<p>-a  将分区设置为可开机分区。  </p>
<p>-b&lt;磁区数&gt;  建立分区时，指定要从第几个磁区开始建立分区。  </p>
<p>-c  建立分区。  </p>
<p>-d  将分区设置为无法开机的分区。  </p>
<p>-f  强制地修改分区而不管检查时发生的错误信息。  </p>
<p>-h&lt;磁头数&gt;  建立分区时，指定分区的磁头数。  </p>
<p>-I  删除全部的分区。  </p>
<p>-l&lt;磁区数&gt;  建立分区时，指定分区的容量大小，单位为磁区数。  </p>
<p>-p  当要重新建立分区时，显示命令列。  </p>
<p>-r  删除分区。  </p>
<p>-s&lt;磁区数&gt;  建立分区时，指定每个磁轨的磁区数。  </p>
<p>-t&lt;柱面数&gt;  建立分区时，指定分区的柱面数。  </p>
<p>-v  与-p参数一并使用，若没有同时下达修改分区的命令，则显示目前分区的状态。</p>
<h3 id="sfdisk"><a href="#sfdisk" class="headerlink" title="***sfdisk"></a>***sfdisk</h3><p><strong>功能说明</strong>: 硬盘恩区工具程序。  </p>
<p><strong>语法</strong>: sfdisk [-?Tvx][-d &lt;硬盘&gt;][-g &lt;硬盘&gt;][-l &lt;硬盘&gt;][-s &lt;分区&gt;][-V &lt;硬盘&gt;]  </p>
<p><strong>补充说明</strong>: sfdisk为硬盘分区工具程序，可显示分区的设置信息，并检查分区是否正常。  </p>
<p><strong>参数</strong>:   </p>
<p>-?或–help  显示帮助。  </p>
<p>-d&lt;硬盘&gt;  显示硬盘分区的设置。  </p>
<p>-g&lt;硬盘&gt;或–show-geometry&lt;硬盘&gt;  显示硬盘的CHS参数。  </p>
<p>-l&lt;硬盘&gt;  显示后硬盘分区的相关设置。  </p>
<p>-s&lt;分区&gt;  显示分区的大小，单位为区块。  </p>
<p>-T或–list-types  显示所有sfdisk能辨识的文件系统ID。  </p>
<p>-v或–version  显示版本信息。  </p>
<p>-V&lt;硬盘&gt;或–verify&lt;硬盘&gt;  检查硬盘分区是否正常。  </p>
<p>-x或–show-extend  显示扩展分区中的逻辑分区。</p>
<h3 id="swapoff"><a href="#swapoff" class="headerlink" title="***swapoff"></a>***swapoff</h3><p><strong>功能说明</strong>: 关闭系统交换区(swap area)。  </p>
<p><strong>语法</strong>: swapoff [设备]  </p>
<p><strong>补充说明</strong>: swapoff实际上为swapon的符号连接，可用来关闭系统的交换区。</p>
<h3 id="swapon"><a href="#swapon" class="headerlink" title="***swapon"></a>***swapon</h3><p><strong>功能说明</strong>: 启动系统交换区(swap area)。  </p>
<p><strong>语法</strong>: swapon [-ahsV][-p &lt;优先顺序&gt;][设备]  </p>
<p><strong>补充说明</strong>: Linux系统的内存管理必须使用交换区来建立虚拟内存。  </p>
<p>-a  将&#x2F;etc&#x2F;fstab文件中所有设置为swap的设备，启动为交换区。 </p>
<p>-h  显示帮助。  </p>
<p>-p&lt;优先顺序&gt;  指定交换区的优先顺序。  </p>
<p>-s  显示交换区的使用状况。  </p>
<p>-V  显示版本信息。</p>
<h3 id="symlinks"><a href="#symlinks" class="headerlink" title="***symlinks"></a>***symlinks</h3><p><strong>功能说明</strong>: 维护符号连接的工具程序。  </p>
<p><strong>语法</strong>: symlinks [-cdrstv][目录]  </p>
<p><strong>补充说明</strong>: symlinks可检查目录中的符号连接，并显示符号连接类型。以下为symlinks可判断的符号连接类型：  absolute：符号连接使用了绝对路径。  </p>
<p>dangling：原始文件已经不存在。  </p>
<p>lengthy：符号连接的路径中包含了多余的”..&#x2F;“。  </p>
<p>messy：符号连接的路径中包含了多余的”&#x2F;“。  </p>
<p>other_fs：原始文件位于其他文件系统中。  </p>
<p>relative：符号连接使用了相对路径。  </p>
<p><strong>参数</strong>:  </p>
<p>-c  将使用绝对路径的符号连接转换为相对路径。 </p>
<p>-d  移除dangling类型的符号连接。  </p>
<p>-r  检查目录下所有子目录中的符号连接。  </p>
<p>-s  检查lengthy类型的符号连接。  </p>
<p>-t  与-c一并使用时，会显示如何将绝对路径的符号连接转换为相对路径，但不会实际转换。  </p>
<p>-v  显示所有类型的符号连接。</p>
<h3 id="sync"><a href="#sync" class="headerlink" title="***sync"></a>***sync</h3><p><strong>功能说明</strong>: 将内存缓冲区内的数据写入磁盘。  </p>
<p><strong>语法</strong>: sync [–help][–version]  </p>
<p><strong>补充说明</strong>: 在Linux系统中，当数据需要存入磁盘时，通常会先放到缓冲区内，等到适当的时刻再写入磁盘，如此可提高系统的执行效率。  </p>
<p><strong>参数</strong>:   </p>
<p>–help  显示帮助。  </p>
<p>-version  显示版本信息。</p>
<h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><h3 id="alias"><a href="#alias" class="headerlink" title="***alias"></a>***alias</h3><p><strong>功能说明</strong>:设置指令的别名。  </p>
<p><strong>语法</strong>:alias[别名]&#x3D;[指令名称]  </p>
<p><strong>补充说明</strong>:用户可利用alias，自定指令的别名。若仅输入alias，则可列出目前所有的别名设置。　alias的效力仅及于该次登入的操作。若要每次登入是即自动设好别名，可在.profile或.cshrc中设定指令的别名。  </p>
<p><strong>参数</strong>:若不加任何参数，则列出目前所有的别名设置。</p>
<h3 id="apmd"><a href="#apmd" class="headerlink" title="***apmd"></a>***<strong>apmd</strong></h3><p><strong>功能说明</strong>:进阶电源管理服务程序。  </p>
<p><strong>语法</strong>:apmd [-u v V W][-p &lt;百分比变化量&gt;][-w &lt;百分比值&gt;]  </p>
<p><strong>补充说明</strong>:apmd负责BIOS进阶电源管理(APM)相关的记录，警告与管理工作。  </p>
<p><strong>参数</strong>:  </p>
<p>-p&lt;百分比变化量&gt;或–percentage&lt;百分比变化量&gt; 当电力变化的幅度超出设置的百分比变化量，即记录事件百分比变化量的预设值为5，若设置值超过100，则关闭此功能。   </p>
<p>-u或–utc 将BIOS时钟设为UTC，以便从悬待模式恢复时，将-u参数传送至clock或hwclock程序。  </p>
<p>-v或–verbose 记录所有的APM事件。   </p>
<p>-V或–version 显示版本信息。   </p>
<p>-w&lt;百分比值&gt;或–warn&lt;百分比值&gt; 当电池不在充电状态时，且电池电量低于设置的百分比值，则在syslog(2)的ALERT层记录警告信息。百分比值的预设置为10，若设置为0，则关闭此功能。   </p>
<p>-W或–wall 发出警告信息给所有人。</p>
<h3 id="aumix"><a href="#aumix" class="headerlink" title="***aumix"></a>***aumix</h3><p><strong>功能说明</strong>：设置音效装置。  </p>
<p><strong>语法</strong>：aumix [-123bcilmoprstvwWx][(+&#x2F;-)强度][PqR][-dfhILqS]  </p>
<p><strong>补充说明</strong>：设置各项音效装置的信号强度以及指定播放与录音的装置。  </p>
<p><strong>参数</strong>:  </p>
<p>[-123bcilmoprstvwWx]为频道参数，用来指定装置的频道；</p>
<p>[PqR]可用来指定播放或录音装置；</p>
<p>[-dfhILqS] 则为指令参数。若不加任何参数，aumix会显示简单的图形界面供调整设置频道参数：  -1 输入信号线１。   -2 输入信号线２。   -3 输入信号线３。   </p>
<p>-b 低音。   </p>
<p>-c CD。   </p>
<p>-i 输入信号强度。   </p>
<p>-m 麦克风。   </p>
<p>-o 输出信号强度。   </p>
<p>-p PC喇叭。   </p>
<p>-r 录音。   </p>
<p>-s 合成器。   </p>
<p>-t 高音。   </p>
<p>-v 主音量。   </p>
<p>-w PCM。   </p>
<p>-W PCM2。   </p>
<p>-x 混音器。  </p>
<p> (+&#x2F;-)强度 出现(+&#x2F;-)时，代表在原有的强度上加减指定值。若未使用(+&#x2F;-)，则直接将强度设为指定值。 指定音效装置   </p>
<p>P 指定播放装置。  </p>
<p>q 显示频道设置。   </p>
<p>R 指定录音装置。  　</p>
<p><strong>指令参数</strong>   </p>
<p>-d 指定音效装置的名称。   </p>
<p>-f 指定存储或载入设置的文件。   </p>
<p>-h 在使用时显示信息。   </p>
<p>-I 以图形界面方式来执行aumix。   </p>
<p>-L 从$HOME&#x2F;.aumixrc或&#x2F;etc&#x2F;aumixrc载入设置。   </p>
<p>-q 显示所有频道的设置值。   </p>
<p>-S 将设置值保存至&#x2F;HOME&#x2F;.aumixrc。</p>
<h3 id="bind"><a href="#bind" class="headerlink" title="***bind"></a>***bind</h3><p><strong>功能说明</strong>:显示或设置键盘按键与其相关的功能。  </p>
<p><strong>语法</strong>:bind [-dlv][-f &lt;按键配置文件&gt;][-m &lt;按键配置&gt;][-q &lt;功能&gt;]  </p>
<p><strong>补充说明</strong>:您可以利用bind命令了解有哪些按键组合与其功能，也可以自行指定要用哪些按键组合。  </p>
<p><strong>参数</strong>: 　</p>
<p>-d 显示按键配置的内容。   </p>
<p>-f&lt;按键配置文件&gt; 载入指定的按键配置文件。  　</p>
<p>-l 列出所有的功能。  　</p>
<p>-m&lt;按键配置&gt; 指定按键配置。  　</p>
<p>-q&lt;功能&gt; 显示指定功能的按键。  　</p>
<p>-v 列出目前的按键配置与其功能。</p>
<h3 id="chkconfig"><a href="#chkconfig" class="headerlink" title="***chkconfig"></a>***chkconfig</h3><p><strong>功能说明</strong>:检查，设置系统的各种服务。  </p>
<p><strong>语法</strong>:chkconfig [–add][–del][–list][系统服务] 或 chkconfig [–level &lt;等级代号&gt;][系统服务][on&#x2F;off&#x2F;reset]  </p>
<p><strong>补充说明</strong>:这是Red Hat公司遵循GPL规则所开发的程序，它可查询操作系统在每一个执行等级中会执行哪些系统服务，其中包括各类常驻服务。  </p>
<p><strong>参数</strong>: 　</p>
<p>–add 增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据。  　</p>
<p>–del 删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据。  　</p>
<p>–level&lt;等级代号&gt; 指定读系统服务要在哪一个执行等级中开启或关毕</p>
<h3 id="chroot"><a href="#chroot" class="headerlink" title="***chroot"></a>***chroot</h3><p><strong>功能说明</strong>:改变根目录。  </p>
<p><strong>语法</strong>:chroot [–help][–version][目的目录][执行指令…]  </p>
<p><strong>补充说明</strong>:把根目录换成指定的目的目录。  </p>
<p><strong>参数</strong>: 　</p>
<p>–help 在线帮助。 　</p>
<p>–version 显示版本信息。</p>
<h3 id="clock"><a href="#clock" class="headerlink" title="***clock"></a>***clock</h3><p><strong>功能说明</strong>:调整 RTC 时间。  </p>
<p><strong>语法</strong>:clock [–adjust][–debug][–directisa][–getepoch][–hctosys][–set –date&#x3D;”&lt;日期时间&gt;”][–setepoch –epoch&#x3D;&lt; &gt;][–show][–systohc][–test][–utc][–version]  </p>
<p><strong>补充说明</strong>:RTC 是电脑内建的硬件时间，执行这项指令可以显示现在时刻，调整硬件时钟的时间，将系统时间设成与硬件时钟之时间一致，或是把系统时间回存到硬件时钟。  </p>
<p><strong>参数</strong>: 　</p>
<p>–adjust 第一次使用”–set”或”–systohc”参数设置硬件时钟，会在&#x2F;etc目录下产生一个名称为adjtime的文件。当再次使用这两个参数调整硬件时钟，此文件便会记录两次调整间之差异，日后执行clock指令加上”–adjust”参数时，程序会自动根 据记录文件的数值差异，计算出平均值，自动调整硬件时钟的时间。  　</p>
<p>–debug 详细显示指令执行过程，便于排错或了解程序执行的情形。  　</p>
<p>–directisa 告诉clock指令不要通过&#x2F;dev&#x2F;rtc设备文件，直接对硬件时钟进行存取。这个参数适用于仅有ISA总线结构的老式电脑。  　</p>
<p>–getepoch 把系统核心内的硬件时钟新时代数值，呈现到标准输出设备。  　</p>
<p>–hctosys Hardware Clock to System Time，把系统时间设成和硬件时钟一致。由于这个动作将会造成系统全面更新文件的存取时间，所以最好在系统启动时就执行它。  　</p>
<p>–set–date 设置硬件时钟的日期和时间。  　</p>
<p>–setepoch–epoch&#x3D;&lt;年份&gt; 　设置系统核心之硬件时钟的新时代数值，年份以四位树字表示。  　</p>
<p>–show 读取硬件时钟的时间，并将其呈现至标准输出设备。  　</p>
<p>–systohc System Time to Hardware Clock，将系统时间存回硬件时钟内。  　</p>
<p>–test 仅作测试，并不真的将时间写入硬件时钟或系统时间。  　</p>
<p>–utc 把硬件时钟上的时间时为CUT，有时也称为UTC或UCT。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="crontab"><a href="#crontab" class="headerlink" title="***crontab"></a>***crontab</h3><p><strong>功能说明</strong>:设置计时器。  </p>
<p><strong>语法</strong>:crontab [-u &lt;用户名称&gt;][配置文件] 或 crontab [-u &lt;用户名称&gt;][-elr]  </p>
<p><strong>补充说明</strong>:cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。其配置文件格式如下：  </p>
<p>​		Minute Hour Day Month DayOFWeek Command    </p>
<p><strong>参数</strong>:  　</p>
<p>-e 编辑该用户的计时器设置。  　</p>
<p>-l 列出该用户的计时器设置。  　</p>
<p>-r 删除该用户的计时器设置。  　</p>
<p>-u&lt;用户名称&gt; 指定要设定计时器的用户名称。</p>
<h3 id="declare"><a href="#declare" class="headerlink" title="***declare"></a>***declare</h3><p><strong>功能说明</strong>:声明 shell 变量。  </p>
<p><strong>语法</strong>:declare [+&#x2F;-][rxi][变量名称＝设置值] 或 declare -f  </p>
<p><strong>补充说明</strong>:declare为shell指令，在第一种语法中可用来声明变量并设置变量的属性([rix]即为变量的属性），在第二种语法中可用来显示shell函数。若不加上任何参数，则会显示全部的shell变量与函数(与执行set指令的效果相同)。  </p>
<p><strong>参数</strong>: 　</p>
<p>+&#x2F;- “-“可用来指定变量的属性，”+”则是取消变量所设的属性。  　</p>
<p>-f 仅显示函数。  　</p>
<p>r 将变量设置为只读。  　</p>
<p>x 指定的变量会成为环境变量，可供shell以外的程序来使用。  　</p>
<p>i [设置值]可以是数值，字符串或运算式。</p>
<h3 id="depmod"><a href="#depmod" class="headerlink" title="***depmod"></a>***depmod</h3><p><strong>功能说明</strong>:分析可载入模块的相依性。  </p>
<p><strong>语法</strong>:depmod [-adeisvV][-m &lt;文件&gt;][–help][模块名称]  </p>
<p><strong>补充说明</strong>:depmod可检测模块的相依性，供modprobe在安装模块时使用。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a或–all 分析所有可用的模块。  　</p>
<p>-d或debug 执行排错模式。  　</p>
<p>-e 输出无法参照的符号。  　</p>
<p>-i 不检查符号表的版本。  　</p>
<p>-m&lt;文件&gt;或system-map&lt;文件&gt; 使用指定的符号表文件。  　</p>
<p>-s或–system-log 在系统记录中记录错误。  　</p>
<p>-v或–verbose 执行时显示详细的信息。  　</p>
<p>-V或–version 显示版本信息。  　</p>
<p>–help 显示帮助。</p>
<h3 id="dircolors"><a href="#dircolors" class="headerlink" title="***dircolors"></a>***dircolors</h3><p><strong>功能说明</strong>:设置 ls 指令在显示目录或文件时所用的色彩。  </p>
<p><strong>语法</strong>:dircolors [色彩配置文件] 或 dircolors [-bcp][–help][–version]  </p>
<p><strong>补充说明</strong>:dircolors可根据[色彩配置文件]来设置LS_COLORS环境变量或是显示设置LS_COLORS环境变量的shell指令。  </p>
<p><strong>参数</strong>: 　</p>
<p>-b或–sh或–bourne-shell 显示在Boume shell中，将LS_COLORS设为目前预设置的shell指令。  　</p>
<p>-c或–csh或–c-shell 显示在C shell中，将LS_COLORS设为目前预设置的shell指令。  　</p>
<p>-p或–print-database 显示预设置  　</p>
<p>-help 显示帮助。  　</p>
<p>-version 显示版本信息。</p>
<h3 id="dmesg"><a href="#dmesg" class="headerlink" title="***dmesg"></a>***dmesg</h3><p><strong>功能说明</strong>:显示开机信息。  </p>
<p><strong>语法</strong>:dmesg [-cn][-s &lt;缓冲区大小&gt;]  </p>
<p><strong>补充说明</strong>:kernel会将开机信息存储在ring buffer中。您若是开机时来不及查看信息，可利用dmesg来查看。开机信息亦保存在&#x2F;var&#x2F;log目录中，名称为dmesg的文件里。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c 显示信息后，清除ring buffer中的内容。  　</p>
<p>-s&lt;缓冲区大小&gt; 预设置为8196，刚好等于ring buffer的大小。  　</p>
<p>-n 设置记录信息的层级。</p>
<h3 id="enable"><a href="#enable" class="headerlink" title="***enable"></a>***enable</h3><p><strong>功能说明</strong>:启动或关闭 shell 内建指令。  </p>
<p><strong>语法</strong>:enable [-n][-all][内建指令]  </p>
<p><strong>补充说明</strong>:若要执行的文件名称与shell内建指令相同，可用enable -n来关闭shell内建指令。若不加-n参数，enable可重新启动关闭的指令。  </p>
<p><strong>参数</strong>: 　</p>
<p>-n 关闭指定的shell内建指令。  　</p>
<p>-all 显示shell所有关闭与启动的指令</p>
<h3 id="eval"><a href="#eval" class="headerlink" title="***eval"></a>***eval</h3><p><strong>功能说明</strong>:重新运算求出参数的内容。  </p>
<p><strong>语法</strong>:eval [参数]  </p>
<p><strong>补充说明</strong>:eval可读取一连串的参数，然后再依参数本身的特性来执行。  </p>
<p><strong>参数</strong>:</p>
<p>参数不限数目，彼此之间用分号分开。</p>
<h3 id="export"><a href="#export" class="headerlink" title="***export"></a>***export</h3><p><strong>功能说明</strong>:设置或显示环境变量。  </p>
<p><strong>语法</strong>:export [-fnp][变量名称]&#x3D;[变量设置值]  </p>
<p><strong>补充说明</strong>:在shell中执行程序时，shell会提供一组环境变量。export可新增，修改或删除环境变量，供后续执行的程序使用。export的效力仅及于该此登陆操作。  </p>
<p><strong>参数</strong>: 　</p>
<p>-f 代表[变量名称]中为函数名称。  　</p>
<p>-n 删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中。  　</p>
<p>-p 列出所有的shell赋予程序的环境变量。</p>
<h3 id="fbset"><a href="#fbset" class="headerlink" title="***fbset"></a>***fbset</h3><p><strong>功能说明</strong>:设置景框缓冲区。  </p>
<p><strong>语法</strong>:fbset [-ahinsvVx][-db &lt;信息文件&gt;][-fb &lt;外围设备代号&gt;][–test][显示模式]  </p>
<p><strong>补充说明</strong>:fbset指令可用于设置景框缓冲区的大小，还能调整画面之分辨率，位置，高低宽窄，色彩 深度，并可决定是否启动先卡之各项硬件特性。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a或–all 改变所有使用该设备之虚拟终端机的显示模式。  　</p>
<p>-db&lt;信息文件&gt; 指定显示模式的信息文件，预设值文件名称为fb.modes，存放在&#x2F;etc目录下  　</p>
<p>-fb&lt;外围设备代号&gt; 指定用来做为输出景框缓冲区之外围设备，预设置为”&#x2F;dev&#x2F;fd0”。  　</p>
<p>-h或-help 在线帮助。  　</p>
<p>-i或–info 列出所有景框缓冲区之相关信息。  　</p>
<p>-ifb&lt;外围设备代号&gt; 使用另一个景框缓冲区外围设备之设置值。  　</p>
<p>-n或–now 马上改变显示模式。  　</p>
<p>-ofb&lt;外围设备代号&gt; 此参数效果和指定”-fb”参数相同。  　</p>
<p>-s或–show 列出目前显示模式之设置。  　</p>
<p>-v或–verbose 显示指令执行过程。  　</p>
<p>-V或–version 显示版本信息。  　</p>
<p>-x或–xfree86 使用XFree86兼容模式。  　</p>
<p>–test 仅做测试，并不改变现行的显示模式。</p>
<h3 id="grpconv"><a href="#grpconv" class="headerlink" title="***grpconv"></a>***grpconv</h3><p><strong>功能说明</strong>:开启群组的投影密码。  </p>
<p><strong>语法</strong>:grpconv  </p>
<p><strong>补充说明</strong>:Linux系统里的用户和群组密码，分别存放在&#x2F;etc目录下的passwd和group文件中。因系统运作所需，任何人都得以读取它们，造成安全上的破绽。投影密码将文件内的密码改存在&#x2F;etc目录下的shadow和gshadow文件内，只允许系统管理者读取，同时把原密码置换为”x”字符。投影密码的功能可随时开启或关闭，您只需执行grpconv指令就能开启群组投影密码。</p>
<h3 id="grpunconv"><a href="#grpunconv" class="headerlink" title="***grpunconv"></a>***grpunconv</h3><p><strong>功能说明</strong>:关闭群组的投影密码。  </p>
<p><strong>语法</strong>:grpunconv  </p>
<p><strong>补充说明</strong>:执行grpunconv指令可关闭群组投影密码，它会把密码从gshadow文件内，回存到group文件里。</p>
<h3 id="hwclock"><a href="#hwclock" class="headerlink" title="***hwclock"></a>***hwclock</h3><p><strong>功能说明</strong>:显示与设定硬件时钟。  </p>
<p><strong>语法</strong>:hwclock [–adjust][–debug][–directisa][–hctosys][–show][–systohc][–test] [–utc][–version][–set –date&#x3D;&lt;日期与时间&gt;]  </p>
<p><strong>补充说明</strong>:在Linux中有硬件时钟与系统时钟等两种时钟。硬件时钟是指主机板上的时钟设备，也就是通常可在BIOS画面设定的时钟。系统时钟则是指kernel中的时钟。当Linux启动时，系统时钟会去读取硬件时钟的设定，之后系统时钟即独立运作。所有Linux相关指令与函数都是读取系统时钟的设定。  </p>
<p><strong>参数</strong>:  </p>
<p>–adjust hwclock每次更改硬件时钟时，都会记录在&#x2F;etc&#x2F;adjtime文件中。使用–adjust参数，可使hwclock根据先前的记录来估算硬件时钟的偏差，并用来校正目前的硬件时钟。   </p>
<p>–debug 显示hwclock执行时详细的信息。   </p>
<p>–directisa hwclock预设从&#x2F;dev&#x2F;rtc设备来存取硬件时钟。若无法存取时，可用此参数直接以I&#x2F;O指令来存取硬件时钟。   </p>
<p>–hctosys 将系统时钟调整为与目前的硬件时钟一致。   </p>
<p>–set –date&#x3D;&lt;日期与时间&gt; 设定硬件时钟。   </p>
<p>–show 显示硬件时钟的时间与日期。   </p>
<p>–systohc 将硬件时钟调整为与目前的系统时钟一致。   </p>
<p>–test 仅测试程序，而不会实际更改硬件时钟。   </p>
<p>–utc 若要使用格林威治时间，请加入此参数，hwclock会执行转换的工作。   </p>
<p>–version 显示版本信息。</p>
<h3 id="insmod"><a href="#insmod" class="headerlink" title="***insmod"></a>***insmod</h3><p><strong>功能说明</strong>:载入模块。  </p>
<p><strong>语法</strong>:insmod [-fkmpsvxX][-o &lt;模块名称&gt;][模块文件][符号名称 &#x3D; 符号值]  </p>
<p><strong>补充说明</strong>:Linux有许多功能是通过模块的方式，在需要时才载入kernel。如此可使kernel较为精简，进而提高效率，以及保有较大的弹性。这类可载入的模块，通常是设备驱动程序。  </p>
<p><strong>参数</strong>:  </p>
<p>-f 不检查目前kernel版本与模块编译时的kernel版本是否一致，强制将模块载入。  </p>
<p> -k 将模块设置为自动卸除。   </p>
<p>-m 输出模块的载入信息。   </p>
<p>-o&lt;模块名称&gt; 指定模块的名称，可使用模块文件的文件名。   </p>
<p>-p 测试模块是否能正确地载入kernel。   </p>
<p>-s 将所有信息记录在系统记录文件中。   </p>
<p>-v 执行时显示详细的信息。   </p>
<p>-x 不要汇出模块的外部符号。   </p>
<p>-X 汇出模块所有的外部符号，此为预设置。</p>
<h3 id="kbdconfig"><a href="#kbdconfig" class="headerlink" title="***kbdconfig"></a>***kbdconfig</h3><p><strong>功能说明</strong>:设置键盘类型。  </p>
<p><strong>语法</strong>:kbdconfig [–back][–test]  </p>
<p><strong>补充说明</strong>:kbdconfig(Red Hat Linux才有的指令)是一个用来设置键盘的程序，提供图形化的操作界面。kbdconfig实际上是修改&#x2F;etc&#x2F;sysconfig&#x2F;keyboard的键盘配置文件。  </p>
<p><strong>参数</strong>:  </p>
<p>–back 执行时将预设的Cancel按钮更改为Back按钮。  </p>
<p> –test 仅作测试，不会实际更改设置。</p>
<h3 id="lilo"><a href="#lilo" class="headerlink" title="***lilo"></a>***lilo</h3><p><strong>功能说明</strong>:安装核心载入，开机管理程序。 </p>
<p><strong>语法</strong>:lilo [-clqtV][-b&lt;外围设备代号&gt;][-C&lt;配置文件&gt;][-d&lt;延迟时间&gt;][－D&lt;识别标签&gt;][-f&lt;几何参数文件&gt;][-i&lt;开机磁区文件&gt;][-I&lt;识别标签&gt;][-m&lt;映射文件&gt;][-P][-r&lt;根目录&gt;][-R&lt;执行指令&gt;…][-s&lt;备份文件&gt;][-S&lt;备份文件&gt;][-uU&lt;外围设备代号&gt;][-v…]  </p>
<p><strong>补充说明</strong>:lilo是个Linux系统核心载入程序，同时具备管理开机的功能。单独执行lilo指令，它会读取&#x2F;etc&#x2F;目录下的lilo.conf配置文件，然后根据其内容安装lilo。  </p>
<p><strong>参数</strong>:  </p>
<p>-b&lt;外围设备代号&gt; 指定安装lilo之处的外围设备代号。   </p>
<p>-c 使用紧致映射模式。   </p>
<p>-C&lt;配置文件&gt; 指定lilo的配置文件。   </p>
<p>-d&lt;延迟时间&gt; 设置开机延迟时间。   </p>
<p>-D&lt;识别标签&gt; 指定开机后预设启动的操作系统，或系统核心识别标签。   </p>
<p>-f&lt;几何参数文件&gt; 指定磁盘的几何参数配置文件。   </p>
<p>-i&lt;开机磁区文件&gt; 指定欲使用的开机磁区文件，预设是&#x2F;boot目录里的boot.b文件。   </p>
<p>-I&lt;识别标签&gt; 显示系统核心存放之处。   </p>
<p>-l 产生线形磁区地址。   </p>
<p>-m&lt;映射文件&gt; 指定映射文件。   </p>
<p>-P&lt;fix&#x2F;ignore&gt; 决定要修复或忽略分区表的错误。   </p>
<p>-q 列出映射的系统核心文件。   </p>
<p>-r&lt;根目录&gt; 设置系统启动时欲挂入成为根目录的目录。   </p>
<p>-R&lt;执行指令&gt; 设置下次启动系统时，首先执行的指令。   </p>
<p>-s&lt;备份文件&gt; 指定备份文件。   </p>
<p>-S&lt;备份文件&gt; 强制指定备份文件。   </p>
<p>-t 不执行指令，仅列出实际执行会进行的动作。  </p>
<p> -u&lt;外围色设备代号&gt; 删除lilo。   </p>
<p>-U&lt;外围设备代号&gt; 此参数的效果和指定”-u”参数类似，当不检查时间戳记。   </p>
<p>-v 显示指令执行过程。   </p>
<p>-V 显示版本信息。</p>
<h3 id="liloconfig"><a href="#liloconfig" class="headerlink" title="***liloconfig"></a>***liloconfig</h3><p><strong>功能说明</strong>:设置核心载入，开机管理程序。 </p>
<p><strong>语法</strong>:liloconfig  </p>
<p><strong>补充说明</strong>:liloconfig是Slackware发行版专门用来调整lilo设置的程序。它通过互动式操作界面，让用户能够利用键盘上的方向键等，轻易地操控lilo的安装，设置作业，而无须下达各种参数或撰写配置文件。</p>
<h3 id="lsmod"><a href="#lsmod" class="headerlink" title="***lsmod"></a>***lsmod</h3><p><strong>功能说明</strong>:显示已载入系统的模块。  </p>
<p><strong>语法</strong>:lsmod  </p>
<p><strong>补充说明</strong>:执行lsmod指令，会列出所有已载入系统的模块。Linux操作系统的核心具有模块化的特性，应此在编译核心时，务须把全部的功能都放入核心。您可以将这些功能编译成一个个单独的模块，待需要时再分别载入。</p>
<h3 id="minfo"><a href="#minfo" class="headerlink" title="***minfo"></a>***minfo</h3><p><strong>功能说明</strong>:显示MS-DOS文件系统的各项参数。  </p>
<p><strong>语法：&lt;&#x2F;&gt;minfo [-v][驱动器代号]  *</strong></p>
<p>*<strong>补充说明</strong>:minfo为mtools工具指令，可显示MS-DOS系统磁盘的各项参数，包括磁区数，磁头数…等。  </p>
<p><strong>参数</strong>:  </p>
<p>-v 除了一般信息外，并显示可开机磁区的内容。</p>
<h3 id="mkkickstart"><a href="#mkkickstart" class="headerlink" title="***mkkickstart"></a>***mkkickstart</h3><p><strong>功能说明</strong>:建立安装的组态文件。  </p>
<p><strong>语法</strong>:mkkickstart [–bootp][–dhcp][–nonet][–nox][–version][–nfs &lt;远端电脑:路径&gt;]   </p>
<p><strong>补充说明</strong>:mkkickstart可根据目前系统的设置来建立组态文件，供其他电脑在安装时使用。组态文件的内容包括使用语言，网络环境，系统磁盘状态，以及X Windows的设置等信息。  </p>
<p><strong>参数</strong>:  </p>
<p>–bootp 安装与开机时，使用BOOTP。   </p>
<p>–dhcp 安装与开机时，使用DHCP。   </p>
<p>–nfs&lt;远端电脑:路径&gt; 使用指定的网络路径安装。   </p>
<p>–nonet 不要进行网络设置，即假设在没有网络环境的状态下。   </p>
<p>–nox 不要进行X Windows的环境设置。   </p>
<p>–version 显示版本信息。</p>
<h3 id="modinfo"><a href="#modinfo" class="headerlink" title="***modinfo"></a>***modinfo</h3><p><strong>功能说明</strong>:显示kernel模块的信息。  </p>
<p><strong>语法</strong>:modinfo [-adhpV][模块文件]  </p>
<p><strong>补充说明</strong>:modinfo会显示kernel模块的对象文件，以显示该模块的相关信息。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或–author 显示模块开发人员。  </p>
<p>-d或–description 显示模块的说明。   </p>
<p>-h或–help 显示modinfo的参数使用方法。   </p>
<p>-p或–parameters 显示模块所支持的参数。   </p>
<p>-V或–version 显示版本信息。</p>
<h3 id="modprobe"><a href="#modprobe" class="headerlink" title="***modprobe"></a>***modprobe</h3><p><strong>功能说明</strong>:自动处理可载入模块。  </p>
<p><strong>语法</strong>:modprobe [-acdlrtvV][–help][模块文件][符号名称 &#x3D; 符号值]  </p>
<p><strong>补充说明</strong>:modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据depmod所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或–all 载入全部的模块。   </p>
<p>-c或–show-conf 显示所有模块的设置信息。   </p>
<p>-d或–debug 使用排错模式。   </p>
<p>-l或–list 显示可用的模块。   </p>
<p>-r或–remove 模块闲置不用时，即自动卸载模块。   </p>
<p>-t或–type 指定模块类型。   </p>
<p>-v或–verbose 执行时显示详细的信息。  </p>
<p>-V或–version 显示版本信息。   </p>
<p>-help 显示帮助。</p>
<h3 id="mouseconfig"><a href="#mouseconfig" class="headerlink" title="***mouseconfig"></a>***mouseconfig</h3><p><strong>功能说明</strong>:设置鼠标相关参数。  </p>
<p><strong>语法</strong>:mouseconfig [–back][–emulthree][–help][–expert][–kickstart][–noprobe][–test][–device &lt;连接端口&gt;][鼠标类型]  </p>
<p><strong>补充说明</strong>:mouseconfig为鼠标设置程序，可自动设置相关参数，或者用户也可以利用所提供互动模式自行设置鼠标。mouseconfig是Red Hat Linux才有的命令。  </p>
<p><strong>参数</strong>:  </p>
<p>–back 在设置画面上显示Back按钮，而取代预设的Cancel按钮。   </p>
<p>–device&lt;连接端口&gt; 指定硬件连接端口。可用的选项有ttyS0，ttyS1，ttyS2，ttyS3与orpsaux。   </p>
<p>–emulthree 将二钮鼠标模拟成三钮鼠标。   </p>
<p>–help 显示帮助以及所有支持的鼠标类型。   </p>
<p>–expert 程序预设可自动判断部分设置值。若要自行设置，请使用–expert参数。   </p>
<p>–kickstart 让程序自动检测并保存所有的鼠标设置。   </p>
<p>–noprobe 不要检测鼠标设备。   </p>
<p>–test 测试模式，不会改变任何设置。</p>
<h3 id="ntsysv"><a href="#ntsysv" class="headerlink" title="***ntsysv"></a>***ntsysv</h3><p><strong>功能说明</strong>:设置系统的各种服务。  </p>
<p><strong>语法</strong>:ntsysv [–back][–level &lt;等级代号&gt;]  </p>
<p><strong>补充说明</strong>:这是Red Hat公司遵循GPL规则所开发的程序，它具有互动式操作界面，您可以轻易地利用方向键和空格键等，开启，关闭操作系统在每个执行等级中，所要执行的系统服务。  </p>
<p><strong>参数</strong>:  </p>
<p>–back 在互动式界面里，显示Back钮，而非Cancel钮。   </p>
<p>–level &lt;等级代号&gt; 在指定的执行等级中，决定要开启或关闭哪些系统服务。</p>
<h3 id="passwd"><a href="#passwd" class="headerlink" title="***passwd"></a>***passwd</h3><p><strong>功能说明</strong>:设置密码。  </p>
<p><strong>语法</strong>:passwd [-dklS][-u &lt;-f&gt;][用户名称]  </p>
<p><strong>补充说明</strong>:passwd指令让用户可以更改自己的密码，而系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。  </p>
<p><strong>参数</strong>:  </p>
<p>-d 删除密码。本参数仅有系统管理者才能使用。   </p>
<p>-f 强制执行。   </p>
<p>-k 设置只有在密码过期失效后，方能更新。   </p>
<p>-l 锁住密码。   </p>
<p>-s 列出密码的相关信息。本参数仅有系统管理者才能使用。   </p>
<p>-u 解开已上锁的帐号。 </p>
<h3 id="pwconv"><a href="#pwconv" class="headerlink" title="***pwconv"></a>***pwconv</h3><p><strong>功能说明</strong>:开启用户的投影密码。  </p>
<p><strong>语法</strong>:pwconv  </p>
<p><strong>补充说明</strong>:Linux系统里的用户和群组密码，分别存放在名称为passwd和group的文件中，　这两个文件位于&#x2F;etc目录下。因系统运作所需，任何人都得以读取它们，造成安全上的破绽。投影密码将文件内的密码改存在&#x2F;etc目录下的shadow和gshadow文件内，只允许系统管理者读取，同时把原密码置换为”x”字符，有效的强化了系统的安全性。</p>
<h3 id="pwunconv"><a href="#pwunconv" class="headerlink" title="***pwunconv"></a>***pwunconv</h3><p><strong>功能说明</strong>:关闭用户的投影密码。  </p>
<p><strong>语法</strong>:pwunconv  </p>
<p><strong>补充说明</strong>:执行pwunconv指令可以关闭用户投影密码，它会把密码从shadow文件内，重回存到passwd文件里。</p>
<h3 id="rdate"><a href="#rdate" class="headerlink" title="***rdate"></a>***rdate</h3><p><strong>功能说明</strong>:显示其他主机的日期与时间。  </p>
<p><strong>语法</strong>:rdate [-ps][主机名称或IP地址…]  </p>
<p><strong>补充说明</strong>:执行rdate指令，向其他主机询问系统时间并显示出来。  </p>
<p><strong>参数</strong>: </p>
<p>-p 显示远端主机的日期与时间。   </p>
<p>-s 把从远端主机收到的日期和时间，回存到本地主机的系统时间。</p>
<h3 id="resize"><a href="#resize" class="headerlink" title="***resize"></a>***resize</h3><p><strong>功能说明</strong>:设置终端机视窗的大小。  </p>
<p><strong>语法</strong>:resize [-cu][-s &lt;列数&gt; &lt;行数&gt;]  </p>
<p><strong>补充说明</strong>:执行resize指令可设置虚拟终端机的视窗大小。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c 就算用户环境并非C Shell，也用C Shell指令改变视窗大小。  　</p>
<p>-s &lt;列数&gt; &lt;行数&gt; 设置终端机视窗的垂直高度和水平宽度。  　</p>
<p>-u 就算用户环境并非Bourne Shell，也用Bourne Shell指令改变视窗大小。</p>
<h3 id="rmmod"><a href="#rmmod" class="headerlink" title="***rmmod"></a>***rmmod</h3><p><strong>功能说明</strong>:删除模块。  </p>
<p><strong>语法</strong>:rmmod [-as][模块名称…]  </p>
<p><strong>补充说明</strong>:执行rmmod指令，可删除不需要的模块。Linux操作系统的核心具有模块化的特性，应此在编译核心时，务须把全部的功能都放如核心。你可以将这些功能编译成一个个单独的模块，待有需要时再分别载入它们。  </p>
<p><strong>参数</strong>:  </p>
<p>-a 删除所有目前不需要的模块。   </p>
<p>-s 把信息输出至syslog常驻服务，而非终端机界面。</p>
<h3 id="rpm"><a href="#rpm" class="headerlink" title="***rpm"></a>***rpm</h3><p><strong>功能说明</strong>:管理套件。  </p>
<p><strong>语法</strong>:rpm [-acdhilqRsv][-b&lt;完成阶段&gt;&lt;套间档&gt;+][-e&lt;套件挡&gt;][-f&lt;文件&gt;+][-i&lt;套件档&gt;][-p&lt;套件档&gt;＋][-U&lt;套件档&gt;][-vv][–addsign&lt;套件档&gt;+][–allfiles][–allmatches][–badreloc][–buildroot&lt;根目录&gt;][–changelog][–checksig&lt;套件档&gt;+][–clean][–dbpath&lt;数据库目录&gt;][–dump][–excludedocs][–excludepath&lt;排除目录&gt;][–force][–ftpproxy&lt;主机名称或IP地址&gt;][–ftpport&lt;通信端口&gt;][–help][–httpproxy&lt;主机名称或IP地址&gt;][–httpport&lt;通信端口&gt;][–ignorearch][–ignoreos][–ignoresize][–includedocs][–initdb][justdb][–nobulid][–nodeps][–nofiles][–nogpg][–nomd5][–nopgp][–noorder][–noscripts][–notriggers][–oldpackage][–percent][–pipe&lt;执行指令&gt;][–prefix&lt;目的目录&gt;][–provides][–queryformat&lt;档头格式&gt;][–querytags][–rcfile&lt;配置档&gt;][–rebulid&lt;套件档&gt;][–rebuliddb][–recompile&lt;套件档&gt;][–relocate&lt;原目录&gt;&#x3D;&lt;新目录&gt;][–replacefiles][–replacepkgs][–requires][–resign&lt;套件档&gt;+][–rmsource][–rmsource&lt;文件&gt;][–root&lt;根目录&gt;][–scripts][–setperms][–setugids][–short-circuit][–sign][–target&#x3D;&lt;安装平台&gt;+][–test][–timecheck&lt;检查秒数&gt;][–triggeredby&lt;套件档&gt;][–triggers][–verify][–version][–whatprovides&lt;功能特性&gt;][–whatrequires&lt;功能特性&gt;]  </p>
<p><strong>补充说明</strong>:rmp原本是Red Hat Linux发行版专门用来管理Linux各项套件的程序，由于它遵循GPL规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM套件管理方式的出现，让Linux易于安装，升级，间接提升了Linux的适用度。  </p>
<p><strong>参数</strong>:  </p>
<p>-a 查询所有套件。  </p>
<p>-b&lt;完成阶段&gt;&lt;套件档&gt;+或-t &lt;完成阶段&gt;&lt;套件档&gt;+ 设置包装套件的完成阶段，并指定套件档的文件名称。  </p>
<p>-c 只列出组态配置文件，本参数需配合”-l”参数使用。   </p>
<p>-d 只列出文本文件，本参数需配合”-l”参数使用。　   </p>
<p>-e&lt;套件档&gt;或–erase&lt;套件档&gt; 删除指定的套件。 </p>
<p>-f&lt;文件&gt;+ 查询拥有指定文件的套件。   </p>
<p>-h或–hash 套件安装时列出标记。   </p>
<p>-i 显示套件的相关信息。   </p>
<p>-i&lt;套件档&gt;或–install&lt;套件档&gt; 安装指定的套件档。   </p>
<p>-l 显示套件的文件列表。   </p>
<p>-p&lt;套件档&gt;+ 查询指定的RPM套件档。   </p>
<p>-q 使用询问模式，当遇到任何问题时，rpm指令会先询问用户。  </p>
<p>-R 显示套件的关联性信息。   -s 显示文件状态，本参数需配合”-l”参数使用。   </p>
<p>-U&lt;套件档&gt;或–upgrade&lt;套件档&gt;  升级指定的套件档。   </p>
<p>-v 显示指令执行过程。  </p>
<p>-vv 详细显示指令执行过程，便于排错。   </p>
<p>-addsign&lt;套件档&gt;+ 在指定的套件里加上新的签名认证。   </p>
<p>–allfiles 安装所有文件。   </p>
<p>–allmatches 删除符合指定的套件所包含的文件。   </p>
<p>–badreloc 发生错误时，重新配置文件。   </p>
<p>–buildroot&lt;根目录&gt; 设置产生套件时，欲当作根目录的目录。   </p>
<p>–changelog 显示套件的更改记录。   </p>
<p>–checksig&lt;套件档&gt;+ 检验该套件的签名认证。   </p>
<p>–clean 完成套件的包装后，删除包装过程中所建立的目录。  </p>
<p>–dbpath&lt;数据库目录&gt; 设置欲存放RPM数据库的目录。   </p>
<p>–dump 显示每个文件的验证信息。本参数需配合”-l”参数使用。   </p>
<p>–excludedocs 安装套件时，不要安装文件。   </p>
<p>–excludepath&lt;排除目录&gt; 忽略在指定目录里的所有文件。   </p>
<p>–force 强行置换套件或文件。  </p>
<p>–ftpproxy&lt;主机名称或IP地址&gt; 指定FTP代理服务器。   </p>
<p>–ftpport&lt;通信端口&gt; 设置FTP服务器或代理服务器使用的通信端口。   </p>
<p>–help 在线帮助。   </p>
<p>–httpproxy&lt;主机名称或IP地址&gt; 指定HTTP代理服务器。   </p>
<p>–httpport&lt;通信端口&gt; 设置HTTP服务器或代理服务器使用的通信端口。   </p>
<p>–ignorearch 不验证套件档的结构正确性。   </p>
<p>–ignoreos 不验证套件档的结构正确性。   </p>
<p>–ignoresize 安装前不检查磁盘空间是否足够。   </p>
<p>–includedocs 安装套件时，一并安装文件。   </p>
<p>–initdb 确认有正确的数据库可以使用。   </p>
<p>–justdb 更新数据库，当不变动任何文件。   </p>
<p>–nobulid 不执行任何完成阶段。   </p>
<p>–nodeps 不验证套件档的相互关联性。   </p>
<p>–nofiles 不验证文件的属性。   </p>
<p>–nogpg 略过所有GPG的签名认证。   </p>
<p>–nomd5 不使用MD5编码演算确认文件的大小与正确性。   </p>
<p>–nopgp 略过所有PGP的签名认证。   </p>
<p>–noorder 不重新编排套件的安装顺序，以便满足其彼此间的关联性。   </p>
<p>–noscripts 不执行任何安装Script文件。   </p>
<p>–notriggers 不执行该套件包装内的任何Script文件。   </p>
<p>–oldpackage 升级成旧版本的套件。  </p>
<p>–percent 安装套件时显示完成度百分比。   </p>
<p>–pipe&lt;执行指令&gt; 建立管道，把输出结果转为该执行指令的输入数据。   </p>
<p>–prefix&lt;目的目录&gt; 若重新配置文件，就把文件放到指定的目录下。  </p>
<p>–provides 查询该套件所提供的兼容度。   </p>
<p>–queryformat&lt;档头格式&gt; 设置档头的表示方式。  </p>
<p>–querytags 列出可用于档头格式的标签。   </p>
<p>–rcfile&lt;配置文件&gt; 使用指定的配置文件。   </p>
<p>–rebulid&lt;套件档&gt; 安装原始代码套件，重新产生二进制文件的套件。   </p>
<p>–rebuliddb 以现有的数据库为主，重建一份数据库。   </p>
<p>–recompile&lt;套件档&gt; 此参数的效果和指定”–rebulid”参数类似，当不产生套件档。   </p>
<p>–relocate&lt;原目录&gt;&#x3D;&lt;新目录&gt; 把本来会放到原目录下的文件改放到新目录。   </p>
<p>–replacefiles 强行置换文件。   </p>
<p>–replacepkgs 强行置换套件。   </p>
<p>–requires 查询该套件所需要的兼容度。   </p>
<p>–resing&lt;套件档&gt;+ 删除现有认证，重新产生签名认证。   </p>
<p>–rmsource 完成套件的包装后，删除原始代码。   </p>
<p>–rmsource&lt;文件&gt; 删除原始代码和指定的文件。   </p>
<p>–root&lt;根目录&gt; 设置欲当作根目录的目录。   </p>
<p>–scripts 列出安装套件的Script的变量。   </p>
<p>–setperms 设置文件的权限。   </p>
<p>–setugids 设置文件的拥有者和所属群组。   </p>
<p>–short-circuit 直接略过指定完成阶段的步骤。  </p>
<p>–sign 产生PGP或GPG的签名认证。   </p>
<p>–target&#x3D;&lt;安装平台&gt;+ 设置产生的套件的安装平台。   </p>
<p>–test 仅作测试，并不真的安装套件。   </p>
<p>–timecheck&lt;检查秒数&gt; 设置检查时间的计时秒数。   </p>
<p>–triggeredby&lt;套件档&gt; 查询该套件的包装者。   </p>
<p>–triggers 展示套件档内的包装Script。   </p>
<p>–verify 此参数的效果和指定”-q”参数相同。   </p>
<p>–version 显示版本信息。   </p>
<p>–whatprovides&lt;功能特性&gt; 查询该套件对指定的功能特性所提供的兼容度。   </p>
<p>–whatrequires&lt;功能特性&gt; 查询该套件对指定的功能特性所需要的兼容度。</p>
<h3 id="set"><a href="#set" class="headerlink" title="***set"></a>***set</h3><p><strong>功能说明</strong>:设置shell。  </p>
<p><strong>语法</strong>:set [+-abCdefhHklmnpPtuvx]  </p>
<p><strong>补充说明</strong>:set指令能设置所使用shell的执行方式，可依照不同的需求来做设置。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 标示已修改的变量，以供输出至环境变量。  　</p>
<p>-b 使被中止的后台程序立刻回报执行状态。  　</p>
<p>-C 转向所产生的文件无法覆盖已存在的文件。  　</p>
<p>-d Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。  　</p>
<p>-e 若指令传回值不等于0，则立即退出shell。　　  　</p>
<p>-f　 取消使用通配符。  　</p>
<p>-h 自动记录函数的所在位置。  　</p>
<p>-H Shell 可利用”!”加&lt;指令编号&gt;的方式来执行history中记录的指令。  　</p>
<p>-k 指令所给的参数都会被视为此指令的环境变量。  　</p>
<p>-l 记录for循环的变量名称。  　</p>
<p>-m 使用监视模式。  　</p>
<p>-n 只读取指令，而不实际执行。  　</p>
<p>-p 启动优先顺序模式。  　</p>
<p>-P 启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。  　</p>
<p>-t 执行完随后的指令，即退出shell。  　</p>
<p>-u 当执行时使用到未定义过的变量，则显示错误信息。  　</p>
<p>-v 显示shell所读取的输入值。  　</p>
<p>-x 执行指令后，会先显示该指令及所下的参数。  　</p>
<p>+&lt;参数&gt; 取消某个set曾启动的参数。</p>
<h3 id="setconsole"><a href="#setconsole" class="headerlink" title="***setconsole"></a>***setconsole</h3><p><strong>功能说明</strong>:设置系统终端。  </p>
<p><strong>语法</strong>:setconsole [video][serial][ttya][ttyb]  </p>
<p><strong>补充说明</strong>:setconsole可用来指定系统终端。  </p>
<p><strong>参数</strong>: 　</p>
<p>serial 使用PROM终端。  　</p>
<p>ttya,cua0或ttyS0 使用第１个串口设备作为终端。  　</p>
<p>ttyb,cua1或ttyS1 使用第２个串口设备作为终端。  　</p>
<p>video 使用主机上的现卡作为终端。</p>
<h3 id="setenv"><a href="#setenv" class="headerlink" title="***setenv"></a>***setenv</h3><p><strong>功能说明</strong>:查询或显示环境变量。 </p>
<p><strong>语法</strong>:setenv [变量名称][变量值]  </p>
<p><strong>补充说明</strong>:setenv为tsch中查询或设置环境变量的指令。</p>
<h3 id="setup"><a href="#setup" class="headerlink" title="***setup"></a>***setup</h3><p><strong>功能说明</strong>:设置公用程序。  </p>
<p><strong>语法</strong>:setup  </p>
<p><strong>补充说明</strong>:setup是一个设置公用程序，提供图形界面的操作方式。在setup中可设置7类的选项： 　</p>
<p>１.登陆认证方式  　</p>
<p>２.键盘组态设置  　</p>
<p>３.鼠标组态设置  　</p>
<p>４.开机时所要启动的系统服务  　</p>
<p>５.声卡组态设置  　</p>
<p>６.时区设置  　</p>
<p>７.X Windows组态设置</p>
<h3 id="sndconfig"><a href="#sndconfig" class="headerlink" title="***sndconfig"></a>***sndconfig</h3><p><strong>功能说明</strong>:设置声卡。  </p>
<p><strong>语法</strong>:sndconfig [–help][–noautoconfig][–noprobe]  </p>
<p><strong>补充说明</strong>:sndconfig为声卡设置程序，支持PnP设置，可自动检测并设置PnP声卡。  </p>
<p><strong>参数</strong>:  </p>
<p>–help 显示帮助。   </p>
<p>–noautoconfig 不自动设置PnP的声卡。   </p>
<p>–noprobe 不自动检测PnP声卡。</p>
<h3 id="SVGAText-Mode"><a href="#SVGAText-Mode" class="headerlink" title="***SVGAText Mode"></a>***SVGAText Mode</h3><p><strong>功能说明</strong>:加强文字模式的显示画面。  </p>
<p><strong>语法</strong>:SVGATextMode [-acdfhmnrsv][-t &lt;配置文件&gt;][模式]  </p>
<p><strong>补充说明</strong>:SVGATextMode可用来设置文字模式下的显示画面，包括分辨率，字体和更新频率等。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 如果新显示模式的屏幕大小与原先不同时，SVGATextMode会执行必要的系统设置。  　</p>
<p>-c 维持原有的VGA时脉。  　</p>
<p>-d 执行时会显示详细的信息，供排错时参考。  　</p>
<p>-f 不要执行配置文件中有关字体载入的指令。  　</p>
<p>-h 显示帮助。  　</p>
<p>-m 允许1x1的方式来重设屏幕大小。  　</p>
<p>-n 仅测试指定的模式。  　</p>
<p>-r 通知或重设与屏幕大小相关的程序。  　</p>
<p>-s 显示配置文件中所有可用的模式。  　</p>
<p>-t&lt;配置文件&gt; 指定配置文件。  　</p>
<p>-v SVGATextMode在配置新的显示模式时，预设会先检查垂直与水平的更新更新频率是否在配置文件所指定的范围内，如果不在范围内，则不设置新的显示模式。  　</p>
<p>模式］ [模式]参数必须是配置文件中模式的名称。</p>
<h3 id="timeconfig"><a href="#timeconfig" class="headerlink" title="***timeconfig"></a>***timeconfig</h3><p><strong>功能说明</strong>:设置时区。  </p>
<p><strong>语法</strong>:timeconfig [–arc][–back][–test][–utc][时区名称]  </p>
<p><strong>补充说明</strong>:这是Red Hat公司遵循GPL规则所开发的程序，它具有互动式操作界面，您可以轻易地利用方向键和空格键等，设置系统时间所属的时区。  </p>
<p><strong>参数</strong>: 　</p>
<p>–arc 使用Alpha硬件结构的格式存储系统时间。  　</p>
<p>–back 在互动式界面里，显示Back钮而非Cancel钮。  　</p>
<p>–test 仅作测试，并不真的改变系统的时区。  　</p>
<p>–utc 把硬件时钟上的时间视为CUT，有时也称为UTC或UCT。</p>
<h3 id="ulimit"><a href="#ulimit" class="headerlink" title="***ulimit"></a>***ulimit</h3><p><strong>功能说明</strong>:控制shell程序的资源。  </p>
<p><strong>语法</strong>:ulimit [-aHS][-c ][-d &lt;数据节区大小&gt;][-f &lt;文件大小&gt;][-m &lt;内存大小&gt;][-n &lt;文件数目&gt;][-p &lt;缓冲区大小&gt;][-s &lt;堆叠大小&gt;][-t &lt;CPU时间&gt;][-u &lt;程序数目&gt;][-v &lt;虚拟内存大小&gt;]  </p>
<p><strong>补充说明</strong>:ulimit为shell内建指令，可用来控制shell执行程序的资源。  </p>
<p><strong>参数</strong>:  </p>
<p>-a 显示目前资源限制的设定。  </p>
<p>-c &lt;core文件上限&gt; 设定core文件的最大值，单位为区块。   </p>
<p>-d &lt;数据节区大小&gt; 程序数据节区的最大值，单位为KB。   </p>
<p>-f &lt;文件大小&gt; shell所能建立的最大文件，单位为区块。   </p>
<p>-H 设定资源的硬性限制，也就是管理员所设下的限制。   </p>
<p>-m &lt;内存大小&gt; 指定可使用内存的上限，单位为KB。   </p>
<p>-n &lt;文件数目&gt; 指定同一时间最多可开启的文件数。   </p>
<p>-p &lt;缓冲区大小&gt; 指定管道缓冲区的大小，单位512字节。   </p>
<p>-s &lt;堆叠大小&gt; 指定堆叠的上限，单位为KB。   </p>
<p>-S 设定资源的弹性限制。   </p>
<p>-t &lt;CPU时间&gt; 指定CPU使用时间的上限，单位为秒。   </p>
<p>-u &lt;程序数目&gt; 用户最多可开启的程序数目。   </p>
<p>-v &lt;虚拟内存大小&gt; 指定可使用的虚拟内存上限，单位为KB。</p>
<h3 id="unalias"><a href="#unalias" class="headerlink" title="***unalias"></a>***unalias</h3><p><strong>功能说明</strong>:删除别名。  </p>
<p><strong>语法</strong>:unalias [-a][别名]  </p>
<p><strong>补充说明</strong>:unalias为shell内建指令，可删除别名设置。  </p>
<p><strong>参数</strong>:  </p>
<p>-a 删除全部的别名。</p>
<h3 id="unset"><a href="#unset" class="headerlink" title="***unset"></a>***unset</h3><p><strong>功能说明</strong>:删除变量或函数。  </p>
<p><strong>语法</strong>:unset [-fv][变量或函数名称]  </p>
<p><strong>补充说明</strong>:unset为shell内建指令，可删除变量或函数。  </p>
<p><strong>参数</strong>:  </p>
<p>-f 仅删除函数。   </p>
<p>-v 仅删除变量。</p>
<h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2><h3 id="adduser"><a href="#adduser" class="headerlink" title="***adduser"></a>***adduser</h3><p><strong>功能说明</strong>:新增用户帐号。  </p>
<p><strong>语法</strong>:adduser  </p>
<p><strong>补充说明</strong>:在Slackware中，adduser指令是个script程序，利用交谈的方式取得输入的用户帐号资料，然后再交由真正建立帐号的useradd指令建立新用户，如此可方便管理员建立用户帐号。在Red Hat Linux中，adduser指令则是useradd指令的符号连接，两者实际上是同一个指令。</p>
<h3 id="chfn"><a href="#chfn" class="headerlink" title="***chfn"></a>***chfn</h3><p><strong>功能说明</strong>:改变finger指令显示的信息。  </p>
<p><strong>语法</strong>:chfn [-f &lt;真实姓名&gt;][-h &lt;家中电话&gt;][-o &lt;办公地址&gt;][-p &lt;办公电话&gt;][-uv][帐号名称]  </p>
<p><strong>补充说明</strong>:chfn指令可用来更改执行finger指令时所显示的信息，这些信息都存放在&#x2F;etc目录里的asswd文件里。若不指定任何参数，则chfn指令会进入问答式界面。  </p>
<p><strong>参数</strong>: 　</p>
<p>-f&lt;真实姓名&gt;或–full-name&lt;真实姓名&gt; 设置真实姓名。  　</p>
<p>-h&lt;家中电话&gt;或–home-phone&lt;家中电话&gt; 设置家中的电话号码。  　</p>
<p>-o&lt;办公地址&gt;或–office&lt;办公地址&gt; 设置办公室的地址。  　</p>
<p>-p&lt;办公电话&gt;或–office-phone&lt;办公电话&gt; 设置办公室的电话号码。  　</p>
<p>-u或–help 在线帮助。  　</p>
<p>-v或-version 显示版本信息。</p>
<h3 id="chsh"><a href="#chsh" class="headerlink" title="***chsh"></a>***chsh</h3><p><strong>功能说明</strong>:更换登入系统时使用的shell。 </p>
<p> <strong>语法</strong>:chsh [-luv][-s ][用户名称]  </p>
<p><strong>补充说明</strong>:每位用户在登入系统时，都会拥有预设的shell环境，这个指令可更改其预设值。若不指定 任何参数与用户名称，则chsh会以应答的方式进行设置。  </p>
<p><strong>参数</strong>: 　</p>
<p>-s&lt;shell 名称&gt;或–shell&lt;shell 名称&gt; 更改系统预设的shell环境。  　</p>
<p>-l或–list-shells 列出目前系统可用的shell清单。  　</p>
<p>-u或–help 在线帮助。  　</p>
<p>-v或-version 显示版本信息。</p>
<h3 id="date"><a href="#date" class="headerlink" title="***date"></a>***date</h3><p><strong>功能说明</strong>:显示或设置系统时间与日期。  </p>
<p><strong>语法</strong>:date [-d &lt;字符串&gt;][-u][+%H%I%K%l%M%P%r%s%S%T%X%Z%a%A%b%B%c%d%D%j%m%U%w%x%y%Y%n%t] 或date [-s &lt;字符串&gt;][-u][MMDDhhmmCCYYss] 或 date [–help][–version]  </p>
<p><strong>补充说明</strong>:第一种语法可用来显示系统日期或时间，以%为开头的参数为格式参数，可指定日期或时间的显示格式。第二种语法可用来设置系统日期与时间。只有管理员才有设置日期与时间的权限。若不加任何参数，data会显示目前的日期与时间。  </p>
<p><strong>参数</strong>: 　</p>
<p>%H 小时(以00-23来表示)。  　</p>
<p>%I 小时(以01-12来表示)。  　</p>
<p>%K 小时(以0-23来表示)。  　</p>
<p>%l 小时(以0-12来表示)。  　</p>
<p>%M 分钟(以00-59来表示)。  　</p>
<p>%P AM或PM。  　</p>
<p>%r 时间(含时分秒，小时以12小时AM&#x2F;PM来表示)。  　</p>
<p>%s 总秒数。起算时间为1970-01-01 00:00:00 UTC。  　</p>
<p>%S 秒(以本地的惯用法来表示)。  　</p>
<p>%T 时间(含时分秒，小时以24小时制来表示)。  　</p>
<p>%X 时间(以本地的惯用法来表示)。  　</p>
<p>%Z 市区。  　</p>
<p>%a 星期的缩写。  　</p>
<p>%A 星期的完整名称。  　</p>
<p>%b 月份英文名的缩写。  　</p>
<p>%B 月份的完整英文名称。  　</p>
<p>%c 日期与时间。只输入date指令也会显示同样的结果。  　</p>
<p>%d 日期(以01-31来表示)。  　</p>
<p>%D 日期(含年月日)。  　</p>
<p>%j 该年中的第几天。  　</p>
<p>%m 月份(以01-12来表示)。  　</p>
<p>%U 该年中的周数。  　</p>
<p>%w 该周的天数，0代表周日，1代表周一，异词类推。  　</p>
<p>%x 日期(以本地的惯用法来表示)。  　</p>
<p>%y 年份(以00-99来表示)。  　</p>
<p>%Y 年份(以四位数来表示)。  　</p>
<p>%n 在显示时，插入新的一行。  　</p>
<p>%t 在显示时，插入tab。  　</p>
<p>MM 月份(必要)。  　</p>
<p>DD 日期(必要)。  　</p>
<p>hh 小时(必要)。  　</p>
<p>mm 分钟(必要)。  　</p>
<p>CC 年份的前两位数(选择性)。  </p>
<p>YY 年份的后两位数(选择性)。  　</p>
<p>ss 秒(选择性)。  　</p>
<p>-d&lt;字符串&gt; 显示字符串所指的日期与时间。字符串前后必须加上双引号。  　</p>
<p>-s&lt;字符串&gt; 根据字符串来设置日期与时间。字符串前后必须加上双引号。  　</p>
<p>-u 显示GMT。  　</p>
<p>–help 在线帮助。  　<br>–version 显示版本信息。</p>
<h3 id="exit"><a href="#exit" class="headerlink" title="***exit"></a>***exit</h3><p><strong>功能说明</strong>:退出目前的shell。  </p>
<p><strong>语法</strong>:exit [状态值] </p>
<p><strong>补充说明</strong>:执行exit可使shell以指定的状态值退出。若不设置状态值参数，则shell以预设值退出。状态值0代表执行成功，其他值代表执行失败。exit也可用在script，离开正在执行的script，回到shell。</p>
<h3 id="finger"><a href="#finger" class="headerlink" title="***finger"></a>***finger</h3><p><strong>功能说明</strong>:查找并显示用户信息。  </p>
<p><strong>语法</strong>:finger [-lmsp][帐号名称…]  </p>
<p><strong>补充说明</strong>:finger指令会去查找，并显示指定帐号的用户相关信息，包括本地与远端主机的用户皆可，帐号名称没有大小写的差别。单独执行finger指令，它会显示本地主机现在所有的用户的登陆信息，包括帐号名称，真实姓名，登入终端机，闲置时间，登入时间以及地址和电话。  </p>
<p><strong>参数</strong>:  </p>
<p>-l 列出该用户的帐号名称，真实姓名，用户专属目录，登入所用的Shell，登入时间，转信地址，电子邮件状态，还有计划文件和方案文件内容。   </p>
<p>-m 排除查找用户的真实姓名。  </p>
<p>-s 列出该用户的帐号名称，真实姓名，登入终端机，闲置时间，登入时间以及地址和电话。  </p>
<p> -p 列出该用户的帐号名称，真实姓名，用户专属目录，登入所用的Shell，登入时间，转信地址，电子邮件状态，但不显示该用户的计划文件和方案文件内容。</p>
<h3 id="free"><a href="#free" class="headerlink" title="***free"></a>***free</h3><p><strong>功能说明</strong>:显示内存状态。  </p>
<p><strong>语法</strong>: free [-bkmotV][-s &lt;间隔秒数&gt;]  </p>
<p><strong>补充说明</strong>:free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及系统核心使用的缓冲区等。  </p>
<p><strong>参数</strong>: 　</p>
<p>-b 以Byte为单位显示内存使用情况。  　</p>
<p>-k 以KB为单位显示内存使用情况。  　</p>
<p>-m 以MB为单位显示内存使用情况。  　</p>
<p>-o 不显示缓冲区调节列。  　</p>
<p>-s&lt;间隔秒数&gt; 持续观察内存使用状况。  　</p>
<p>-t 显示内存总和列。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="fwhois"><a href="#fwhois" class="headerlink" title="***fwhois"></a>***fwhois</h3><p><strong>功能说明</strong>:查找并显示用户信息。  </p>
<p><strong>语法</strong>:fwhios [帐号名称] </p>
<p><strong>补充说明</strong>:本指令的功能有点类似finger指令，它会去查找并显示指定帐号的用户相关信息。不同之处在于fwhois指令是到Network Solutions的WHOIS数据库去查找，该帐号名称必须有在上面注册才能寻获，且名称没有大小写的差别。</p>
<h3 id="gitps"><a href="#gitps" class="headerlink" title="***gitps"></a>***gitps</h3><p><strong>功能说明</strong>:报告程序状况。  </p>
<p><strong>语法</strong>:gitps [acefgjlnrsSTuvwxX][p &lt;程序识别码&gt;][t &lt;终端机编号&gt;][U &lt;帐号名称&gt;]  </p>
<p><strong>补充说明</strong>:gitps是用来报告并管理程序执行的指令，基本上它就是通过ps指令来报告，管理程序，也能通过gitps指令随时中断，删除不必要的程序。因为gitps指令会去执行ps指令，所以其参数和ps指令相当类似。  </p>
<p><strong>参数</strong>: 　</p>
<p>a 显示　现行终端机下的所有程序，包括其他用户的程序。  　</p>
<p>c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或是常驻服务的标示．  　</p>
<p>e 列出程序时，显示每个程序所使用的环境变量。  　</p>
<p>f 用ASCII字符显示树状结构，表达程序间的相互关系。  　</p>
<p>g 显示现行终端机下的所有程序，包括群组领导者的程序。  　</p>
<p>j 采用工作控制的格式来显示程序状况。  　</p>
<p>l 采用纤细的格式来显示程序状况。  　</p>
<p>n 以数字来表示USER和WCHAN栏位。  　</p>
<p>p&lt;程序识别码&gt; 指定程序识别码，并列出该程序的状况。  　</p>
<p>r 只列出现行终端机正在执行中的程序。  　</p>
<p>s 采用程序信号的格式显示程序状况。  　</p>
<p>S 列出程序时，包括已中断的子程序信息。  　</p>
<p>t&lt;终端机机标号&gt; 指定终端机编号，并列出属于该终端机的程序的状况。  　</p>
<p>T 显示现行终端机下的所有程序。  　</p>
<p>u 以用户为主的格式来显示程序状况。  　</p>
<p>U&lt;帐号名称&gt; 列出属于该用户的程序的状况。  　</p>
<p>v 采用虚拟内存的格式显示程序状况。  　</p>
<p>w 采用宽阔的格式来显示程序状况。  　</p>
<p>x 显示所有程序，不以终端机来区分。  　</p>
<p>X 采用旧试的Linux i386登陆格式显示程序状况。</p>
<h3 id="groupdel"><a href="#groupdel" class="headerlink" title="***groupdel"></a>***groupdel</h3><p><strong>功能说明</strong>:删除群组。  </p>
<p><strong>语法</strong>:groupdel [群组名称]  </p>
<p><strong>补充说明</strong>:需要从系统上删除群组时，可用groupdel指令来完成这项工作。倘若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>
<h3 id="groupmod"><a href="#groupmod" class="headerlink" title="***groupmod"></a>***groupmod</h3><p><strong>功能说明</strong>:更改群组识别码或名称。  </p>
<p><strong>语法</strong>:groupmod [-g &lt;群组识别码&gt; &lt;-o&gt;][-n &lt;新群组名称&gt;][群组名称]  </p>
<p><strong>补充说明</strong>: 需要更改群组的识别码或名称时，可用groupmod指令来完成这项工作。  </p>
<p><strong>参数</strong>: 　</p>
<p>-g &lt;群组识别码&gt; 设置欲使用的群组识别码。  　</p>
<p>-o 重复使用群组识别码。  　</p>
<p>-n &lt;新群组名称&gt; 设置欲使用的群组名称。 </p>
<h3 id="halt"><a href="#halt" class="headerlink" title="***halt"></a>***halt</h3><p><strong>功能说明</strong>:关闭系统。  </p>
<p><strong>语法</strong>:halt [-dfinpw]  </p>
<p><strong>补充说明</strong>:halt会先检测系统的runlevel。若runlevel为0或6，则关闭系统，否则即调用shutdown来关闭系统。  </p>
<p><strong>参数</strong>:  </p>
<p>-d 不要在wtmp中记录。   </p>
<p>-f 不论目前的runlevel为何，不调用shutdown即强制关闭系统。   </p>
<p>-i 在halt之前，关闭全部的网络界面。   </p>
<p>-n halt前，不用先执行sync。   </p>
<p>-p halt之后，执行poweroff。   </p>
<p>-w 仅在wtmp中记录，而不实际结束系统。</p>
<h3 id="id"><a href="#id" class="headerlink" title="***id"></a>***id</h3><p><strong>功能说明</strong>:显示用户的ID，以及所属群组的ID。  </p>
<p><strong>语法</strong>:id [-gGnru][–help][–version][用户名称]  </p>
<p><strong>补充说明</strong>:id会显示用户以及所属群组的实际与有效ID。若两个ID相同，则仅显示实际ID。若仅指定用户名称，则显示目前用户的ID。  </p>
<p><strong>参数</strong>: 　</p>
<p>-g或–group 显示用户所属群组的ID。  　</p>
<p>-G或–groups 显示用户所属附加群组的ID。  　</p>
<p>-n或–name 显示用户，所属群组或附加群组的名称。  　</p>
<p>-r或–real 显示实际ID。  　</p>
<p>-u或–user 显示用户ID。  　</p>
<p>-help 显示帮助。  　</p>
<p>-version 显示版本信息。</p>
<h3 id="kill"><a href="#kill" class="headerlink" title="***kill"></a>***kill</h3><p><strong>功能说明</strong>:删除执行中的程序或工作。  </p>
<p><strong>语法</strong>:kill [-s &lt;信息名称或编号&gt;][程序]　或　kill [-l &lt;信息编号&gt;]  </p>
<p><strong>补充说明</strong>:kill可将指定的信息送至程序。预设的信息为SIGTERM(15)，可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或jobs指令查看。  </p>
<p><strong>参数</strong>: 　</p>
<p>-l &lt;信息编号&gt; 若不加&lt;信息编号&gt;选项，则-l参数会列出全部的信息名称。  　</p>
<p>-s &lt;信息名称或编号&gt; 指定要送出的信息。  　</p>
<p>[程序] [程序]可以是程序的PID或是PGID，也可以是工作编号。</p>
<h3 id="last"><a href="#last" class="headerlink" title="***last"></a>***last</h3><p><strong>功能说明</strong>:列出目前与过去登入系统的用户相关信息。 </p>
<p> <strong>语法</strong>:last [-adRx][-f &lt;记录文件&gt;][-n &lt;显示列数&gt;][帐号名称…][终端机编号…]  </p>
<p><strong>补充说明</strong>:单独执行last指令，它会读取位于&#x2F;var&#x2F;log目录下，名称为wtmp的文件，并把该给文件的内容记录的登入系统的用户名单全部显示出来。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 把从何处登入系统的主机名称或IP地址，显示在最后一行。  　</p>
<p>-d 将IP地址转换成主机名称。  　</p>
<p>-f &lt;记录文件&gt; 指定记录文件。  　</p>
<p>-n &lt;显示列数&gt;或-&lt;显示列数&gt; 设置列出名单的显示列数。  　</p>
<p>-R 不显示登入系统的主机名称或IP地址。  　</p>
<p>-x 显示系统关机，重新开机，以及执行等级的改变等信息。</p>
<h3 id="lastb"><a href="#lastb" class="headerlink" title="***lastb"></a>***lastb</h3><p><strong>功能说明</strong>:列出登入系统失败的用户相关信息。  </p>
<p><strong>语法</strong>:lastb [-adRx][-f &lt;记录文件&gt;][-n &lt;显示列数&gt;][帐号名称…][终端机编号…]  </p>
<p><strong>补充说明</strong>:单独执行lastb指令，它会读取位于&#x2F;var&#x2F;log目录下，名称为btmp的文件，并把该文件内容 记录的登入失败的用户名单，全部显示出来。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 把从何处登入系统的主机名称或IP地址显示在最后一行。  　</p>
<p>-d 将IP地址转换成主机名称。  　</p>
<p>-f&lt;记录文件&gt; 指定记录文件。  　</p>
<p>-n&lt;显示列数&gt;或-&lt;显示列数&gt; 设置列出名单的显示列数。  　</p>
<p>-R 不显示登入系统的主机名称或IP地址。  　</p>
<p>-x 显示系统关机，重新开机，以及执行等级的改变等信息。</p>
<h3 id="login"><a href="#login" class="headerlink" title="***login"></a>***login</h3><p><strong>功能说明</strong>:登入系统。  </p>
<p><strong>语法</strong>:login  </p>
<p><strong>补充说明</strong>:login指令让用户登入系统，您亦可通过它的功能随时更换登入身份。在Slackware发行版中 ，您可在指令后面附加欲登入的用户名称，它会直接询问密码，等待用户输入。当&#x2F;etc目录里含名称为nologin的文件时，系统只root帐号登入系统，其他用户一律不准登入。</p>
<h3 id="logname"><a href="#logname" class="headerlink" title="***logname"></a>***logname</h3><p><strong>功能说明</strong>:显示用户名称。  </p>
<p><strong>语法</strong>:logname [–help][–version]  </p>
<p><strong>补充说明</strong>:执行logname指令，它会显示目前用户的名称。  </p>
<p><strong>参数</strong>: </p>
<p>–help 在线帮助。  　</p>
<p>–vesion 显示版本信息。</p>
<h3 id="logout"><a href="#logout" class="headerlink" title="***logout"></a>***logout</h3><p><strong>功能说明</strong>:退出系统。  </p>
<p><strong>语法</strong>:logout  </p>
<p><strong>补充说明</strong>:logout指令让用户退出系统，其功能和login指令相互对应。</p>
<h3 id="logrotate"><a href="#logrotate" class="headerlink" title="***logrotate"></a>***logrotate</h3><p><strong>功能说明</strong>:管理记录文件。  </p>
<p><strong>语法</strong>:logrotate [-?dfv][-s &lt;状态文件&gt;][–usage][配置文件] </p>
<p><strong>补充说明</strong>:使用logrotate指令，可让你轻松管理系统所产生的记录文件。它提供自动替换，压缩，删除和邮寄记录文件，每个记录文件都可被设置成每日，每周或每月处理，也能在文件太大时立即处理。您必须自行编辑，指定配置文件，预设的配置文件存放在&#x2F;etc目录下，文件名称为logrotate.conf。  </p>
<p><strong>参数</strong>: 　</p>
<p>-?或–help 在线帮助。  　</p>
<p>-d或–debug 详细显示指令执行过程，便于排错或了解程序执行的情况。  　</p>
<p>-f或–force 强行启动记录文件维护操作，纵使logrotate指令认为没有需要亦然。  　</p>
<p>-s&lt;状态文件&gt;或–state&#x3D;&lt;状态文件&gt; 使用指定的状态文件。  　</p>
<p>-v或–version 显示指令执行过程。  　</p>
<p>-usage 显示指令基本用法。</p>
<h3 id="newgrp"><a href="#newgrp" class="headerlink" title="***newgrp"></a>***newgrp</h3><p><strong>功能说明</strong>:登入另一个群组。  </p>
<p><strong>语法</strong>:newgrp [群组名称]  </p>
<p><strong>补充说明</strong>:newgrp指令类似login指令，当它是以相同的帐号，另一个群组名称，再次登入系统。欲使用newgrp指令切换群组，您必须是该群组的用户，否则将无法登入指定的群组。单一用户要同时隶属多个群组，需利用交替用户的设置。若不指定群组名称，则newgrp指令会登入该用户名称的预设群组。</p>
<h3 id="nice"><a href="#nice" class="headerlink" title="***nice"></a>***nice</h3><p><strong>功能说明</strong>:设置优先权。  </p>
<p><strong>语法</strong>:nice [-n &lt;优先等级&gt;][–help][–version][执行指令]  </p>
<p><strong>补充说明</strong>:nice指令可以改变程序执行的优先权等级。  </p>
<p><strong>参数</strong>: 　</p>
<p>-n&lt;优先等级&gt;或-&lt;优先等级&gt;或–adjustment&#x3D;&lt;优先等级&gt; 设置欲执行的指令的优先权等级。等级的范围从-20－19，其中-20最高，19最低，只有系统管理者可以设置负数的等级。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="procinfo"><a href="#procinfo" class="headerlink" title="***procinfo"></a>***procinfo</h3><p><strong>功能说明</strong>:显示系统状态。  </p>
<p><strong>语法</strong>:procinfo [-abdDfhimsSv][-F &lt;输出文件&gt;][-n &lt;间隔秒数&gt;]  </p>
<p><strong>补充说明</strong>:procinfo指令从&#x2F;proc目录里读取相关数据，将数据妥善整理过后输出到标准输出设备。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 显示所有信息。  　</p>
<p>-b 显示磁盘设备的区块数目，而非存取数目。  　</p>
<p>-d 显示系统信息每秒间的变化差额，而非总和的数值。本参数必须配合”-f”参数使用  　</p>
<p>-D 此参数效果和指定”-d”参数类似，但内存和交换文件的信息为总和数值。  　</p>
<p>-f 进入全画面的互动式操作界面。  　</p>
<p>-F&lt;输出文件&gt; 把信息状态输出到文件保存起来，而非预设的标准输出设备。  　</p>
<p>-h 在线帮助。  　</p>
<p>-i 显示完整的IRP列表。  　</p>
<p>-m 显示系统模块和外围设备等相关信息。  　</p>
<p>-n间隔秒数&gt; 设置全画面互动模式的信息更新速度，单位以秒计算。  　</p>
<p>-s 显示系统的内存，磁盘空间，IRP和DMA等信息，此为预设值。  　</p>
<p>-S 搭配参数”-d”或”-D”使用时，每秒都会更新信息，不论是否有使用参数”-n”。  　</p>
<p>-v 显示版本信息。</p>
<h3 id="ps"><a href="#ps" class="headerlink" title="***ps"></a>***ps</h3><p><strong>功能说明</strong>:报告程序状况。  </p>
<p><strong>语法</strong>:ps [-aAcdefHjlmNVwy][acefghLnrsSTuvxX][-C &lt;指令名称&gt;][-g &lt;群组名称&gt;][-G &lt;群组识别码&gt;][-p &lt;程序识别码&gt;][p &lt;程序识别码&gt;][-s &lt;阶段作业&gt;][-t &lt;终端机编号&gt;][t &lt;终端机编号&gt;][-u &lt;用户识别码&gt;][-U &lt;用户识别码&gt;][U &lt;用户名称&gt;][-&lt;程序识别码&gt;][–cols &lt;每列字符数&gt;][–columns &lt;每列字符数&gt;][–cumulative][–deselect][–forest][–headers][–help][–info][–lines &lt;显示列数&gt;][–no-headers][–group &lt;群组名称&gt;][-Group &lt;群组识别码&gt;][–pid &lt;程序识别码&gt;][–rows &lt;显示列数&gt;][–sid &lt;阶段作业&gt;][–tty &lt;终端机编号&gt;][–user &lt;用户名称&gt;][–User &lt;用户识别码&gt;][–version][–width &lt;每列字符数&gt;]  </p>
<p><strong>补充说明</strong>:ps是用来报告程序执行状况的指令，您可以搭配kill指令随时中断，删除不必要的程序。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 显示所有终端机下执行的程序，除了阶段作业领导者之外。  　</p>
<p>a 显示现行终端机下的所有程序，包括其他用户的程序。  　</p>
<p>-A 显示所有程序。  　</p>
<p>-c 显示CLS和PRI栏位。  　</p>
<p>c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。  　</p>
<p>-C&lt;指令名称&gt; 指定执行指令的名称，并列出该指令的程序的状况。  　</p>
<p>-d 显示所有程序，但不包括阶段作业领导者的程序。  　</p>
<p>-e 此参数的效果和指定”A”参数相同。  　</p>
<p>e 列出程序时，显示每个程序所使用的环境变量。  　</p>
<p>-f 显示UID,PPIP,C与STIME栏位。  　</p>
<p>f 用ASCII字符显示树状结构，表达程序间的相互关系。  　</p>
<p>-g&lt;群组名称&gt; 此参数的效果和指定”-G”参数相同，当亦能使用阶段作业领导者的名称来指定。  　</p>
<p>g 显示现行终端机下的所有程序，包括群组领导者的程序。  　</p>
<p>-G&lt;群组识别码&gt; 列出属于该群组的程序的状况，也可使用群组名称来指定。  　</p>
<p>h 不显示标题列。  　</p>
<p>-H 显示树状结构，表示程序间的相互关系。  　</p>
<p>-j或j 采用工作控制的格式显示程序状况。  　</p>
<p>-l或l 采用详细的格式来显示程序状况。  　</p>
<p>L 列出栏位的相关信息。  　</p>
<p>-m或m 显示所有的执行绪。  　</p>
<p>n 以数字来表示USER和WCHAN栏位。  　</p>
<p>-N 显示所有的程序，除了执行ps指令终端机下的程序之外。  　</p>
<p>-p&lt;程序识别码&gt; 指定程序识别码，并列出该程序的状况。  　</p>
<p>p&lt;程序识别码&gt; 此参数的效果和指定”-p”参数相同，只在列表格式方面稍有差异。  　</p>
<p>r 只列出现行终端机正在执行中的程序。  　</p>
<p>-s&lt;阶段作业&gt; 指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。  　</p>
<p>s 采用程序信号的格式显示程序状况。  　</p>
<p>S 列出程序时，包括已中断的子程序资料。  　</p>
<p>-t&lt;终端机编号&gt; 指定终端机编号，并列出属于该终端机的程序的状况。  　</p>
<p>t&lt;终端机编号&gt; 此参数的效果和指定”-t”参数相同，只在列表格式方面稍有差异。  　</p>
<p>-T 显示现行终端机下的所有程序。  　</p>
<p>-u&lt;用户识别码&gt; 此参数的效果和指定”-U”参数相同。  　</p>
<p>u 以用户为主的格式来显示程序状况。  　</p>
<p>-U&lt;用户识别码&gt; 列出属于该用户的程序的状况，也可使用用户名称来指定。  　</p>
<p>U&lt;用户名称&gt; 列出属于该用户的程序的状况。  　</p>
<p>v 采用虚拟内存的格式显示程序状况。  　</p>
<p>-V或V 显示版本信息。  　</p>
<p>-w或w 采用宽阔的格式来显示程序状况。　  　</p>
<p>x 显示所有程序，不以终端机来区分。  　</p>
<p>X 采用旧式的Linux i386登陆格式显示程序状况。  　</p>
<p>-y 配合参数”-l”使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。  　</p>
<p>-&lt;程序识别码&gt; 此参数的效果和指定”p”参数相同。  　</p>
<p>–cols&lt;每列字符数&gt; 设置每列的最大字符数。  　</p>
<p>–columns&lt;每列字符数&gt; 此参数的效果和指定”–cols”参数相同。  　</p>
<p>–cumulative 此参数的效果和指定”S”参数相同。  　</p>
<p>–deselect 此参数的效果和指定”-N”参数相同。  　</p>
<p>–forest 此参数的效果和指定”f”参数相同。  　</p>
<p>–headers 重复显示标题列。  　</p>
<p>–help 在线帮助。  　</p>
<p>–info 显示排错信息。  　</p>
<p>–lines&lt;显示列数&gt; 设置显示画面的列数。  　</p>
<p>–no-headers 此参数的效果和指定”h”参数相同，只在列表格式方面稍有差异。  　</p>
<p>–group&lt;群组名称&gt; 此参数的效果和指定”-G”参数相同。  　</p>
<p>–Group&lt;群组识别码&gt; 此参数的效果和指定”-G”参数相同。  　</p>
<p>–pid&lt;程序识别码&gt; 此参数的效果和指定”-p”参数相同。  　</p>
<p>–rows&lt;显示列数&gt; 此参数的效果和指定”–lines”参数相同。  　</p>
<p>–sid&lt;阶段作业&gt; 此参数的效果和指定”-s”参数相同。  　</p>
<p>–tty&lt;终端机编号&gt; 此参数的效果和指定”-t”参数相同。  　</p>
<p>–user&lt;用户名称&gt; 此参数的效果和指定”-U”参数相同。  　</p>
<p>–User&lt;用户识别码&gt; 此参数的效果和指定”-U”参数相同。  　</p>
<p>–version 此参数的效果和指定”-V”参数相同。  　</p>
<p>–widty&lt;每列字符数&gt; 此参数的效果和指定”-cols”参数相同。 </p>
<h3 id="pstree"><a href="#pstree" class="headerlink" title="***pstree"></a>***pstree</h3><p><strong>功能说明</strong>:以树状图显示程序。  </p>
<p><strong>语法</strong>:pstree [-acGhlnpuUV][-H &lt;程序识别码&gt;][&lt;程序识别码&gt;&#x2F;&lt;用户名称&gt;]  </p>
<p><strong>补充说明</strong>:pstree指令用ASCII字符显示树状结构，清楚地表达程序间的相互关系。如果不指定程序识别码或用户名称，则会把系统启动时的第一个程序视为基层，并显示之后的所有程序。若指定用户名称，便会以隶属该用户的第一个程序当作基层，然后显示该用户的所有程序。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a 显示每个程序的完整指令，包含路径，参数或是常驻服务的标示。  　</p>
<p>-c 不使用精简标示法。  　</p>
<p>-G 使用VT100终端机的列绘图字符。  　</p>
<p>-h 列出树状图时，特别标明现在执行的程序。  　</p>
<p>-H&lt;程序识别码&gt; 此参数的效果和指定”-h”参数类似，但特别标明指定的程序。  　</p>
<p>-l 采用长列格式显示树状图。  　</p>
<p>-n 用程序识别码排序。预设是以程序名称来排序。  　</p>
<p>-p 显示程序识别码。  　</p>
<p>-u 显示用户名称。  　</p>
<p>-U 使用UTF-8列绘图字符。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="reboot"><a href="#reboot" class="headerlink" title="***reboot"></a>***reboot</h3><p><strong>功能说明</strong>:重新开机。  </p>
<p><strong>语法</strong>:dreboot [-dfinw]  </p>
<p><strong>补充说明</strong>:执行reboot指令可让系统停止运作，并重新开机。  </p>
<p><strong>参数</strong>:  </p>
<p>-d 重新开机时不把数据写入记录文件&#x2F;var&#x2F;tmp&#x2F;wtmp。本参数具有”-n”参数的效果。   </p>
<p>-f 强制重新开机，不调用shutdown指令的功能。   </p>
<p>-i 在重开机之前，先关闭所有网络界面。   </p>
<p>-n 重开机之前不检查是否有未结束的程序。   </p>
<p>-w 仅做测试，并不真的将系统重新开机，只会把重开机的数据写入&#x2F;var&#x2F;log目录下的wtmp记录文件。</p>
<h3 id="renice"><a href="#renice" class="headerlink" title="***renice"></a>***renice</h3><p><strong>功能说明</strong>:调整优先权。  </p>
<p><strong>语法</strong>:renice [优先等级][-g &lt;程序群组名称&gt;…][-p &lt;程序识别码&gt;…][-u &lt;用户名称&gt;…]  </p>
<p><strong>补充说明</strong>:renice指令可重新调整程序执行的优先权等级。预设是以程序识别码指定程序调整其优先权，您亦可以指定程序群组或用户名称调整优先权等级，并修改所有隶属于该程序群组或用户的程序的优先权。等级范围从-20–19，只有系统管理者可以改变其他用户程序的优先权，也仅有系统管理者可以设置负数等级。 </p>
<p><strong>参数</strong>: 　</p>
<p>-g &lt;程序群组名称&gt; 使用程序群组名称，修改所有隶属于该程序群组的程序的优先权。  　</p>
<p>-p &lt;程序识别码&gt; 改变该程序的优先权等级，此参数为预设值。  　</p>
<p>-u &lt;用户名称&gt; 指定用户名称，修改所有隶属于该用户的程序的优先权。</p>
<h3 id="rlogin"><a href="#rlogin" class="headerlink" title="***rlogin"></a>***rlogin</h3><p><strong>功能说明</strong>:远端登入。 </p>
<p><strong>语法</strong>:rlogin [-8EL][-e &lt;脱离字符&gt;][-l &lt;用户名称&gt;][主机名称或IP地址]  </p>
<p><strong>补充说明</strong>:执行rlogin指令开启终端机阶段操作，并登入远端主机。  </p>
<p><strong>参数</strong>: 　</p>
<p>-8 允许输入8位字符数据。  　</p>
<p>-e脱离字符&gt; 设置脱离字符。  　</p>
<p>-E 滤除脱离字符。  　</p>
<p>-l用户名称&gt; 指定要登入远端主机的用户名称。  　</p>
<p>-L 使用litout模式进行远端登入阶段操作。</p>
<h3 id="rsh"><a href="#rsh" class="headerlink" title="***rsh"></a>***rsh</h3><p><strong>功能说明</strong>:远端登入的Shell。  </p>
<p><strong>语法</strong>:rsh [-dn][-l &lt;用户名称&gt;][主机名称或IP地址][执行指令]  </p>
<p><strong>补充说明</strong>:rsh提供用户环境，也就是Shell，以便指令能够在指定的远端主机上执行。  </p>
<p><strong>参数</strong>: 　</p>
<p>-d 使用Socket层级的排错功能。  　</p>
<p>-l&lt;用户名称&gt; 指定要登入远端主机的用户名称。  　</p>
<p>-n 把输入的指令号向代号为&#x2F;dev&#x2F;null的特殊外围设备。</p>
<h3 id="rwho"><a href="#rwho" class="headerlink" title="***rwho"></a>***rwho</h3><p><strong>功能说明</strong>:查看系统用户。  </p>
<p><strong>语法</strong>:rwho [-a]  </p>
<p><strong>补充说明</strong>:rwho指令的效果类似who指令，但它会显示局域网里所有主机的用户。主机必须提供rwhod常驻服务的功能，方可使用rwho指令。  </p>
<p><strong>参数</strong>:  </p>
<p>-a 列出所有的用户，包括闲置时间超过1个小时以上的用户。</p>
<h3 id="screen"><a href="#screen" class="headerlink" title="***screen"></a>***screen</h3><p><strong>功能说明</strong>:多重视窗管理程序。  </p>
<p><strong>语法</strong>:screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s <shell>][-S &lt;作业名称&gt;]  </p>
<p><strong>补充说明</strong>:screen为多重视窗管理程序。此处所谓的视窗，是指一个全屏幕的文字模式画面。通常只有在使用telnet登入主机或是使用老式的终端机时，才有可能用到screen程序。  </p>
<p><strong>参数</strong>: 　</p>
<p>-A 将所有的视窗都调整为目前终端机的大小。  　</p>
<p>-d&lt;作业名称&gt; 将指定的screen作业离线。  　</p>
<p>-h&lt;行数&gt; 指定视窗的缓冲区行数。  　</p>
<p>-m 即使目前已在作业中的screen作业，仍强制建立新的screen作业。  　</p>
<p>-r&lt;作业名称&gt; 恢复离线的screen作业。  　</p>
<p>-R 先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。  　</p>
<p>-s<shell> 指定建立新视窗时，所要执行的shell。  　</p>
<p>-S&lt;作业名称&gt; 指定screen作业的名称。  　</p>
<p>-v 显示版本信息。  　</p>
<p>-x 恢复之前离线的screen作业。  　</p>
<p>-ls或–list 显示目前所有的screen作业。  　</p>
<p>-wipe 检查目前所有的screen作业，并删除已经无法使用的screen作业。</p>
<h3 id="shutdown"><a href="#shutdown" class="headerlink" title="***shutdown"></a>***shutdown</h3><p><strong>功能说明</strong>:系统关机指令。  </p>
<p><strong>语法</strong>:shutdown [-efFhknr][-t 秒数][时间][警告信息]  </p>
<p><strong>补充说明</strong>:shutdown指令可以关闭所有程序，并依用户的需要，进行重新开机或关机的动作。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c 当执行”shutdown -h 11:50”指令时，只要按+键就可以中断关机的指令。  　</p>
<p>-f 重新启动时不执行fsck。  　</p>
<p>-F 重新启动时执行fsck。  　</p>
<p>-h 将系统关机。  　</p>
<p>-k 只是送出信息给所有用户，但不会实际关机。  　</p>
<p>-n 不调用init程序进行关机，而由shutdown自己进行。  　</p>
<p>-r shutdown之后重新启动。  　</p>
<p>-t&lt;秒数&gt; 送出警告信息和删除信息之间要延迟多少秒。  　</p>
<p>[时间] 设置多久时间后执行shutdown指令。  　</p>
<p>[警告信息] 要传送给所有登入用户的信息。</p>
<h3 id="sliplogin"><a href="#sliplogin" class="headerlink" title="***sliplogin"></a>***sliplogin</h3><p><strong>功能说明</strong>:将SLIP接口加入标准输入。  </p>
<p><strong>语法</strong>:sliplogin [用户名称]  </p>
<p><strong>补充说明</strong>:sliplogin可将SLIP接口加入标准输入，把一般终端机的连线变成SLIP连线。通常可用来建立SLIP服务器，让远端电脑以SLIP连线到服务器。sliplogin活去检查&#x2F;etc&#x2F;slip&#x2F;slip.hosts文件中是否有相同的用户名称。通过检查后，sliplogin会调用执行shell script来设置IP地址，子网掩码等网络界面环境。此shell script通常是&#x2F;etc&#x2F;slip&#x2F;slip.login。</p>
<h3 id="su"><a href="#su" class="headerlink" title="***su"></a>***su</h3><p><strong>功能说明</strong>:变更用户身份。  </p>
<p><strong>语法</strong>:su [-flmp][–help][–version][-][-c &lt;指令&gt;][-s ][用户帐号]  </p>
<p><strong>补充说明</strong>:su可让用户暂时变更登入的身份。变更时须输入所要变更的用户帐号与密码。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c&lt;指令&gt;或–command&#x3D;&lt;指令&gt; 执行完指定的指令后，即恢复原来的身份。  　</p>
<p>-f或–fast 适用于csh与tsch，使shell不用去读取启动文件。  　</p>
<p>-.-l或–login 改变身份时，也同时变更工作目录，以及HOME,SHELL,USER,LOGNAME。此外，也会变更PATH变量。  　</p>
<p>-m,-p或–preserve-environment 变更身份时，不要变更环境变量。  　</p>
<p>-s<shell>或–shell&#x3D;<shell> 指定要执行的shell。  　</p>
<p>–help 显示帮助。  　</p>
<p>–version 显示版本信息。  　</p>
<p>[用户帐号] 指定要变更的用户。若不指定此参数，则预设变更为root。</p>
<h3 id="sudo"><a href="#sudo" class="headerlink" title="***sudo"></a>***sudo</h3><p><strong>功能说明</strong>:以其他身份来执行指令。  </p>
<p><strong>语法</strong>:sudo [-bhHpV][-s ][-u &lt;用户&gt;][指令] 或 sudo [-klv]  </p>
<p><strong>补充说明</strong>:sudo可让用户以其他的身份来执行指定的指令，预设的身份为root。在&#x2F;etc&#x2F;sudoers中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。  </p>
<p><strong>参数</strong>: 　</p>
<p>-b 在后台执行指令。  　</p>
<p>-h 显示帮助。  　</p>
<p>-H 将HOME环境变量设为新身份的HOME环境变量。  　</p>
<p>-k 结束密码的有效期限，也就是下次再执行sudo时便需要输入密码。  　</p>
<p>-l 列出目前用户可执行与无法执行的指令。  　</p>
<p>-p 改变询问密码的提示符号。  　</p>
<p>-s<shell> 执行指定的shell。  　</p>
<p>-u&lt;用户&gt; 以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份。  　</p>
<p>-v 延长密码有效期限5分钟。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="suspend"><a href="#suspend" class="headerlink" title="***suspend"></a>***suspend</h3><p><strong>功能说明</strong>:暂停执行shell。  </p>
<p><strong>语法</strong>:suspend [-f]  </p>
<p><strong>补充说明</strong>:suspend为shell内建指令，可暂停目前正在执行的shell。若要恢复，则必须使用SIGCONT信息。  </p>
<p><strong>参数</strong>: </p>
<p>-f 若目前执行的shell为登入的shell，则suspend预设无法暂停此shell。若要强迫暂停登入的shell，则必须使用-f参数。</p>
<h3 id="swatch"><a href="#swatch" class="headerlink" title="***swatch"></a>***swatch</h3><p><strong>功能说明</strong>:系统监控程序。  </p>
<p><strong>语法</strong>:swatch [-A &lt;分隔字符&gt;][-c &lt;设置文件&gt;][-f &lt;记录文件&gt;][-I &lt;分隔字符&gt;][-P &lt;分隔字符&gt;][-r &lt;时间&gt;][-t &lt;记录文件&gt;]  </p>
<p><strong>补充说明</strong>:swatch可用来监控系统记录文件，并在发现特定的事件时，执行指定的动作。swatch所监控的事件以及对应事件的动作都存放在swatch的配置文件中。预设的配置文件为拥护根目录下的.swatchrc。然而在Red Hat Linux的预设用户根目录下并没有.swatchrc配置文件，您可将&#x2F;usr&#x2F;doc&#x2F;swatch-2.2&#x2F;config_files&#x2F;swatchrc.personal文件复制到用户根目录下的.swatchrc，然后修改.swatchrc所要监控的事件及执行的动作。  </p>
<p><strong>参数</strong>: 　</p>
<p>-A&lt;分隔字符&gt; 预设配置文件中，动作的分隔字符，预设为逗号。  　</p>
<p>-c设置文件&gt; 指定配置文件，而不使用预设的配置文件。  　</p>
<p>-f记录文件&gt; 检查指定的记录文件，检查完毕后不会继续监控该记录文件。  　</p>
<p>-I分隔字符&gt; 指定输入记录的分隔字符，预设为换行字符。  　</p>
<p>-P分隔字符&gt; 指定配置文件中，事件的分隔字符，预设为逗号。  　</p>
<p>-r时间&gt; 在指定的时间重新启动。  　</p>
<p>-t&lt;记录文件&gt; 检查指定的记录文件，并且会监控加入记录文件中的后继记录。</p>
<h3 id="tload"><a href="#tload" class="headerlink" title="***tload"></a>***tload</h3><p><strong>功能说明</strong>:显示系统负载状况。  </p>
<p><strong>语法</strong>:tload [-V][-d &lt;间隔秒数&gt;][-s &lt;刻度大小&gt;][终端机编号]  </p>
<p><strong>补充说明</strong>:tload指令使用ASCII字符简单地以文字模式显示系统负载状态。假设不给予终端机编号，则会在执行tload指令的终端机显示负载情形。  </p>
<p><strong>参数</strong>: 　</p>
<p>-d&lt;间隔秒数&gt; 设置tload检测系统负载的间隔时间，单位以秒计算。  　</p>
<p>-s&lt;刻度大小&gt; 设置图表的垂直刻度大小，单位以列计算。  　</p>
<p>-V 显示版本信息。</p>
<h3 id="top"><a href="#top" class="headerlink" title="***top"></a>***top</h3><p><strong>功能说明</strong>:显示，管理执行中的程序。  </p>
<p><strong>语法</strong>:top [bciqsS][d &lt;间隔秒数&gt;][n &lt;执行次数&gt;]  </p>
<p><strong>补充说明</strong>:执行top指令可显示目前正在系统中执行的程序，并通过它所提供的互动式界面，用热键加以管理。  </p>
<p><strong>参数</strong>: 　</p>
<p>b 使用批处理模式。  　</p>
<p>c 列出程序时，显示每个程序的完整指令，包括指令名称，路径和参数等相关信息。  　</p>
<p>d&lt;间隔秒数&gt; 设置top监控程序执行状况的间隔时间，单位以秒计算。  　</p>
<p>i 执行top指令时，忽略闲置或是已成为Zombie的程序。  　</p>
<p>n&lt;执行次数&gt; 设置监控信息的更新次数。  　</p>
<p>q 持续监控程序执行的状况。  　</p>
<p>s 使用保密模式，消除互动模式下的潜在危机。  　</p>
<p>S 使用累计模式，其效果类似ps指令的”-S”参数。</p>
<h3 id="uname"><a href="#uname" class="headerlink" title="***uname"></a>***uname</h3><p><strong>功能说明</strong>:显示系统信息。  </p>
<p><strong>语法</strong>:uname [-amnrsv][–help][–version]  </p>
<p><strong>补充说明</strong>:uname可显示电脑以及操作系统的相关信息。  </p>
<p><strong>参数</strong>: 　</p>
<p>-a或–all 显示全部的信息。  　</p>
<p>-m或–machine 显示电脑类型。  　</p>
<p>-n或-nodename 显示在网络上的主机名称。  　</p>
<p>-r或–release 显示操作系统的发行编号。  　</p>
<p>-s或–sysname 显示操作系统名称。  　</p>
<p>-v 显示操作系统的版本。  　</p>
<p>–help 显示帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="useradd"><a href="#useradd" class="headerlink" title="***useradd"></a>***useradd</h3><p><strong>功能说明</strong>:建立用户帐号。  </p>
<p><strong>语法</strong>:useradd [-mMnr][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-s ][-u <uid>][用户帐号] 或 useradd -D [-b][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-s ]  </p>
<p><strong>补充说明</strong>:useradd可用来建立用户帐号。帐号建好之后，再用passwd设定帐号的密码．而可用userdel删除帐号。使用useradd指令所建立的帐号，实际上是保存在&#x2F;etc&#x2F;passwd文本文件中。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c&lt;备注&gt; 加上备注文字。备注文字会保存在passwd的备注栏位中。　  　</p>
<p>-d&lt;登入目录&gt; 指定用户登入时的启始目录。  　</p>
<p>-D 变更预设值．  　</p>
<p>-e&lt;有效期限&gt; 指定帐号的有效期限。  　</p>
<p>-f&lt;缓冲天数&gt; 指定在密码过期后多少天即关闭该帐号。  　</p>
<p>-g&lt;群组&gt; 指定用户所属的群组。  　</p>
<p>-G&lt;群组&gt; 指定用户所属的附加群组。  　</p>
<p>-m 自动建立用户的登入目录。  　</p>
<p>-M 不要自动建立用户的登入目录。  　</p>
<p>-n 取消建立以用户名称为名的群组．  　</p>
<p>-r 建立系统帐号。  　</p>
<p>-s<shell>　 指定用户登入后所使用的shell。  　</p>
<p>-u<uid> 指定用户ID。</p>
<h3 id="userconf"><a href="#userconf" class="headerlink" title="***userconf"></a>***userconf</h3><p><strong>功能说明</strong>:用户帐号设置程序。  </p>
<p><strong>语法</strong>:userconf [–addgroup &lt;群组&gt;][–adduser &lt;用户ID&gt;&lt;群组&gt;&lt;用户名称&gt;][–delgroup &lt;群组&gt;][–deluser &lt;用户ID&gt;][–help]  </p>
<p><strong>补充说明</strong>:userconf实际上为linuxconf的符号连接，提供图形界面的操作方式，供管理员建立与管理各类帐号。若不加任何参数，即进入图形界面。   </p>
<p><strong>参数</strong>: 　</p>
<p>–addgroup&lt;群组&gt; 新增群组。  　</p>
<p>–adduser&lt;用户ID&gt;&lt;群组&gt;&lt;用户名称&gt;<shell> 新增用户帐号。  　</p>
<p>–delgroup&lt;群组&gt; 删除群组。  　</p>
<p>–deluser&lt;用户ID&gt; 删除用户帐号。  　</p>
<p>–help 显示帮助。</p>
<h3 id="userdel"><a href="#userdel" class="headerlink" title="***userdel"></a>***userdel</h3><p><strong>功能说明</strong>:删除用户帐号。  </p>
<p><strong>语法</strong>:userdel [-r][用户帐号]  </p>
<p><strong>补充说明</strong>:userdel可删除用户帐号与相关的文件。若不加参数，则仅删除用户帐号，而不删除相关文件。  </p>
<p><strong>参数</strong>:  </p>
<p>-f 删除用户登入目录以及目录中所有文件。</p>
<h3 id="usermod"><a href="#usermod" class="headerlink" title="***usermod"></a>***usermod</h3><p><strong>功能说明</strong>:修改用户帐号。  </p>
<p><strong>语法</strong>:usermod [-LU][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-l &lt;帐号名称&gt;][-s <shell>][-u ][用户帐号]  </p>
<p><strong>补充说明</strong>:usermod可用来修改用户帐号的各项设定。  </p>
<p><strong>参数</strong>: 　</p>
<p>-c&lt;备注&gt; 修改用户帐号的备注文字。  　</p>
<p>-d登入目录&gt; 修改用户登入时的目录。  　</p>
<p>-e&lt;有效期限&gt; 修改帐号的有效期限。  　</p>
<p>-f&lt;缓冲天数&gt; 修改在密码过期后多少天即关闭该帐号。  　</p>
<p>-g&lt;群组&gt; 修改用户所属的群组。  　</p>
<p>-G&lt;群组&gt; 修改用户所属的附加群组。  　</p>
<p>-l&lt;帐号名称&gt; 修改用户帐号名称。  　</p>
<p>-L 锁定用户密码，使密码无效。  　</p>
<p>-s<shell> 修改用户登入后所使用的shell。  　</p>
<p>-u<uid> 修改用户ID。  　</p>
<p>-U 解除密码锁定。</p>
<h3 id="vlock"><a href="#vlock" class="headerlink" title="***vlock"></a>***vlock</h3><p><strong>功能说明</strong>:锁住虚拟终端。  </p>
<p><strong>语法</strong>:vlock [-achv]  </p>
<p><strong>补充说明</strong>:执行vlock指令可锁住虚拟终端，避免他人使用。 </p>
<p> <strong>参数</strong>: 　</p>
<p>-a或–all 锁住所有的终端阶段作业，如果您在全屏幕的终端中使用本参数，则会将用键盘 　切换终端机的功能一并关闭。  　</p>
<p>-c或–current 锁住目前的终端阶段作业，此为预设值。  　</p>
<p>-h或–help 在线帮助。  　</p>
<p>-v或–version 显示版本信息。</p>
<h3 id="w"><a href="#w" class="headerlink" title="***w"></a>***w</h3><p><strong>功能说明</strong>:显示目前登入系统的用户信息。  </p>
<p><strong>语法</strong>:w [-fhlsuV][用户名称] </p>
<p><strong>补充说明</strong>:执行这项指令可得知目前登入系统的用户有那些人，以及他们正在执行的程序。单独执行w 指令会显示所有的用户，您也可指定用户名称，仅显示某位用户的相关信息。  </p>
<p><strong>参数</strong>:  </p>
<p>-f 开启或关闭显示用户从何处登入系统。   </p>
<p>-h 不显示各栏位的标题信息列。   </p>
<p>-l 使用详细格式列表，此为预设值。   </p>
<p>-s 使用简洁格式列表，不显示用户登入时间，终端机阶段作业和程序所耗费的CPU时间。   </p>
<p>-u 忽略执行程序的名称，以及该程序耗费CPU时间的信息。  </p>
<p> -V 显示版本信息。</p>
<h3 id="who"><a href="#who" class="headerlink" title="***who"></a>***who</h3><p><strong>功能说明</strong>:显示目前登入系统的用户信息。 </p>
<p><strong>语法</strong>:who [-Himqsw][–help][–version][am i][记录文件]  </p>
<p><strong>补充说明</strong>:执行这项指令可得知目前有那些用户登入系统，单独执行who指令会列出登入帐号，使用的  终端机，登入时间以及从何处登入或正在使用哪个X显示器。  </p>
<p><strong>参数</strong>: 　</p>
<p>-H或–heading 显示各栏位的标题信息列。  　</p>
<p>-i或-u或–idle 显示闲置时间，若该用户在前一分钟之内有进行任何动作，将标示成”.”号，如果该用户已超过24小时没有任何动作，则标示出”old”字符串。  　</p>
<p>-m 此参数的效果和指定”am i”字符串相同。  　</p>
<p>-q或–count 只显示登入系统的帐号名称和总人数。  　</p>
<p>-s 此参数将忽略不予处理，仅负责解决who指令其他版本的兼容性问题。  　</p>
<p>-w或-T或–mesg或–message或–writable 显示用户的信息状态栏。  　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="whoami"><a href="#whoami" class="headerlink" title="***whoami"></a>***whoami</h3><p><strong>功能说明</strong>:先似乎用户名称。  </p>
<p><strong>语法</strong>:whoami [–help][–version]  </p>
<p><strong>补充说明</strong>:显示自身的用户名称，本指令相当于执行”id -un”指令。  </p>
<p><strong>参数</strong>: 　</p>
<p>–help 在线帮助。  　</p>
<p>–version 显示版本信息。</p>
<h3 id="whois"><a href="#whois" class="headerlink" title="***whois"></a>***whois</h3><p><strong>功能说明</strong>:查找并显示用户信息。  </p>
<p><strong>语法</strong>:whois [帐号名称]  </p>
<p><strong>补充说明</strong>:whois指令会去查找并显示指定帐号的用户相关信息，因为它是到Network Solutions的WHOIS数据库去查找，所以该帐号名称必须在上面注册方能寻获，且名称没有大小写的差别。</p>
<h2 id="文档管理"><a href="#文档管理" class="headerlink" title="文档管理"></a>文档管理</h2><h3 id="col"><a href="#col" class="headerlink" title="***col"></a>***col</h3><p><strong>功能说明</strong>:过滤控制字符。  </p>
<p><strong>语法</strong>:col [-bfx][-l&lt;缓冲区列数&gt;]  </p>
<p><strong>补充说明</strong>:在许多UNIX说明文件里，都有RLF控制字符。当我们运用shell特殊字符”&gt;”和”&gt;&gt;”，把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col指令则能有效滤除这些控制字符。  </p>
<p><strong>参数</strong>:  </p>
<p>-b  过滤掉所有的控制字符，包括RLF和HRLF。  </p>
<p>-f  滤除RLF字符，但允许将HRLF字符呈现出来。 </p>
<p>-x  以多个空格字符来表示跳格字符。  </p>
<p>-l&lt;缓冲区列数&gt;  预设的内存缓冲区有128列，您可以自行指定缓冲区的大小。</p>
<h3 id="colrm"><a href="#colrm" class="headerlink" title="***colrm"></a>***colrm</h3><p><strong>功能说明</strong>:滤掉指定的行。  </p>
<p><strong>语法</strong>:colrm [开始行数编号&lt;结束行数编号&gt;]  </p>
<p><strong>补充说明</strong>:colrm指令从标准输入设备读取书记，转而输出到标准输出设备。如果不加任何参数，则该指令不会过滤任何一行。 </p>
<h3 id="comm"><a href="#comm" class="headerlink" title="***comm"></a>***comm</h3><p><strong>功能说明</strong>:比较两个已排过序的文件。 </p>
<p> <strong>语法</strong>:comm [-123][–help][–version][第1个文件][第2个文件]  </p>
<p><strong>补充说明</strong>:这项指令会一列列地比较两个已排序文件的差异，并将其结果显示出来，如果没有指定任何参数，则会把结果分成3行显示：第1行仅是在第1个文件中出现过的列，第2行是仅在第2个文件中出现过的列，第3行则是在第1与第2个文件里都出现过的列。若给予的文件名称为”-“，则comm指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-1  不显示只在第1个文件里出现过的列。  </p>
<p>-2  不显示只在第2个文件里出现过的列。  </p>
<p>-3  不显示只在第1和第2个文件里出现过的列。  </p>
<p>–help  在线帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="csplit"><a href="#csplit" class="headerlink" title="***csplit"></a>***csplit</h3><p><strong>功能说明</strong>:分割文件。  </p>
<p><strong>语法</strong>:csplit [-kqsz][-b&lt;输出格式&gt;][-f&lt;输出字首字符串&gt;][-n&lt;输出文件名位数&gt;][–help][–version][文件][范本样式…]  </p>
<p><strong>补充说明</strong>:将文件依照指定的范本样式予以切割后，分别保存成名称为xx00,xx01,xx02…的文件。若给予的文件名称为”-“，则csplit指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-b&lt;输出格式&gt;或–suffix-format&#x3D;&lt;输出格式&gt;  预设的输出格式其文件名称为xx00,xx01…等，您可以通过改变&lt;输出格式&gt;来改变输出的文件名。  </p>
<p>-f&lt;输出字首字符串&gt;或–prefix&#x3D;&lt;输出字首字符串&gt;  预设的输出字首字符串其文件名为xx00,xx01…等，如果你指定输出字首字符串为”hello”，则输出的文件名称会变成hello00,hello01…等。  </p>
<p>-k或–keep-files  保留文件，就算发生错误或中断执行，也不能删除已经输出保存的文件。 </p>
<p>-n&lt;输出文件名位数&gt;或–digits&#x3D;&lt;输出文件名位数&gt;  预设的输出文件名位数其文件名称为xx00,xx01…等，如果你指定输出文件名位数为”3”，则输出的文件名称会变成xx000,xx001…等。  </p>
<p>-q或-s或–quiet或–silent  不显示指令执行过程。  </p>
<p>-z或–elide-empty-files  删除长度为0 Byte文件。  </p>
<p>–help  在线帮助。 </p>
<p> –version  显示版本信息。</p>
<h3 id="ed"><a href="#ed" class="headerlink" title="***ed"></a>***ed</h3><p><strong>功能说明</strong>:文本编辑器。  </p>
<p><strong>语法</strong>:ed [-][-Gs][-p&lt;字符串&gt;][–help][–version][文件]  </p>
<p><strong>补充说明</strong>:ed是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作。 </p>
<p> <strong>参数</strong>:  </p>
<p>-G或–traditional  提供回兼容的功能。  </p>
<p>-p&lt;字符串&gt;  指定ed在command mode的提示字符。  </p>
<p>-s,-,–quiet或–silent  不执行开启文件时的检查功能。  </p>
<p>–help  显示帮助。  </p>
<p>–version  显示版本信息。 </p>
<h3 id="egrep"><a href="#egrep" class="headerlink" title="***egrep"></a>***egrep</h3><p><strong>功能说明</strong>:在文件内查找指定的字符串。egrep执行效果如grep -E，使用的语法及参数可参照grep指令，与grep不同点在于解读字符串的方法，egrep是用extended regular expression语法来解读，而grep则用basic regular expression语法，extended regular expression比basic regular expression有更完整的表达规范。</p>
<h3 id="ex"><a href="#ex" class="headerlink" title="***ex"></a>***ex</h3><p><strong>功能说明</strong>:在Ex模式下启动vim文本编辑器。ex执行效果如同vi -E，使用语法及参数可参照vi指令，如要从Ex模式回到普通模式，则在vim中输入:vi或:visual即可。</p>
<h3 id="fgrep"><a href="#fgrep" class="headerlink" title="***fgrep"></a>***fgrep</h3><p><strong>功能说明</strong>:查找文件里符合条件的字符串。  </p>
<p><strong>语法</strong>:fgrep [范本样式][文件或目录…]  </p>
<p><strong>补充说明</strong>:本指令相当于执行grep指令加上参数”-F”，详见grep指令说明。</p>
<h3 id="fmt"><a href="#fmt" class="headerlink" title="***fmt"></a>***fmt</h3><p><strong>功能说明</strong>:编排文本文件。  </p>
<p><strong>语法</strong>:fmt [-cstu][-p&lt;列起始字符串&gt;][-w&lt;每列字符数&gt;][–help][–version][文件…]  </p>
<p><strong>补充说明</strong>:fmt指令会从指定的文件里读取内容，将其依照指定格式重新编排后，输出到标准输出设备。若指定的文件名为”-“，则fmt指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-c或–crown-margin  每段前两列缩排。 </p>
<p>-p&lt;列起始字符串&gt;或-prefix&#x3D;&lt;列起始字符串&gt;  仅合并含有指定字符串的列，通常运用在程序语言的注解方面。  </p>
<p>-s或–split-only  只拆开字数超出每列字符数的列，但不合并字数不足每列字符数的列。  </p>
<p>-t或–tagged-paragraph  每列前两列缩排，但第1列和第2列的缩排格式不同。  </p>
<p>-u或–uniform-spacing  每个字符之间都以一个空格字符间隔，每个句子之间则两个空格字符分隔。  </p>
<p>-w&lt;每列字符数&gt;或–width&#x3D;&lt;每列字符数&gt;或-&lt;每列字符数&gt;  设置每列的最大字符数。  </p>
<p>–help  在线帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="fold"><a href="#fold" class="headerlink" title="***fold"></a>***fold</h3><p><strong>功能说明</strong>:限制文件列宽。  </p>
<p><strong>语法</strong>:fold [-bs][-w&lt;每列行数&gt;][–help][–version][文件…]  </p>
<p><strong>补充说明</strong>:fold指令会从指定的文件里读取内容，将超过限定列宽的列加入增列字符后，输出到标准输出设备。若不指定任何文件名称，或是所给予的文件名为“-”，则fold指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-b或–bytes  以Byte为单位计算列宽，而非采用行数编号为单位。 </p>
<p>-s或–spaces  以空格字符作为换列点。 </p>
<p>-w&lt;每列行数&gt;或–width&lt;每列行数&gt;  设置每列的最大行数。  </p>
<p>–help  在线帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="grep"><a href="#grep" class="headerlink" title="***grep"></a>***grep</h3><p><strong>功能说明</strong>:查找文件里符合条件的字符串。  </p>
<p><strong>语法</strong>:grep [-abcEFGhHilLnqrsvVwxy][-A&lt;显示列数&gt;][-B&lt;显示列数&gt;][-C&lt;显示列数&gt;][-d&lt;进行动作&gt;][-e&lt;范本样式&gt;][-f&lt;范本文件&gt;][–help][范本样式][文件或目录…]  </p>
<p><strong>补充说明</strong>:grep指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设grep指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为“-”，则grep指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或–text  不要忽略二进制的数据。  </p>
<p>-A&lt;显示列数&gt;或–after-context&#x3D;&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之后的内容。  </p>
<p>-b或–byte-offset  在显示符合范本样式的那一列之前，标示出该列第一个字符的位编号。  </p>
<p>-B&lt;显示列数&gt;或–before-context&#x3D;&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前的内容。  </p>
<p>-c或–count  计算符合范本样式的列数。  </p>
<p>-C&lt;显示列数&gt;或–context&#x3D;&lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。  </p>
<p>-d&lt;进行动作&gt;或–directories&#x3D;&lt;进行动作&gt;  当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。  </p>
<p>-e&lt;范本样式&gt;或–regexp&#x3D;&lt;范本样式&gt;  指定字符串做为查找文件内容的范本样式。 </p>
<p>-E或–extended-regexp  将范本样式为延伸的普通表示法来使用。 </p>
<p>-f&lt;范本文件&gt;或–file&#x3D;&lt;范本文件&gt;  指定范本文件，其内容含有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每列一个范本样式。  </p>
<p>-F或–fixed-regexp  将范本样式视为固定字符串的列表。  </p>
<p>-G或–basic-regexp  将范本样式视为普通的表示法来使用。  </p>
<p>-h或–no-filename  在显示符合范本样式的那一列之前，不标示该列所属的文件名称。  </p>
<p>-H或–with-filename  在显示符合范本样式的那一列之前，表示该列所属的文件名称。  </p>
<p>-i或–ignore-case  忽略字符大小写的差别。  </p>
<p>-l或–file-with-matches  列出文件内容符合指定的范本样式的文件名称。  </p>
<p>-L或–files-without-match  列出文件内容不符合指定的范本样式的文件名称。  </p>
<p>-n或–line-number  在显示符合范本样式的那一列之前，标示出该列的列数编号。  </p>
<p>-q或–quiet或–silent  不显示任何信息。  </p>
<p>-r或–recursive  此参数的效果和指定“-d recurse”参数相同。  </p>
<p>-s或–no-messages  不显示错误信息。  </p>
<p>-v或–revert-match  反转查找。  </p>
<p>-V或–version  显示版本信息。  </p>
<p>-w或–word-regexp  只显示全字符合的列。  </p>
<p>-x或–line-regexp  只显示全列符合的列。  </p>
<p>-y  此参数的效果和指定“-i”参数相同。  </p>
<p>–help  在线帮助。</p>
<h3 id="ispell"><a href="#ispell" class="headerlink" title="***ispell"></a>***<strong>ispell</strong></h3><p><strong>功能说明</strong>:拼字检查程序。  </p>
<p><strong>语法</strong>:ispell [-aAbBClmMnNPStVx][-d&lt;字典文件&gt;][-L&lt;行数&gt;][-p&lt;字典文件&gt;][-w&lt;非字母字符&gt;][-W&lt;字符串长度&gt;][要检查的文件]  </p>
<p><strong>补充说明</strong>:ispell预设会使用&#x2F;usr&#x2F;lib&#x2F;ispell&#x2F;english.hash字典文件来检查文本文件。若在检查的文件中找到字典没有的词汇，ispell会建议使用的词汇，或是让你将新的词汇加入个人字典。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  当其他程序输出送到ispell时，必须使用此参数。  </p>
<p>-A  读取到”&amp;Include File&amp;”字符串时，就去检查字符串后所指定文件的内容。</p>
<p>-b  产生备份文件，文件名为.bak。  </p>
<p>-B  检查连字错误。  </p>
<p>-C  不检查连字错误。  </p>
<p>-d&lt;字典文件&gt;  指定字典文件。  </p>
<p>-l  从标准输入设备读取字符串，结束后显示拼错的词汇。  </p>
<p>-L&lt;行数&gt;  指定内文显示的行数。  </p>
<p>-m  自动考虑字尾的变化。  </p>
<p>-M  进入ispell后，在画面下方显示指令的按键。  </p>
<p>-n  检查的文件为noff或troff的格式。 </p>
<p>-N  进入ispell后，在画面下方不显示指令的按键。  </p>
<p>-p&lt;字典文件&gt;  指定个人字典文件。  </p>
<p>-P  不考虑字尾变化的情形。  </p>
<p>-S  不排序建议取代的词汇。  </p>
<p>-t  检查的文件为TeX或LaTeX的格式。  </p>
<p>-V  非ANSI标准的字符会以”M-^”的方式来显示。  </p>
<p>-w&lt;非字母字符&gt;  检查时，特别挑出含有指定的字符。 </p>
<p>-W&lt;字符串长度&gt;  不检查指定长度的词汇。  </p>
<p>-x  不要产生备份文件。</p>
<h3 id="jed"><a href="#jed" class="headerlink" title="***jed"></a>***jed</h3><p><strong>功能说明</strong>:编辑文本文件。  </p>
<p><strong>语法</strong>:jed [-2n][-batch][-f&lt;函数&gt;][-g&lt;行数&gt;][-i&lt;文件&gt;][-I&lt;文件&gt;][-s&lt;字符串&gt;][文件]  </p>
<p><strong>补充说明</strong>:Jed是以Slang所写成的程序，适合用来编辑程序原始代码。  </p>
<p><strong>参数</strong>:  </p>
<p>-2  显示上下两个编辑区。  </p>
<p>-batch  以批处理模式来执行。  </p>
<p>-f&lt;函数&gt;  执行Slang函数。  </p>
<p>-g&lt;行数&gt;  移到缓冲区中指定的行数。  </p>
<p>-i&lt;文件&gt;  将指定的文件载入缓冲区。  </p>
<p>-i&lt;文件&gt;  载入Slang原始代码文件。 </p>
<p> -n  不要载入jed.rc配置文件。  </p>
<p>-s&lt;字符串&gt;  查找并移到指定的字符串。</p>
<h3 id="joe"><a href="#joe" class="headerlink" title="***joe"></a>***joe</h3><p><strong>功能说明</strong>:编辑文本文件。  </p>
<p><strong>语法</strong>:joe [-asis][-beep][-csmode][-dopadding][-exask][-force][-help][-keepup][-lightoff][-arking][-mid][-nobackups][-nonotice][-nosta][-noxon][-orphan][-backpath&lt;目录&gt;][-columns&lt;栏位&gt;][-lines&lt;行数&gt;][-pg&lt;行数&gt;][-skiptop&lt;行数&gt;][-autoindent crlf linums overwrite rdonly wordwrap][+&lt;行数&gt;][-indentc&lt;缩排字符&gt;][-istep&lt;缩排字符数&gt;][-keymap&lt;按键配置文件&gt;][-lmargin&lt;栏数&gt;][-rmargin&lt;栏数&gt;][-tab&lt;栏数&gt;][要编辑的文件]  </p>
<p><strong>补充说明</strong>:Joe是一个功能强大的全屏幕文本编辑程序。操作的复杂度要比Pico高一点，但是功能较为齐全。Joe一次可开启多个文件，每个文件各放在一个编辑区内，并可在文件之间执行剪贴的动作。  </p>
<p><strong>参数</strong>: <strong>以下为程序参数</strong> </p>
<p> -asis  字符码超过127的字符不做任何处理。  </p>
<p>-backpath&lt;目录&gt;  指定备份文件的目录。  </p>
<p>-beep  编辑时，若有错误即发出哗声。  </p>
<p>-columns&lt;栏位&gt;  设置栏数。  </p>
<p>-csmode  可执行连续查找模式。  </p>
<p>-dopadding  是程序跟tty间存在缓冲区。  </p>
<p>-exask  在程序中，执行”Ctrl+k+x”时，会先确认是否要保存文件。  </p>
<p>-force  强制在最后一行的结尾处加上换行符号。 </p>
<p>-help  执行程序时一并显示帮助。  </p>
<p>-keepup  在进入程序后，画面上方为状态列。  </p>
<p>-lightoff  选取的区块在执行完区块命令后，就会回复成原来的状态。  </p>
<p>-lines&lt;行数&gt;  设置行数。  </p>
<p>-marking  在选取区块时，反白区块会随着光标移动。  </p>
<p>-mid  当光标移出画面时，即自动卷页，使光标回到中央。  </p>
<p>-nobackups  不建立备份文件。  </p>
<p>-nonotice  程序执行时，不显示版权信息。  </p>
<p>-nosta  程序执行时，不显示状态列。 </p>
<p>-noxon  尝试取消“Ctrl+s”与“Ctrl+q”键的功能。 </p>
<p>-orphan  若同时开启一个以上的文件，则其他文件会置于独立的缓冲区，而不会另外开启编辑区。  </p>
<p>-pg&lt;行数&gt;  按“PageUp”或“PageDown”换页时，所要保留前一页的行数。  </p>
<p>-skiptop&lt;行数&gt;  不使用屏幕上方指定的行数。 </p>
<p><strong>以下为文件参数</strong>  </p>
<p>+&lt;行数&gt;  指定开启文件时，光标所在的行数。  </p>
<p>-autoindent  自动缩排。  </p>
<p>-crlf  在换行时，使用CR-LF字符。  </p>
<p>-indentc&lt;缩排字符&gt;  执行缩排时，实际插入的字符。  </p>
<p>-istep&lt;缩排字符数&gt;  每次执行缩排时，所移动的缩排字符数。  </p>
<p>-keymap&lt;按键配置文件&gt;  使用不同的按键配置文件。  </p>
<p>-linums  在每行前面加上行号。  </p>
<p>-lmargin&lt;栏数&gt;  设置左侧边界。  </p>
<p>-overwrite  设置覆盖模式。  </p>
<p>-rmargin&lt;栏数&gt;  设置右侧边界。  </p>
<p>-tab&lt;栏数&gt;  设置tab的宽度。  </p>
<p>-rdonly  以只读的方式开启文件-wordwrap编辑时若超过右侧边界，则自动换行。</p>
<h3 id="join"><a href="#join" class="headerlink" title="***join"></a>***join</h3><p><strong>功能说明</strong>:将两个文件中，指定栏位内容相同的行连接起来。  </p>
<p><strong>语法</strong>:join [-i][-a&lt;1或2&gt;][-e&lt;字符串&gt;][-o&lt;格式&gt;][-t&lt;字符&gt;][-v&lt;1或2&gt;][-1&lt;栏位&gt;][-2&lt;栏位&gt;][–help][–version][文件1][文件2]  </p>
<p><strong>补充说明</strong>:找出两个文件中，指定栏位内容相同的行，并加以合并，再输出到标准输出设备。  </p>
<p><strong>参数</strong>:  </p>
<p>-a&lt;1或2&gt;  除了显示原来的输出内容之外，还显示指令文件中没有相同栏位的行。  </p>
<p>-e&lt;字符串&gt;  若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串。  </p>
<p>-i或–igore-case  比较栏位内容时，忽略大小写的差异。  </p>
<p>-o&lt;格式&gt;  按照指定的格式来显示结果。  </p>
<p>-t&lt;字符&gt;  使用栏位的分隔字符。 </p>
<p>-v&lt;1或2&gt;  跟-a相同，但是只显示文件中没有相同栏位的行。  </p>
<p>-1&lt;栏位&gt;  连接[文件1]指定的栏位。  </p>
<p>-2&lt;栏位&gt;  连接[文件2]指定的栏位。  </p>
<p>–help  显示帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="look"><a href="#look" class="headerlink" title="***look"></a>***look</h3><p><strong>功能说明</strong>:查询单字。  </p>
<p><strong>语法</strong>:look [-adf][-t&lt;字尾字符串&gt;][字首字符串][字典文件]  </p>
<p><strong>补充说明</strong>:look指令用于英文单字的查询。您仅需给予它欲查询的字首字符串，它会显示所有开头字符串符合该条件的单字。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  使用另一个字典文件web2，该文件也位于&#x2F;usr&#x2F;dict目录下。  </p>
<p>-d  只对比英文字母和数字，其余一慨忽略不予比对。  </p>
<p>-f  忽略字符大小写差别。  </p>
<p>-t&lt;字尾字符串&gt;  设置字尾字符串。</p>
<h3 id="mtype"><a href="#mtype" class="headerlink" title="***mtype"></a>***mtype</h3><p><strong>功能说明</strong>:显示MS-DOS文件的内容。  </p>
<p><strong>语法</strong>:mtype [-st][文件]  </p>
<p><strong>补充说明</strong>:mtype为mtools工具指令，模拟MS-DOS的type指令，可显示MS-DOS文件的内容。  </p>
<p><strong>参数</strong>:  </p>
<p>-s  去除8位字符码集的第一个位，使它兼容于7位的ASCII。  </p>
<p>-t  将MS-DOS文本文件中的“换行+光标移至行首”字符转换成Linux的换行字符。</p>
<h3 id="pico"><a href="#pico" class="headerlink" title="***pico"></a>***pico</h3><p><strong>功能说明</strong>:编辑文字文件。  </p>
<p><strong>语法</strong>:pico [-bdefghjkmqtvwxz][-n&lt;间隔秒数&gt;][-o&lt;工作目录&gt;][-r&lt;编辑页宽&gt;][-s&lt;拼字检查器&gt;][+&lt;列数编号&gt;][文件]  </p>
<p><strong>补充说明</strong>:pico是个简单易用、以显示导向为主的文字编辑程序，它伴随着处理电子邮件和新闻组的程序pine而来。  </p>
<p><strong>参数</strong>:  </p>
<p>-b  开启置换的功能。  </p>
<p>-d  开启删除的功能。  </p>
<p>-e  使用完整的文件名称。  </p>
<p>-f  支持键盘上的F1、F2…等功能键。  </p>
<p>-g  显示光标。 </p>
<p> -h  在线帮助。  </p>
<p>-j  开启切换的功能。  </p>
<p>-k  预设pico在使用剪下命令时，会把光标所在的列的内容全部删除。  </p>
<p>-m  开启鼠标支持的功能，您可用鼠标点选命令列表。  </p>
<p>-n&lt;间隔秒数&gt;  设置多久检查一次新邮件。  </p>
<p>-o&lt;工作目录&gt;  设置工作目录。  </p>
<p>-q  忽略预设值。  </p>
<p>-r&lt;编辑页宽&gt;  设置编辑文件的页宽。  </p>
<p>-s&lt;拼字检查器&gt;  另外指定拼字检查器。 </p>
<p>-t  启动工具模式。  </p>
<p>-v  启动阅读模式，用户只能观看，无法编辑文件的内容。  </p>
<p>-w  关闭自动换行，通过这个参数可以编辑内容很长的列。  </p>
<p>-x  关闭换面下方的命令列表。  </p>
<p>-z  让pico可被Ctrl+z中断，暂存在后台作业里。  </p>
<p>+&lt;列数编号&gt;  执行pico指令进入编辑模式时，从指定的列数开始编辑。</p>
<h3 id="rgrep"><a href="#rgrep" class="headerlink" title="***rgrep"></a>***rgrep</h3><p><strong>功能说明</strong>:递归查找文件里符合条件的字符串。  </p>
<p><strong>语法</strong>:rgrep [-?BcDFhHilnNrv][-R&lt;范本样式&gt;][-W&lt;列长度&gt;][-x&lt;扩展名&gt;][–help][–version][范本样式][文件或目录…]  </p>
<p><strong>补充说明</strong>:rgrep指令的功能和grep指令类似，可查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设rgrep指令会把含有范本样式的那一列显示出来。  </p>
<p><strong>参数</strong>: </p>
<p>-?  显示范本样式与范例的说明。  </p>
<p>-B  忽略二进制的数据。  </p>
<p>-c  计算符合范本样式的列数。  </p>
<p>-D  排错模式，只列出指令搜寻的目录清单，而不会读取文件内容。  </p>
<p>-F  当遇到符号连接时，rgrep预设是忽略不予处理，加上本参数后，rgrep指令就会读取该连接所指向的原始文件的内容。  </p>
<p>-h  特别将符合范本样式的字符串标示出来。  </p>
<p>-H  只列出符合范本样式的字符串，而非显示整列的内容。  </p>
<p>-i  忽略字符大小写的差别。  </p>
<p>-l  列出文件内容符合指定的范本样式的文件名称。  </p>
<p>-n  在显示符合坊本样式的那一列之前，标示出该列的列数编号。  </p>
<p>-N  不要递归处理。  </p>
<p>-r  递归处理，将指定目录下的所有文件及子目录一并处理。 </p>
<p>-R&lt;范本样式&gt;  此参数的效果和指定“-r”参数类似，但只主力符合范本样式文件名称的文件。  </p>
<p>-v  反转查找。  </p>
<p>-W&lt;列长度&gt;  限制符合范本样式的字符串所在列，必须拥有的字符数。  </p>
<p>-x&lt;扩展名&gt;  只处理符合指定扩展名的文件名称的文件。  </p>
<p>–help  在线帮助。  </p>
<p>–version  显示版本信息。</p>
<h3 id="sed"><a href="#sed" class="headerlink" title="***sed"></a>***sed</h3><p><strong>功能说明</strong>:利用script来处理文本文件。 </p>
<p><strong>语法</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed [-hnV][-e&lt;script&gt;][-f&lt;script文件&gt;][文本文件]</span><br></pre></td></tr></table></figure>

<p><strong>补充说明</strong>:sed可依照script的指令，来处理、编辑文本文件。 </p>
<p><strong>参数</strong>:  </p>
<p>-e<script>或--expression=<script>  以选项中指定的script来处理输入的文本文件。  </p>
<p>-f<script文件>或--file=<script文件> 以选项中指定的script文件来处理输入的文本文件。  </p>
<p>-h或--help  显示帮助。  </p>
<p>-n或--quiet或--silent  仅显示script处理后的结果。  </p>
<p>-V或--version  显示版本信息。</p>
<h3 id="sort"><a href="#sort" class="headerlink" title="***sort"></a>***sort</h3><p><strong>功能说明</strong>:将文本文件内容加以排序。  </p>
<p><strong>语法</strong>:sort [-bcdfimMnr][-o<输出文件>][-t<分隔字符>][+<起始栏位>-<结束栏位>][--help][--verison][文件]  </p>
<p><strong>补充说明</strong>:sort可针对文本文件的内容，以行为单位来排序。  </p>
<p><strong>参数</strong>:  </p>
<p>-b  忽略每行前面开始出的空格字符。  </p>
<p>-c  检查文件是否已经按照顺序排序。  </p>
<p>-d  排序时，处理英文字母、数字及空格字符外，忽略其他的字符。  </p>
<p>-f  排序时，将小写字母视为大写字母。  </p>
<p>-i  排序时，除了040至176之间的ASCII字符外，忽略其他的字符。  </p>
<p>-m  将几个排序好的文件进行合并。  </p>
<p>-M  将前面3个字母依照月份的缩写进行排序。  </p>
<p>-n  依照数值的大小排序。 </p>
<p>-o<输出文件>  将排序后的结果存入指定的文件。  </p>
<p>-r  以相反的顺序来排序。  </p>
<p>-t<分隔字符>  指定排序时所用的栏位分隔字符。  </p>
<p>+<起始栏位>-<结束栏位>  以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。  </p>
<p>--help  显示帮助。  </p>
<p>--version  显示版本信息。</p>
<h3 id="spell"><a href="#spell" class="headerlink" title="***spell"></a>***spell</h3><p><strong>功能说明</strong>:拼字检查程序。  </p>
<p><strong>语法</strong>:spell  </p>
<p><strong>补充说明</strong>:spell可从标准输入设备读取字符串，结束后显示拼错的词汇。</p>
<h3 id="tr"><a href="#tr" class="headerlink" title="***tr"></a>***tr</h3><p><strong>功能说明</strong>:转换字符。  </p>
<p><strong>语法</strong>:tr [-cdst][--help][--version][第一字符集][第二字符集]  </p>
<p><strong>补充说明</strong>:tr指令从标准输入设备读取数据，经过字符串转译后，输出到标准输出设备。  </p>
<p><strong>参数</strong>:  </p>
<p>-c或--complerment  取代所有不属于第一字符集的字符。  </p>
<p>-d或--delete  删除所有属于第一字符集的字符。  </p>
<p>-s或--squeeze-repeats  把连续重复的字符以单独一个字符表示。  </p>
<p>-t或--truncate-set1  先删除第一字符集较第二字符集多出的字符。  </p>
<p>--help  在线帮助。  </p>
<p>--version  显示版本信息。</p>
<h3 id="uniq"><a href="#uniq" class="headerlink" title="***uniq"></a>***uniq</h3><p><strong>功能说明</strong>:检查及删除文本文件中重复出现的行列。  </p>
<p><strong>语法</strong>:uniq [-cdu][-f<栏位>][-s<字符位置>][-w<字符位置>][--help][--version][输入文件][输出文件]  </p>
<p><strong>补充说明</strong>:uniq可检查文本文件中重复出现的行列。 </p>
<p><strong>参数</strong>:  </p>
<p>-c或--count  在每列旁边显示该行重复出现的次数。  </p>
<p>-d或--repeated  仅显示重复出现的行列。  </p>
<p>-f<栏位>或--skip-fields=<栏位>  忽略比较指定的栏位。  </p>
<p>-s<字符位置>或--skip-chars=<字符位置>  忽略比较指定的字符。  </p>
<p>-u或--unique  仅显示出一次的行列。  </p>
<p>-w<字符位置>或--check-chars=<字符位置>  指定要比较的字符。  </p>
<p>--help  显示帮助。  </p>
<p>--version  显示版本信息。 </p>
<p> [输入文件]  指定已排序好的文本文件。  </p>
<p>[输出文件]  指定输出的文件。</p>
<h3 id="wc"><a href="#wc" class="headerlink" title="***wc"></a>***wc</h3><p><strong>功能说明</strong>:计算字数。  </p>
<p><strong>语法</strong>:wc [-clw][--help][--version][文件...]  </p>
<p><strong>补充说明</strong>:利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为“-”，则wc指令会从标准输入设备读取数据。  </p>
<p><strong>参数</strong>:  </p>
<p>-c或--bytes或--chars  只显示Bytes数。 </p>
<p> -l或--lines  只显示列数。  </p>
<p>-w或--words  只显示字数。  </p>
<p>--help  在线帮助。  </p>
<p>--version  显示版本信息。</p>
<h2 id="网络通讯"><a href="#网络通讯" class="headerlink" title="网络通讯"></a>网络通讯</h2><h3 id="dip"><a href="#dip" class="headerlink" title="***dip"></a>***dip</h3><p><strong>功能说明</strong>:IP拨号连接。  </p>
<p><strong>语法</strong>:dip [-aikltv][-m][-p<协议>][拨号script文件]  </p>
<p><strong>补充说明</strong>:dip可控制调制解调器，以拨号IP的方式建立对外的双向连接。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  询问用户名称与密码。  </p>
<p>-i  启动拨号服务器功能。  </p>
<p>-k  删除执行中的dip程序。  </p>
<p>-l  指定要删除的连线，必须配合-k参数一起使用。  </p>
<p>-m<MTU数目>  设置最大传输单位，预设值为296。  </p>
<p>-p<协议>  设置通信协议。  </p>
<p>-t  进入dip的指令模式。  </p>
<p>-v  执行时显示详细的信息。</p>
<h3 id="getty"><a href="#getty" class="headerlink" title="*** getty"></a>*** <strong>getty</strong></h3><p><strong>功能说明</strong>:设置终端机模式，连线速率和管制线路。  </p>
<p><strong>语法</strong>:getty [-h][-d<组态配置文件>][-r<延迟秒数>][-t<超时秒数>][-w<等待字符串>][终端机编号][连线速率<终端机类型><管制线路>] 或 getty [-c<定义配置文件>]  </p>
<p><strong>补充说明</strong>:getty指令是UNIX之类操作系统启动时所必须的3个步骤之一。  </p>
<p><strong>参数</strong>:  </p>
<p>-c<定义配置文件>  指定定义配置文件，预设为/etc/gettydefs。  </p>
<p>-d<组态配置文件>  指定组态配置文件，预设为/etc/conf.getty。  </p>
<p>-h  当传输速率为0时就强制断线。  </p>
<p>-r<延迟秒数>  设置延迟时间。  </p>
<p>-t<超时秒数>  设置等待登入的时间。  </p>
<p>-w<等待字符串>  设置等待回应的字符串。</p>
<h3 id="mingetty"><a href="#mingetty" class="headerlink" title="***mingetty"></a>***<strong>mingetty</strong></h3><p><strong>功能说明</strong>:精简版的getty。  </p>
<p><strong>语法</strong>:mingetty [--long-hostname][--noclear][tty]  </p>
<p><strong>补充说明</strong>:mingetty适用于本机上的登入程序。  </p>
<p><strong>参数</strong>:  </p>
<p>--long-hostname  显示完整的主机名称。  </p>
<p>--noclear  在询问登入的用户名称之前不要清楚屏幕画面。</p>
<h3 id="ppp-off"><a href="#ppp-off" class="headerlink" title="***ppp-off"></a>***<strong>ppp-off</strong></h3><p><strong>功能说明</strong>:关闭ppp连线。  </p>
<p><strong>语法</strong>:ppp-of  </p>
<p><strong>补充说明</strong>:这是Slackware发行版内附的程序，让用户切断PPP的网络连线。</p>
<h3 id="smbd"><a href="#smbd" class="headerlink" title="***smbd"></a>***<strong>smbd</strong></h3><p><strong>功能说明</strong>:Samba服务器程序。  </p>
<p><strong>语法</strong>:smbd [-aDhoP][-d<排错层级>][-i<范围>][-l<记录文件>][-O<连接槽选项>][-p<连接端口编号>][-s<配置文件>]  </p>
<p><strong>补充说明</strong>:smbd为Samba服务器程序，可分享文件与打印机等网络资源供Windows相关的用户端程序存取。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  所有的连线记录都会加到记录文件中。  </p>
<p>-d<排错层级>  指定记录文件所记载事件的详细程度。  </p>
<p>-D  使用此参数时，smbd会以服务程序的方式在后台执行。 </p>
<p>-h  显示帮助。  </p>
<p>-i<范围>  指定NetBIOS名称的范围。  </p>
<p>-l<记录文件>  指定记录文件的名称。  </p>
<p>-o  每次启动时，会覆盖原有的记录文件。  </p>
<p>-O<连接槽选项>  设置连接槽选项。  </p>
<p>-p<连接端口编号>  设置连接端口编号。  </p>
<p>-P  仅用来测试smbd程序的正确性。  </p>
<p>-s<配置文件>  指定smbd的设置文件。</p>
<h3 id="telnet"><a href="#telnet" class="headerlink" title="*** telnet"></a>*** <strong>telnet</strong></h3><p><strong>功能说明</strong>:远端登入。  </p>
<p><strong>语法</strong>:telnet [-8acdEfFKLrx][-b<主机别名>][-e<脱离字符>][-k<域名>][-l<用户名称>][-n<记录文件>][-S<服务类型>][-X<认证形态>][主机名称或IP地址<通信端口>]  </p>
<p><strong>补充说明</strong>:执行telnet指令开启终端机阶段作业，并登入远端主机。  </p>
<p><strong>参数</strong>:  </p>
<p>-8  允许使用8位字符资料，包括输入与输出。  </p>
<p>-a  尝试自动登入远端系统。  </p>
<p>-b<主机别名>  使用别名指定远端主机名称。 </p>
<p>-c  不读取用户专属目录里的.telnetrc文件。  </p>
<p>-d  启动排错模式。  </p>
<p>-e<脱离字符>  设置脱离字符。  </p>
<p>-E  滤除脱离字符。  </p>
<p>-f  此参数的效果和指定"-F"参数相同。  </p>
<p>-F  使用Kerberos V5认证时，加上此参数可把本地主机的认证数据上传到远端主机。  </p>
<p>-k<域名>  使用Kerberos认证时，加上此参数让远端主机采用指定的领域名，而非该主机的域名。  </p>
<p>-K  不自动登入远端主机。  </p>
<p>-l<用户名称>  指定要登入远端主机的用户名称。  </p>
<p>-L  允许输出8位字符资料。  </p>
<p>-n<记录文件>  指定文件记录相关信息。  </p>
<p>-r  使用类似rlogin指令的用户界面。  </p>
<p>-S<服务类型>  设置telnet连线所需的IP TOS信息。 </p>
<p>-x  假设主机有支持数据加密的功能，就使用它。  </p>
<p>-X<认证形态>  关闭指定的认证形态。</p>
<h3 id="uulog"><a href="#uulog" class="headerlink" title="*** uulog"></a>*** <strong>uulog</strong></h3><p><strong>功能说明</strong>:显示UUCP记录文件。  </p>
<p><strong>语法</strong>:uulog [-DFISv][-<行数>][-f<主机>][-I<配置文件>][-n<行数>][-s<主机>][-u<用户>][-X<层级>][--help] </p>
<p><strong>补充说明</strong>:uulog可用来显示UUCP记录文件中记录。  </p>
<p><strong>参数</strong>:  </p>
<p>-D或--debuglog  显示排错记录。  </p>
<p>-f<主机>或--follow<主机>  与-F参数类似，但仅显示与指定主机相关的记录。  </p>
<p>-I<配置文件>或--config<配置文件>  指定程序的配置文件。  </p>
<p>-<行数>,-n<行数>或--lines<行数>  显示记录文件中，从最后算起指定行数的数值。  </p>
<p>-s<主机>  仅显示记录文件中，与指定文件相关的记录。  </p>
<p>-S或--statslog  显示统计记录。 </p>
<p>-u<用户>或--suer<用户>  仅显示记录文件中，与指定用户相关的记录。 </p>
<p> -v或--version  显示版本信息。  </p>
<p>-X<层级>或--debug<层级>  设定排错层级。 </p>
<p> --help  显示帮助。</p>
<h3 id="uustat"><a href="#uustat" class="headerlink" title="*** uustat"></a>*** <strong>uustat</strong></h3><p><strong>功能说明</strong>:显示UUCP目前的状况。  </p>
<p><strong>语法</strong>:uustat [-aeiKmMNpqQRv][-B<行数>][-c<指令>][-C<指令>][-I<配置文件>][-k<工作>][-o<小时>][-r<工作>][-s<主机>][-S<主机>][-u<用户>][-U<用户>][-W<附注>][-y<小时>][-x<层级>][--help]  </p>
<p><strong>补充说明</strong>:执行uucp与uux指令后，会先将工作送到队列，再由uucico来执行工作。uustat可显示，删除或启动队列中等待执行的工作。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或-all  显示全部的UUCP工作。  </p>
<p>-B<行数>或--mail-lines<行数>  与-M或-N参数一并使用，用来指定邮件中要包含多少行的信息。  </p>
<p>-c<指令>或--command<指令>  显示与<指令>有关的工作。  </p>
<p>-C<指令>或--not-command<指令>  显示与<指令>无关的工作。  </p>
<p>-e或--executions  仅显示待执行的工作。  </p>
<p>-i或--prompt  针对队列中的每项工作，询问使用是否要删除工作。  </p>
<p>-I<配置文件>或--config<配置文件>  指定配置文件。  </p>
<p>-k<工作>或--kill<工作>  删除指定的工作。  </p>
<p>-m或--status  删除全部的工作。  </p>
<p>-M或-mail  将状态信息邮寄给UUCP管理员。  </p>
<p>-N或--notify  将状态信息分别邮寄给提出该项工作的用户。  </p>
<p>-o<小时>或--older-than<小时>  显示超过指定时数的工作。  </p>
<p>-p或--ps  显示负责UUCP锁定的程序。  </p>
<p>-q或--list  显示每台远端主机上所要执行工作的状态。  </p>
<p>-Q或--no-list  不显示工作。  </p>
<p>-r<工作>或--rejuvenate<工作>  重新启动指定的工作。  </p>
<p>-R或--rejuvenate-all  重新启动全部的工作。  </p>
<p>-s<主机>或--system<主机>  显示与<主机>有关的工作。 </p>
<p>-S<主机>或--not-system<主机>  显示与<主机>无关的工作。  </p>
<p>-v或--version  显示版本信息。 </p>
<p>-u<用户>或--user<用户>  显示与<用户>有关的工作。  </p>
<p>-U<用户>或--not-user<用户>  显示与<用户>无关的工作。  </p>
<p>-W<附注>或--comment<附注>  要放在邮件信息中的附注。  </p>
<p>-y<小时>或--younger-than<小时>  显示低于指定时数的工作。 </p>
<p>-x<层级>或--debug<层级>  指定排错层级。  </p>
<p>--help  显示帮助。</p>
<h3 id="uux"><a href="#uux" class="headerlink" title="*** uux"></a>*** <strong>uux</strong></h3><p><strong>功能说明</strong>:在远端的UUCP主机上执行指令。  </p>
<p><strong>语法</strong>:uux [-bcCIjlnrvz][-a<地址>][-g<等级>][-s<文件>][-x<层级>][--help][指令]  </p>
<p><strong>补充说明</strong>:uux可在远端的UUCP主机上执行指令或是执行本机上的指令，但在执行时会使用远端电脑的文件。 </p>
<p><strong>参数</strong>:  </p>
<p>-或-p或--stdin  直接从键盘读取要执行的指令。  </p>
<p>-a<地址>或--requestor<地址>  执行邮件地址，以便寄送状态信息。  </p>
<p>-b或--erturn-stdin  在屏幕上显示状态信息。  </p>
<p>-c或--nocopy  不用将文件复制到缓冲区。  </p>
<p>-C或--copy  将文件复制到缓冲区。  </p>
<p>-g<等级>或--grade<等级>  指定文件传送作业的优先顺序。  </p>
<p>-I或--config file  指定uux配置文件。 </p>
<p> -j或--jobid  显示作业编号。  </p>
<p>-l或--link  将本机上的文件连接到缓冲区。  </p>
<p>-n或--notification=no  无论发生任何状态，都不寄邮件通知用户。  </p>
<p>-r或--nouucico  不要立即启动uucico服务程序，仅将作业送到队列中，然后再执行。 </p>
<p>-s<文件>或--status<文件>  将完成状态保存为指定的文件。  </p>
<p>-v或--version  显示版本信息。  </p>
<p>-x<层级>或--debug<层级>  指定排错层级。  </p>
<p>-z或--notification=error  若发生错误，则以邮件来通知用户。  </p>
<p>--help  显示帮助。</p>
<h3 id="cu"><a href="#cu" class="headerlink" title="***cu"></a>***<strong>cu</strong></h3><p><strong>功能说明</strong>:连接另一个系统主机。  </p>
<p><strong>语法</strong>:cu [dehnotv][-a<通信端口>][-c<电话号码>][-E<脱离字符>][-I<设置文件>][-l<外围设备代号>][-s<连线速率>][-x<排错模式>][-z<系统主机>][--help][-nostop][--parity=none][<系统主机>/<电话号码>]  </p>
<p><strong>补充说明</strong>:本指令可连接另一台主机，并采用类似拨号终端机的接口工作，也可执行简易的文件传输作业。  </p>
<p><strong>参数</strong>:  </p>
<p>-a<通信端口>或-p<通信端口>或--port<通信端口>  使用指定的通信端口进行连线。  </p>
<p>-c<电话号码>或--phone<电话号码>  拨打该电话号码。  </p>
<p>-d  进入排错模式。  </p>
<p>-e或--parity=even  使用双同位检查。  </p>
<p>-E<脱离字符>或--escape<脱离字符>  设置脱离字符。  </p>
<p>-h或--halfduple  使用半双工模式。  </p>
<p>-I<配置文件>或--config<配置文件>  指定要使用的配置文件。  </p>
<p>-l<外围设备代号>或--line<外围设备代号>  指定某项外围设备，作为连接的设备。  </p>
<p>-n或--prompt  拨号时等待用户输入电话号码。 </p>
<p>-o或--parity=odd  使用单同位检查。  </p>
<p>-s<连线速率>或--speed<连线速率>或--baud<连线速率>或-<连线速率>  设置连线的速率，单位以鲍率计算。  </p>
<p>-t或--maper  把CR字符置换成LF+CR字符。  </p>
<p>-v或--version  显示版本信息。  </p>
<p>-x<排错模式>或--debug<排错模式>  使用排错模式。  </p>
<p>-z<系统主机>或--system<系统主机>  连接该系统主机。  </p>
<p>--help  在线帮助。  </p>
<p>--nostop  关闭Xon/Xoff软件流量控制。 </p>
<p> --parity=none  不使用同位检查。</p>
<h3 id="dnsconf"><a href="#dnsconf" class="headerlink" title="*** dnsconf"></a>*** <strong>dnsconf</strong></h3><p><strong>功能说明</strong>:设置DNS服务器组态。  </p>
<p><strong>语法</strong>:dnsconf [--deldomain<域>][--delsecondary<域>][--newdomain<域>][--set<主机>][--setcname<CNAME><主机>][--setmx<域><主机>][--setns<域><主机>][--unset<主机>]  </p>
<p><strong>补充说明</strong>:dnsconf实际上为linuxconf的符号连接，提供图形截面的操作方式，供管理员管理DNS服务器。  </p>
<p><strong>参数</strong>:  </p>
<p>--deldomain<域>  删除域。  </p>
<p>--delsecondary<域>  删除次级域。  </p>
<p>--newdomain<域>  新增域。  </p>
<p>--set<主机><IP>  新增主机记录。  </p>
<p>--setcname<CNAME><主机>  设置<CNAME>。  </p>
<p>--setmx<域><主机>  指定域的邮件主机。  </p>
<p>--setns<域><主机>  指定域的DNS服务器。  </p>
<p>--unset<主机>  删除DNS中某台主机的记录。</p>
<h3 id="efax"><a href="#efax" class="headerlink" title="***efax"></a>***<strong>efax</strong></h3><p><strong>功能说明</strong>:收发传真。  </p>
<p><strong>语法</strong>:efax [-sw][-a][-c<调制解调器属性>][-d<驱动程序>][-f<字体文件>][-g<指令>][-h<传真标题字符串>][-i][-j<AT指令>][-k][-l<识别码>][-o<选项>][-q<错误次数>][-r<文件名>][-v<信息类型>][-x][-t<电话号码><传真文件>]  </p>
<p><strong>补充说明</strong>:支持Class 1与Class 2的调制解调器来收发传真。  </p>
<p><strong>参数</strong>:  </p>
<p>-a<AT指令>  以指定的AT指令来接电话。  </p>
<p>-c<调制解调器属性>  设置本机调制解调器的属性。  </p>
<p>-d<驱动程序>  指定调制解调器驱动程序。  </p>
<p>-f<字体文件>  使用指定的字体文件来建立传真标题。  </p>
<p>-g<指令>  若接到的电话为数据，则执行指定的指令。  </p>
<p>-h<传真标题字符串>  指定字符串为每页最前端的标题。  </p>
<p>-i<AT指令>  在调制解调器进入传真模式前，传送AT指令到调制解调器。  </p>
<p>-j<AT指令>  在调制解调器进入传真模式后，传送AT指令到调制解调器。  </p>
<p>-k<AT指令>  在调制解调器离开传真模式前，传送AT指令到调制解调器。 </p>
<p>-l<识别码>  设置本机调制解调器的识别码。  </p>
<p>-o<选项>  使用非标准调制解调器时设置相关选项。 </p>
<p>-q<错误次数>  接收传真时，当每页发生错误次数超过指定的数目时，要求对方重发。  </p>
<p>-r<文件名>  在接收传真时，将每页分别保存成文件。  </p>
<p>-v<信息类型>  选择要印出的信息类型。  </p>
<p>-w  不要接听电话，等待OK或CONNECT的信号。  </p>
<p>-x<UUCP锁定文件>  使用UUCP格式的锁定文件来锁定调制解调器。  </p>
<p>-t<电话号码><传真文件>  以<电话号码>中的号码来拨号，并将<传真文件>传真出去。</p>
<h3 id="httpd"><a href="#httpd" class="headerlink" title="*** httpd"></a>*** <strong>httpd</strong></h3><p><strong>功能说明</strong>:Apache HTTP服务器程序。  </p>
<p><strong>语法</strong>:httpd [-hlLStvVX][-c][-C<httpd指令>][-d<服务器根目录>][-D<设定文件参数>][-f<设定文件>]  </p>
<p><strong>补充说明</strong>:httpd为Apache HTTP服务器程序。直接执行程序可启动服务器的服务。  </p>
<p><strong>参数</strong>:  </p>
<p>-c<httpd指令>  在读取配置文件前，先执行选项中的指令。  </p>
<p>-C<httpd指令>  在读取配置文件后，再执行选项中的指令。  </p>
<p>-d<服务器根目录>  指定服务器的根目录。  </p>
<p>-D<设定文件参数>  指定要传入配置文件的参数。 </p>
<p>-f<设定文件>  指定配置文件。  </p>
<p>-h  显示帮助。  </p>
<p>-l  显示服务器编译时所包含的模块。  </p>
<p>-L  显示httpd指令的说明。  </p>
<p>-S  显示配置文件中的设定。  </p>
<p>-t  测试配置文件的语法是否正确。  </p>
<p>-v  显示版本信息。  </p>
<p>-V  显示版本信息以及建立环境。  </p>
<p>-X  以单一程序的方式来启动服务器。</p>
<h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="*** ifconfig"></a>*** <strong>ifconfig</strong></h3><p><strong>功能说明</strong>:显示或设置网络设备。  </p>
<p><strong>语法</strong>:ifconfig [网络设备][down up -allmulti -arp -promisc][add<地址>][del<地址>][<hw<网络设备类型><硬件地址>][io_addr][irq<IRQ地址>][media<网络媒介类型>][mem_start<内存地址>][metric<数目>][mtu<字节>][netmask<子网掩码>][tunnel<地址>][-broadcast<地址>][-pointopoint<地址>][IP地址]  </p>
<p><strong>补充说明</strong>:ifconfig可设置网络设备的状态，或是显示目前的设置。  </p>
<p><strong>参数</strong>:  </p>
<p>add<地址>  设置网络设备IPv6的IP地址。  </p>
<p>del<地址>  删除网络设备IPv6的IP地址。  </p>
<p>down  关闭指定的网络设备。  </p>
<p><hw<网络设备类型><硬件地址>  设置网络设备的类型与硬件地址。  </p>
<p>io_addr<I/O地址>  设置网络设备的I/O地址。  </p>
<p>irq<IRQ地址>  设置网络设备的IRQ。  </p>
<p>media<网络媒介类型>  设置网络设备的媒介类型。  </p>
<p>mem_start<内存地址>  设置网络设备在主内存所占用的起始地址。 </p>
<p>metric<数目>  指定在计算数据包的转送次数时，所要加上的数目。  </p>
<p>mtu<字节>  设置网络设备的MTU。  </p>
<p>netmask<子网掩码>  设置网络设备的子网掩码。  </p>
<p>tunnel<地址>  建立IPv4与IPv6之间的隧道通信地址。  </p>
<p>up  启动指定的网络设备。 </p>
<p>-broadcast<地址>  将要送往指定地址的数据包当成广播数据包来处理。  </p>
<p>-pointopoint<地址>  与指定地址的网络设备建立直接连线，此模式具有保密功能。  </p>
<p>-promisc  关闭或启动指定网络设备的promiscuous模式。 </p>
<p>[IP地址]  指定网络设备的IP地址。 </p>
<p>[网络设备]  指定网络设备的名称。</p>
<h3 id="mesg"><a href="#mesg" class="headerlink" title="*** mesg"></a>*** <strong>mesg</strong></h3><p><strong>功能说明</strong>:设置终端机的写入权限。  </p>
<p><strong>语法</strong>:mesg [ny]  </p>
<p><strong>补充说明</strong>:将mesg设置y时，其他用户可利用write指令将信息直接显示在您的屏幕上。  </p>
<p><strong>参数</strong>:  </p>
<p>n  不允许气筒用户将信息直接显示在你的屏幕上。  </p>
<p>y  允许气筒用户将信息直接显示在你的屏幕上。</p>
<h3 id="minicom"><a href="#minicom" class="headerlink" title="***minicom"></a>***<strong>minicom</strong></h3><p><strong>功能说明</strong>:调制解调器通信程序。  </p>
<p><strong>语法</strong>:minicom [-8lmMostz][-a][-c<on或off>][-C<取文件>][-d<编号>][-p<模拟终端机>][-S<script文件>][配置文件]  </p>
<p><strong>补充说明</strong>:minicom是一个相当受欢迎的PPP拨号连线程序。  </p>
<p><strong>参数</strong>:  </p>
<p>-8  不要修改任何8位编码的字符。  </p>
<p>-a<on或0ff>  设置终端机属性。 </p>
<p>-c<on或off>  设置彩色模式。  </p>
<p>-C<取文件>  指定取文件，并在启动时开启取功能。  </p>
<p>-d<编号>  启动或直接拨号。  </p>
<p>-l  不会将所有的字符都转成ASCII码。 </p>
<p>-m  以Alt或Meta键作为指令键。  </p>
<p>-M  与-m参数类似。  </p>
<p>-o  不要初始化调制解调器。  </p>
<p>-p  <模拟终端机>  使用模拟终端机。  </p>
<p>-s  开启程序设置画面。  </p>
<p>-S<script文件>  在启动时，执行指定的script文件。  </p>
<p>-t  设置终端机的类型。  </p>
<p>-z  在终端机上显示状态列。  </p>
<p>[配置文件]  指定minicom配置文件。、</p>
<h3 id="nc"><a href="#nc" class="headerlink" title="*** nc"></a>*** <strong>nc</strong></h3><p><strong>功能说明</strong>:设置路由器。  </p>
<p><strong>语法</strong>:nc [-hlnruz][-g<网关...>][-G<指向器数目>][-i<延迟秒数>][-o<输出文件>][-p<通信端口>][-s<来源位址>][-v...][-w<超时秒数>][主机名称][通信端口...]  </p>
<p><strong>补充说明</strong>:执行本指令可设置路由器的相关参数。 </p>
<p><strong>参数</strong>:  </p>
<p>-g<网关>  设置路由器跃程通信网关，最丢哦可设置8个。  </p>
<p>-G<指向器数目>  设置来源路由指向器，其数值为4的倍数。  </p>
<p>-h  在线帮助。  </p>
<p>-i<延迟秒数>  设置时间间隔，以便传送信息及扫描通信端口。  </p>
<p>-l  使用监听模式，管控传入的资料。  </p>
<p>-n  直接使用IP地址，而不通过域名服务器。  </p>
<p>-o<输出文件>  指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。  </p>
<p>-p<通信端口>  设置本地主机使用的通信端口。  </p>
<p>-r  乱数指定本地与远端主机的通信端口。  </p>
<p>-s<来源位址>  设置本地主机送出数据包的IP地址。  </p>
<p>-u  使用UDP传输协议。  </p>
<p>-v  显示指令执行过程。  </p>
<p>-w<超时秒数>  设置等待连线的时间。  </p>
<p>-z  使用0输入/输出模式，只在扫描通信端口时使用。</p>
<h3 id="netconf"><a href="#netconf" class="headerlink" title="*** netconf"></a>*** <strong>netconf</strong></h3><p><strong>功能说明</strong>:设置各项网络功能。  </p>
<p><strong>语法</strong>:netconf  </p>
<p><strong>补充说明</strong>:netconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。</p>
<h3 id="netconfig"><a href="#netconfig" class="headerlink" title="***netconfig"></a>***<strong>netconfig</strong></h3><p><strong>功能说明</strong>:设置网络环境。 </p>
<p><strong>语法</strong>:netconfig  </p>
<p><strong>补充说明</strong>:这是Slackware发行版内附程序，它具有互动式的问答界面，让用户轻易完成网络环境的设置。</p>
<h3 id="netstat"><a href="#netstat" class="headerlink" title="***netstat"></a>***<strong>netstat</strong></h3><p><strong>功能说明</strong>:显示网络状态。  </p>
<p><strong>语法</strong>:netstat [-acCeFghilMnNoprstuvVwx][-A<网络类型>][--ip]  </p>
<p><strong>补充说明</strong>:利用netstat指令可让你得知整个Linux系统的网络情况。  </p>
<p><strong>参数</strong>:  </p>
<p>-a或--all  显示所有连线中的Socket。  </p>
<p>-A<网络类型>或--<网络类型>  列出该网络类型连线中的相关地址。  </p>
<p>-c或--continuous  持续列出网络状态。  </p>
<p>-C或--cache  显示路由器配置的快取信息。  </p>
<p>-e或--extend  显示网络其他相关信息。  </p>
<p>-F或--fib  显示FIB。 </p>
<p>-g或--groups  显示多重广播功能群组组员名单。 </p>
<p>-h或--help  在线帮助。  </p>
<p>-i或--interfaces  显示网络界面信息表单。  </p>
<p>-l或--listening  显示监控中的服务器的Socket。 </p>
<p>-M或--masquerade  显示伪装的网络连线。 </p>
<p>-n或--numeric  直接使用IP地址，而不通过域名服务器。  </p>
<p>-N或--netlink或--symbolic  显示网络硬件外围设备的符号连接名称。  </p>
<p>-o或--timers  显示计时器。  </p>
<p>-p或--programs  显示正在使用Socket的程序识别码和程序名称。  </p>
<p>-r或--route  显示Routing Table。  </p>
<p>-s或--statistice  显示网络工作信息统计表。  </p>
<p>-t或--tcp  显示TCP传输协议的连线状况。  </p>
<p>-u或--udp  显示UDP传输协议的连线状况。  </p>
<p>-v或--verbose  显示指令执行过程。  </p>
<p>-V或--version  显示版本信息。  </p>
<p>-w或--raw  显示RAW传输协议的连线状况。  </p>
<p>-x或--unix  此参数的效果和指定"-A unix"参数相同。  </p>
<p>--ip或--inet  此参数的效果和指定"-A inet"参数相同。</p>
<h3 id="ping"><a href="#ping" class="headerlink" title="***ping"></a>***<strong>ping</strong></h3><p><strong>功能说明</strong>:检测主机。  </p>
<p><strong>语法</strong>:ping [-dfnqrRv][-c<完成次数>][-i<间隔秒数>][-I<网络界面>][-l<前置载入>][-p<范本样式>][-s<数据包大小>][-t<存活数值>][主机名称或IP地址]  </p>
<p><strong>补充说明</strong>:执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。  </p>
<p><strong>参数</strong>: </p>
<p>-d  使用Socket的SO_DEBUG功能。  </p>
<p>-c<完成次数>  设置完成要求回应的次数。  </p>
<p>-f  极限检测。  </p>
<p>-i<间隔秒数>  指定收发信息的间隔时间。  </p>
<p>-I<网络界面>  使用指定的网络界面送出数据包。  </p>
<p>-l<前置载入>  设置在送出要求信息之前，先行发出的数据包。  </p>
<p>-n  只输出数值。  </p>
<p>-p<范本样式>  设置填满数据包的范本样式。  </p>
<p>-q  不显示指令执行过程，开头和结尾的相关信息除外。  </p>
<p>-r  忽略普通的Routing Table，直接将数据包送到远端主机上。  </p>
<p>-R  记录路由过程。  </p>
<p>-s<数据包大小>  设置数据包的大小。  </p>
<p>-t<存活数值>  设置存活数值TTL的大小。  </p>
<p>-v  详细显示指令的执行过程。</p>
<h3 id="pppstats"><a href="#pppstats" class="headerlink" title="*** pppstats"></a>*** <strong>pppstats</strong></h3><p><strong>功能说明</strong>:显示PPP连线状态。  </p>
<p><strong>语法</strong>:pppstats [-adrv][-c<执行次数>][-w<间隔秒数>][网络界面]  </p>
<p><strong>补充说明</strong>:利用pppstats指令可让你得知PPP连接网络的相关信息。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  显示绝对统计值。  </p>
<p>-c<执行次数>  设置回报状况的次数。  </p>
<p>-d  显示相对统计值。  </p>
<p>-r  显示数据包压缩比率的统计值。 </p>
<p> -v  显示VJTCP文件头的压缩效率统计值。 </p>
<p> -w<间隔秒数>  设置显示统计信息的间隔时间。</p>
<h3 id="samba"><a href="#samba" class="headerlink" title="***samba"></a>***<strong>samba</strong></h3><p><strong>功能说明</strong>:Samba服务器控制。  </p>
<p><strong>语法</strong>:samba [start][stop][status][restart]  </p>
<p><strong>补充说明</strong>:samba为script文件，可启动，停止Samba服务器或回报目前的状态。  </p>
<p><strong>参数</strong>:  </p>
<p>start  启动Samba服务器的服务。  </p>
<p>stop  停止Samba服务器的服务。  </p>
<p>status  显示Samba服务器目前的状态。  </p>
<p>restart  重新启动Samba服务器。</p>
<h3 id="setserial"><a href="#setserial" class="headerlink" title="*** setserial"></a>*** <strong>setserial</strong></h3><p><strong>功能说明</strong>:设置或显示串口的相关信息。  </p>
<p><strong>语法</strong>:setserial [-abgGqvVz][设备][串口参数]  </p>
<p><strong>补充说明</strong>:setserial可用来设置串口或显示目前的设置。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  显示详细信息。  </p>
<p>-b  显示摘要信息。  </p>
<p>-g  显示串口的相关信息。  </p>
<p>-G  以指令列表的格式来显示信息。  </p>
<p>-q  执行时显示较少的信息。  </p>
<p>-v  执行时显示较多的信息。  </p>
<p>-V  显示版本信息。  </p>
<p>-z  设置前，先将所有的标记归零。</p>
<h3 id="shapecfg"><a href="#shapecfg" class="headerlink" title="*** shapecfg"></a>*** <strong>shapecfg</strong></h3><p><strong>功能说明</strong>:管制网络设备的流量。  </p>
<p><strong>语法</strong>:shapecfg attach [流量管制器][网络设备] 或 shapecfg speed [流量管制器][带宽]  </p>
<p><strong>补充说明</strong>:自Linux-2.15开始，便支持流量管制的功能。  </p>
<p><strong>参数</strong>:  </p>
<p>attach  将流量管制器与实际的网络设备结合。  </p>
<p>speed  设置流量管制器的对外传输带宽。</p>
<h3 id="smbd-1"><a href="#smbd-1" class="headerlink" title="*** smbd"></a>*** <strong>smbd</strong></h3><p><strong>功能说明</strong>:Samba服务器程序。  </p>
<p><strong>语法</strong>:smbd [-aDhoP][-d<排错层级>][-i<范围>][-l<记录文件>][-O<连接槽选项>][-p<连接端口编号>][-s<配置文件>]  </p>
<p><strong>补充说明</strong>:smbd为Samba服务器程序，可分享文件与打印机等网络资源供Windows相关的用户端程序存取。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  所有的连线记录都会加到记录文件中。  </p>
<p>-d<排错层级>  指定记录文件所记载事件的详细程度。  </p>
<p>-D  使用此参数时，smbd会以服务程序的方式在后台执行。  </p>
<p>-h  显示帮助。  </p>
<p>-i<范围>  指定NetBIOS名称的范围。  </p>
<p>-l<记录文件>  指定记录文件的名称。 </p>
<p>-o  每次启动时，会覆盖原有的记录文件。  </p>
<p>-O<连接槽选项>  设置连接槽选项。  </p>
<p>-p<连接端口编号>  设置连接端口编号。  </p>
<p>-P  仅用来测试smbd程序的正确性。  </p>
<p>-s<配置文件>  指定smbd的设置文件。</p>
<h3 id="statserial"><a href="#statserial" class="headerlink" title="*** statserial"></a>*** <strong>statserial</strong></h3><p><strong>功能说明</strong>:显示串口状态。  </p>
<p><strong>语法</strong>:statserial [-dnx][串口设备名称]  </p>
<p><strong>补充说明</strong>:statserial可显示各个接脚的状态，常用来判断串口是否正常。  </p>
<p><strong>参数</strong>:  </p>
<p>-d  以10进制数字来表示串口的状态。  </p>
<p>-n  仅显示一次串口的状态后即结束程序。 </p>
<p> -x  与-n参数类似，但是以16进制来表示。</p>
<h3 id="talk"><a href="#talk" class="headerlink" title="***talk"></a>***<strong>talk</strong></h3><p><strong>功能说明</strong>:与其他用户交谈。  </p>
<p><strong>语法</strong>:talk [用户名称][终端机编号]  </p>
<p><strong>补充说明</strong>:通过talk指令，你可以和另一个用户线上交谈。</p>
<h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="***tcpdump"></a>***<strong>tcpdump</strong></h3><p><strong>功能说明</strong>:倾倒网络传输数据。  </p>
<p><strong>语法</strong>:tcpdump [-adeflnNOpqStvx][-c<数据包数目>][-dd][-ddd][-F<表达文件>][-i<网络界面>][-r<数据包文件>][-s<数据包大小>][-tt][-T<数据包类型>][-vv][-w<数据包文件>][输出数据栏位]  </p>
<p><strong>补充说明</strong>:执行tcpdump指令可列出经过指定网络界面的数据包文件头，在Linux操作系统中，你必须是系统管理员。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  尝试将网络和广播地址转换成名称。  </p>
<p>-c<数据包数目>  收到指定的数据包数目后，就停止进行倾倒操作。  </p>
<p>-d  把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出。 </p>
<p>-dd  把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出。  </p>
<p>-ddd  把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出。  </p>
<p>-e  在每列倾倒资料上显示连接层级的文件头。  </p>
<p>-f  用数字显示网际网络地址。  </p>
<p>-F<表达文件>  指定内含表达方式的文件。  </p>
<p>-i<网络界面>  使用指定的网络截面送出数据包。  </p>
<p>-l  使用标准输出列的缓冲区。  </p>
<p>-n  不把主机的网络地址转换成名字。 </p>
<p>-N  不列出域名。  </p>
<p>-O  不将数据包编码最佳化。  </p>
<p>-p  不让网络界面进入混杂模式。  </p>
<p>-q  快速输出，仅列出少数的传输协议信息。 </p>
<p>-r<数据包文件>  从指定的文件读取数据包数据。  </p>
<p>-s<数据包大小>  设置每个数据包的大小。  </p>
<p>-S  用绝对而非相对数值列出TCP关联数。  </p>
<p>-t  在每列倾倒资料上不显示时间戳记。  </p>
<p>-tt  在每列倾倒资料上显示未经格式化的时间戳记。  </p>
<p>-T<数据包类型>  强制将表达方式所指定的数据包转译成设置的数据包类型。 </p>
<p>-v  详细显示指令执行过程。  </p>
<p>-vv  更详细显示指令执行过程。  </p>
<p>-x  用十六进制字码列出数据包资料。  </p>
<p>-w<数据包文件>  把数据包数据写入指定的文件。</p>
<h3 id="testparm"><a href="#testparm" class="headerlink" title="***testparm"></a>***<strong>testparm</strong></h3><p><strong>功能说明</strong>:测试Samba的设置是否正确无误。  </p>
<p><strong>语法</strong>:testparm [-s][配置文件][<主机名称><IP地址>]  </p>
<p><strong>补充说明</strong>:执行testparm指令可以简单测试Samba的配置文件，假如测试结果无误，Samba常驻服务就能正确载入该设置值，但并不保证其后的操作如预期般一切正常。  </p>
<p><strong>参数</strong>:  </p>
<p>-s  不显示提示符号等待用户按下Enter键，就直接列出Samba服务定义信息。</p>
<h3 id="traceroute"><a href="#traceroute" class="headerlink" title="*** traceroute"></a>*** <strong>traceroute</strong></h3><p><strong>功能说明</strong>:显示数据包到主机间的路径。  </p>
<p><strong>语法</strong>:traceroute [-dFlnrvx][-f<存活数值>][-g<网关>...][-i<网络界面>][-m<存活数值>][-p<通信端口>][-s<来源地址>][-t<服务类型>][-w<超时秒数>][主机名称或IP地址][数据包大小]  </p>
<p><strong>补充说明</strong>:traceroute指令让你追踪网络数据包的路由途径，预设数据包大小是40Bytes，用户可另行设置。  </p>
<p><strong>参数</strong>:  </p>
<p>-d  使用Socket层级的排错功能。  </p>
<p>-f<存活数值>  设置第一个检测数据包的存活数值TTL的大小。  </p>
<p>-F  设置勿离断位。  </p>
<p>-g<网关>  设置来源路由网关，最多可设置8个。  </p>
<p>-i<网络界面>  使用指定的网络界面送出数据包。  </p>
<p>-I  使用ICMP回应取代UDP资料信息。  </p>
<p>-m<存活数值>  设置检测数据包的最大存活数值TTL的大小。 </p>
<p>-n  直接使用IP地址而非主机名称。  </p>
<p>-p<通信端口>  设置UDP传输协议的通信端口。  </p>
<p>-r  忽略普通的Routing Table，直接将数据包送到远端主机上。  </p>
<p>-s<来源地址>  设置本地主机送出数据包的IP地址。  </p>
<p>-t<服务类型>  设置检测数据包的TOS数值。  </p>
<p>-v  详细显示指令的执行过程。  </p>
<p>-w<超时秒数>  设置等待远端主机回报的时间。  </p>
<p>-x  开启或关闭数据包的正确性检验。</p>
<h3 id="tty"><a href="#tty" class="headerlink" title="***tty"></a>***<strong>tty</strong></h3><p><strong>功能说明</strong>:显示终端机连接标准输入设备的文件名称。  </p>
<p><strong>语法</strong>:tty [-s][--help][--version]  </p>
<p><strong>补充说明</strong>:在Linux操作系统中，所有外围设备都有其名称与代号，这些名称代号以特殊文件的类型存放于/dev目录下。你可以执行tty指令查询目前使用的终端机的文件名称。  </p>
<p><strong>参数</strong>:  </p>
<p>-s或--silent或--quiet  不显示任何信息，只回传状态代码。  </p>
<p>--help  在线帮助。  </p>
<p>--version  显示版本信息。</p>
<h3 id="uuname"><a href="#uuname" class="headerlink" title="***uuname"></a>***<strong>uuname</strong></h3><p><strong>功能说明</strong>:显示全部的UUCP远端主机。  </p>
<p><strong>语法</strong>:uuname [-alv][-I<配置文件>][--help]  </p>
<p><strong>补充说明</strong>:uuname可显示UUCP远端主机。 </p>
<p><strong>参数</strong>: </p>
<p> -a或--aliases  显示别名。  </p>
<p>-I<配置文件>或--config<配置文件>  指定程序的配置文件。  </p>
<p>-l或--local  显示本机名称。  </p>
<p>-v或--version  显示版本信息。  </p>
<p>--help  显示帮助。</p>
<h3 id="wall-write-all"><a href="#wall-write-all" class="headerlink" title="***wall(write all)"></a>***<strong>wall(write all)</strong></h3><p><strong>功能说明</strong>:传送信息。  </p>
<p><strong>语法</strong>:wall [公告信息]  </p>
<p><strong>补充说明</strong>:通过wall指令可将信息发送给每位同意接收公众信息的终端机用户，若不给予其信息内容，则wall指令会从标准输入设备读取数据，然后再把所得到的数据传送给所有终端机用户。</p>
<h3 id="write"><a href="#write" class="headerlink" title="***write"></a>***<strong>write</strong></h3><p><strong>功能说明</strong>:传送信息。  </p>
<p><strong>语法</strong>:write [用户名称][终端机编号]  </p>
<p><strong>补充说明</strong>:通过write指令可传递信息给另一位登入系统的用户，当输入完毕后，键入EOF表示信息结束，write指令就会将信息传给对方。如果接收信息的用户不只登入本地主机一次，你可以指定接收信息的终端机编号。</p>
<h3 id="ytalk"><a href="#ytalk" class="headerlink" title="*** ytalk"></a>*** <strong>ytalk</strong></h3><p><strong>功能说明</strong>:与其他用户交谈。  </p>
<p><strong>语法</strong>:ytalk [-isxY][-h<主机名称IP地址>][用户名称...] </p>
<p><strong>补充说明</strong>:通过ytalk指令，你可以和其他用户线上交谈，如果想和其他主机的用户交谈，在用户名称后加上其主机名称或IP地址即可。  </p>
<p><strong>参数</strong>:  </p>
<p>-h<主机名称IP地址>  指定交谈对象所在的远端主机。  </p>
<p>-i  用提醒声响代替显示信息。  </p>
<p>-s  在指令提示符号先开启ytalk交谈窗。  </p>
<p>-x  关闭图形界面。  </p>
<p>-Y  所有必须回应yes或no的问题，都必须用大写英文字母"Y"或"N"回答。</p>
<h3 id="arpwatch-ARP-watcher"><a href="#arpwatch-ARP-watcher" class="headerlink" title="***arpwatch(ARP watcher)"></a>***<strong>arpwatch(ARP watcher)</strong></h3><p><strong>功能说明</strong>:监听网络上ARP的记录。  </p>
<p><strong>语法</strong>:arpwatch [-d][-f<记录文件>][-i<接口>][-r<记录文件>]  </p>
<p><strong>补充说明</strong>:ARP(Address Resolution Protocol)是用来解析IP与网络装置硬件地址的协议。arpwatch可监听区域网络中的ARP数据包并记录，同时将监听到的变化通过E-mail来报告。  </p>
<p><strong>参数</strong>:  </p>
<p>-d  启动排错模式。 </p>
<p>-f<记录文件>  设置存储ARP记录的文件，预设为/var/arpwatch/arp.dat。  </p>
<p>-i<接口>  指定监听ARP的接口，预设的接口为eth0。  </p>
<p>-r<记录文件>  从指定的文件中读取ARP记录，而不是从网络上监听。</p>
<p>**### *<strong>apachectl(Apache control interface)</strong>   </p>
<p><strong>功能说明</strong>:可用来控制Apache HTTP服务器的程序。  </p>
<p><strong>语法</strong>:apachectl [configtest][fullstatus][graceful][help][restart][start][status][stop]  </p>
<p><strong>补充说明</strong>:apachectl是slackware内附Apache HTTP服务器的script文件，可供管理员控制服务器，但在其他Linux的Apache HTTP服务器不一定有这个文件。  </p>
<p><strong>参数</strong>:  </p>
<p>configtest  检查设置文件中的语法是否正确。  </p>
<p>fullstatus  显示服务器完整的状态信息。  </p>
<p>graceful  重新启动Apache服务器，但不会中断原有的连接。  </p>
<p>help  显示帮助信息。  </p>
<p>restart  重新启动Apache服务器。  </p>
<p>start  启动Apache服务器。  </p>
<p>status  显示服务器摘要的状态信息。  </p>
<p>stop  停止Apache服务器。</p>
<h3 id="smbclient-samba-client"><a href="#smbclient-samba-client" class="headerlink" title="***smbclient(samba client)"></a>***<strong>smbclient(samba client)</strong></h3><p><strong>功能说明</strong>:可存取SMB/CIFS服务器的用户端程序。  </p>
<p><strong>语法</strong>:smbclient [网络资源][密码][-EhLN][-B][-d<排错层级>][-i<范围>][-I<IP地址>][-l<记录文件>][-M<NetBIOS名称>][-n][-O<连接槽选项>][-p][-R<名称解析顺序>][-s<目录>][-t<服务器字码>][-T][-U<用户名称>][-W<工作群组>]  </p>
<p><strong>补充说明</strong>:SMB与CIFS为服务器通信协议，常用于Windows95/98/NT等系统。smbclient可让Linux系统存取Windows系统所分享的资源。 </p>
<p><strong>参数</strong>:  </p>
<p>[网络资源] [网络资源]的格式为//服务器名称/资源分享名称。  </p>
<p>[密码]  输入存取网络资源所需的密码。  </p>
<p>-B<IP地址>  传送广播数据包时所用的IP地址。  </p>
<p>-d<排错层级>  指定记录文件所记载事件的详细程度。  </p>
<p>-E  将信息送到标准错误输出设备。  </p>
<p>-h  显示帮助。  </p>
<p>-i<范围>  设置NetBIOS名称范围。  </p>
<p>-I<IP地址>  指定服务器的IP地址。  </p>
<p>-l<记录文件>  指定记录文件的名称。  </p>
<p>-L  显示服务器端所分享出来的所有资源。  </p>
<p>-M<NetBIOS名称>  可利用WinPopup协议，将信息送给选项中所指定的主机。  </p>
<p>-n<NetBIOS名称>  指定用户端所要使用的NetBIOS名称。  </p>
<p>-N  不用询问密码。  </p>
<p>-O<连接槽选项>  设置用户端TCP连接槽的选项。  </p>
<p>-p<TCP连接端口>  指定服务器端TCP连接端口编号。  </p>
<p>-R<名称解析顺序>  设置NetBIOS名称解析的顺序。  </p>
<p>-s<目录>  指定smb.conf所在的目录。  </p>
<p>-t<服务器字码>  设置用何种字符码来解析服务器端的文件名称。 </p>
<p> -T<tar选项>  备份服务器端分享的全部文件，并打包成tar格式的文件。  </p>
<p>-U<用户名称>  指定用户名称。  </p>
<p>-W<工作群组>  指定工作群组名称。</p>
<h3 id="pppsetup"><a href="#pppsetup" class="headerlink" title="*** pppsetup"></a>*** <strong>pppsetup</strong></h3><p><strong>功能说明</strong>:设置PPP连线。  </p>
<p><strong>语法</strong>:pppsetup  </p>
<p><strong>补充说明</strong>:这是Slackware发行版内附程序，它具有互动式的问答界面，让用户轻易完成PPP的连线设置。</p>
<h2 id="电子邮件与新闻组"><a href="#电子邮件与新闻组" class="headerlink" title="电子邮件与新闻组"></a>电子邮件与新闻组</h2><h3 id="archive"><a href="#archive" class="headerlink" title="***archive"></a>***archive</h3><p><strong>功能说明</strong>:新闻组文件备存程序。  </p>
<p><strong>语法</strong>:archive [-fmr][-a<备存目录>][-i<索引文件>][源文件]  </p>
<p><strong>补充说明</strong>:archive会读取新闻组的文件，然后加以备存。archive备存时，会保存[源文件]中文件的目录阶层。  </p>
<p><strong>参数</strong>:  </p>
<p>-a<备存目录>  指定备存的目录。  </p>
<p>-f  将阶层目录名称的阶层关系取消，以句点来取代斜线。  </p>
<p>-i<索引文件>  制作文件索引。  </p>
<p>-m  将文件复制到目的地，建立文件连接后，以连接取代原始的文件。  </p>
<p>-r  archive预设的标准错误输出为/var/errlog。</p>
<p>-r参数可取消此功能。  </p>
<p>[源文件]  在源文件中指定要备份的文件。</p>
<h3 id="ctlinnd-control-the-internet-news-daemon"><a href="#ctlinnd-control-the-internet-news-daemon" class="headerlink" title="***ctlinnd(control the internet news daemon)"></a>***ctlinnd(control the internet news daemon)</h3><p><strong>功能说明</strong>:设置INN新闻组服务器。  </p>
<p><strong>语法</strong>:ctlinnd [-hs][-t<超时秒数>][控制命令<设置数值>...]  </p>
<p><strong>补充说明</strong>:通过ctlinnd指令，可以对新闻组服务器这项常驻服务下达控制命令，直接设置相关数值。  </p>
<p><strong>参数</strong>:  </p>
<p>-h  在线帮助。  </p>
<p>-s  不显示指令执行过程。  </p>
<p>-t<超时秒数>  设置等待服务器回报的时间，单位以秒计算，超过此一时间则为超时。</p>
<h3 id="elm"><a href="#elm" class="headerlink" title="***elm"></a>***elm</h3><p><strong>功能说明</strong>:E-mail管理程序。  </p>
<p><strong>语法</strong>:elm [-s<邮件主题>][收信人别名或地址]<[要输入的文件] 或          elm [-hmvz][-f<目录>][-i<文件名>]  </p>
<p><strong>补充说明</strong>:elm为全屏文字模式的电子邮件管理程序。与mail相比，elm提供较易操作的界面，但仍不及pine来得友善。  </p>
<p><strong>参数</strong>:  </p>
<p>-s<邮件主题>  指定新邮件的邮件主题。  </p>
<p>-f<目录>  开启程序时，读取指定的目录。  </p>
<p>-h  显示帮助。  </p>
<p>-i<文件名>  将文件内容插入送出的邮件中。  </p>
<p>-m  进入elm后，不显示指令说明。  </p>
<p>-v  显示elm的版本信息。 </p>
<p>-z  若收件信箱没有邮件，则不启动elm程序。</p>
<h3 id="getlist"><a href="#getlist" class="headerlink" title="***getlist"></a>***getlist</h3><p><strong>功能说明</strong>:下载新闻组清单。  </p>
<p><strong>语法</strong>:getlist [-h<新闻组服务器>][-p<通信端口>][群组类型<范本样式><群组名称>]  </p>
<p><strong>补充说明</strong>:getlist指令会从新闻服务器下载新闻组清单，并把清单输出到标准输出设备。  </p>
<p><strong>参数</strong>:  </p>
<p>-h<新闻组服务器>  指定欲连接的新闻组服务器。  </p>
<p>-p<通信端口>  设置连接新闻组服务器的通讯端口。</p>
<h3 id="inncheck-inn-check"><a href="#inncheck-inn-check" class="headerlink" title="***inncheck(inn check)"></a>***inncheck(inn check)</h3><p><strong>功能说明</strong>:检查inn相关配置文件的语法是否正确。  </p>
<p><strong>语法</strong>:inncheck [-afv][-pedantic][-perm][-noperm][文件]  </p>
<p><strong>补充说明</strong>:inncheck会检查inn配置文件的语法是否正确，但不会实际修改这些配置文件。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  不管是否出现[文件]参数，仍然检查全部的配置文件。  </p>
<p>-f  若发现配置文件有误，则列出可修正错误的指令。  </p>
<p>-v  执行时显示详细的信息。  </p>
<p>-pedantic  以较为严格的方式来检查。  </p>
<p>-perm  检查文件权限是否有误。  </p>
<p>--noperm  不检查文件的权限设置。 </p>
<h3 id="mail"><a href="#mail" class="headerlink" title="***mail"></a>***mail</h3><p><strong>功能说明</strong>:E-mail管理程序。  </p>
<p><strong>语法</strong>:mail [-iInNv][-b<地址>][-c<地址>][-f<邮件文件>][-s<邮件主题>][-u<用户帐号>][收信人地址]  </p>
<p><strong>补充说明</strong>:mail是一个文字模式的邮件管理程序，操作的界面不像elm或pine那么容易使用，但功能尚称完整。  </p>
<p><strong>参数</strong>:  </p>
<p>-b<地址>  指定密件副本的收信人地址。  </p>
<p>-c<地址>  指定副本的收信人地址。  </p>
<p>-f<邮件文件>  读取指定邮件文件中的邮件。  </p>
<p>-i  不显示终端发出的信息。  </p>
<p>-I  使用互动模式。  </p>
<p>-n  程序使用时，不使用mail.rc文件中的设置。  </p>
<p>-N  阅读邮件时，不显示邮件的标题。  </p>
<p>-s<邮件主题>  指定邮件的主题。  </p>
<p>-u<用户帐号>  读取指定用户的邮件。  </p>
<p>-v  执行时，显示详细的信息。</p>
<h3 id="mailconf"><a href="#mailconf" class="headerlink" title="***mailconf"></a>***mailconf</h3><p><strong>功能说明</strong>:Sendmail设置程序。  </p>
<p><strong>语法</strong>:mailconf [--addvdom<虚拟网络>][--delvdom<虚拟网络>][--help]  </p>
<p><strong>补充说明</strong>:mailconf实际为linuxconf的符号连接，用来设置Sendmail相关的选项。执行mailconf时，不管目前的环境为指令列模式或是X Window，都会出现图形界面的设置画面，让您轻松地完成设置。所有指令列的参数都可以在图形界面中设置。建议不用加上任何参数，直接进入mailconf的图形界面来设置。</p>
<h3 id="mailq-mail-queue"><a href="#mailq-mail-queue" class="headerlink" title="***mailq(mail queue)"></a>***mailq(mail queue)</h3><p><strong>功能说明</strong>:显示待寄邮件的清单。  </p>
<p><strong>语法</strong>:mailq [-q]  </p>
<p><strong>补充说明</strong>:mailq可列出待寄邮件的清单，包括邮件ID，邮件大小，邮件保存时间，寄信人，收信人，以及邮件无法寄出的原因，提供管理员参考的信息。mailq实际上是执行sendmail -bp指令。 </p>
<p> <strong>参数</strong>:  </p>
<p>-v  显示较详细的信息。</p>
<h3 id="messages"><a href="#messages" class="headerlink" title="***messages"></a>***messages</h3><p><strong>功能说明</strong>:查看信箱中的邮件数。  </p>
<p><strong>语法</strong>:messages [邮件目录或文件]  </p>
<p><strong>补充说明</strong>:messages实际上是一个script文件，可用来检查信箱中的邮件数。若不指定[邮件目录或文件]参数，则显示目前收件信箱中的邮件数。</p>
<h3 id="metamail"><a href="#metamail" class="headerlink" title="***metamail"></a>***metamail</h3><p><strong>功能说明</strong>:负责处理非文字E-mail的程序。  </p>
<p><strong>语法</strong>:metafile [-bBdehpPqrRTwxyz][-c<邮件内容类型>][-f<寄信人地址>][-m<邮件管理程序名称>][-s<邮件主题>][文件名]  </p>
<p><strong>补充说明</strong>:当E-mail管理程序遇到非ISO-8859-1标准文字的邮件内容，而不知道要如何处理的时候，即调用metamail。  </p>
<p><strong>参数</strong>:  </p>
<p>-b  邮件只有内文，没有表头。  </p>
<p>-B  在背景显示信息。  </p>
<p>-c<邮件内容类型>  不要读取邮件表头的"Content-type"栏位，而去读取<邮件内容类型>中的设置，以决定要调用哪个程序来处理邮件信息。  </p>
<p>-d  metamail在调用其他程序显示信息前，不需向用户确认。  </p>
<p>-e  删除内文前端的空白行。  </p>
<p>-f<寄信人地址>  不要读取邮件表头中的寄信人地址，而去读取选项中的设置。  </p>
<p>-h  使用metamail的邮件管理程序名称。  </p>
<p>-m<邮件管理程序名称>  记录调用metamail的邮件管理程序名称。  </p>
<p>-p  将显示内容送给more指令处理之后，再送到输出设备。  </p>
<p>-P  与-p参数功能类似，但会在信息结束显示"Press RETURN to go on"字符串。 </p>
<p>-q  metamail在调用其他程序来显示信息前，不用在屏幕上显示相关的信息。  </p>
<p>-r  metamail预设无法让root用户执行。  </p>
<p>-R  显示信息前先清除屏幕。  </p>
<p>-s<邮件主题>  不要读取邮件表头中的邮件主题，而去读取选项中的设置。  </p>
<p>-T  若要在一个新的终端机模拟视窗中重新启动metamail，则metamail必须以递归模式来调用程序本身，这时便需要使用-T参数。  </p>
<p>-w  不要读取mailcap中的设置，而直接处理邮件，并将数据存入文件中。  </p>
<p>-x  不要以终端机模式来执行，即不使用互动模式。  </p>
<p>-y  抽出邮件内文中MIME格式的部分。  </p>
<p>-z  程序结束时将输入的文件删除。</p>
<h3 id="mutt"><a href="#mutt" class="headerlink" title="***mutt"></a>***mutt</h3><p><strong>功能说明</strong>:E-mail管理程序。  </p>
<p><strong>语法</strong>:mutt [-hnpRvxz][-a<文件>][-b<地址>][-c<地址>][-f<邮件文件>][-F<配置文件>][-H<邮件草稿>][-i<文件>][-m<类型>][-s<主题>][邮件地址]  </p>
<p><strong>补充说明</strong>:mutt是一个文字模式的邮件管理程序，提供了全屏幕的操作界面。  </p>
<p><strong>参数</strong>:  </p>
<p>-a<文件>  在邮件中加上附加文件。  </p>
<p>-b<地址>  指定密件副本的收信人地址。  </p>
<p>-c<地址>  指定副本的收信人地址。  </p>
<p>-f<邮件文件>  指定要载入的邮件文件。  </p>
<p>-F<配置文件>  指定mutt程序的设置文件，而不读取预设的.muttrc文件。  </p>
<p>-h  显示帮助。 </p>
<p>-H<邮件草稿>  将指定的邮件草稿送出。  </p>
<p>-i<文件>  将指定文件插入邮件内文中。  </p>
<p>-m<类型>  指定预设的邮件信箱类型。  </p>
<p>-n  不要去读取程序培植文件(/etc/Muttrc)。  </p>
<p>-p  在mutt中编辑完邮件后，而不想将邮件立即送出，可将该邮件暂缓寄出。  </p>
<p>-R  以只读的方式开启邮件文件。  </p>
<p>-s<主题>  指定邮件的主题。  </p>
<p>-v  显示mutt的版本信息以及当初编译此文件时所给予的参数。  </p>
<p>-x  模拟mailx的编辑方式。  </p>
<p>-z  与-f参数一并使用时，若邮件文件中没有邮件即不启动mutt。</p>
<h3 id="nntpget"><a href="#nntpget" class="headerlink" title="***nntpget"></a>***nntpget</h3><p><strong>功能说明</strong>:下载新闻组文章。  </p>
<p><strong>语法</strong>:nntpget [-ov][-d<组类型清单>][-f<文件或目录>][-n<组名称清单>][-t<时间日期>][-u<文件或目录>][新闻组服务器]  </p>
<p><strong>补充说明</strong>:执行nntpget指令将从指定的新闻组服务器下载文章。nntpget指令会从标准输入设备读取信息识别码，而下载的新闻文章则呈现到标准输出设备。  </p>
<p><strong>参数</strong>:  </p>
<p>-d<组类型清单>  指定新闻组类型为distribution的清单。  </p>
<p>-f<文件或目录>  下载其更改时间较指定文件或目录的更改时间更接近现在的新闻文章。  </p>
<p>-n<组名称清单>  指定新闻组名称的清单。  </p>
<p>-o  下载本地主机所没有的新闻文章。 </p>
<p>-t<时间日期>  指定时间与日期，较该日期时间更新的新闻文章都会被下载。  </p>
<p>-u<文件或目录>  此参数的效果和指定"-f"参数类似，但它在成功下载文章之后会去更改指定文件或木的更改时间，便于下次再作为参考。  </p>
<p>-v  当指令执行时，把每篇文章的信息识别码都送到标准输出。本参数需配合参数"-o"使用。</p>
<h3 id="pine"><a href="#pine" class="headerlink" title="***pine"></a>***pine</h3><p><strong>功能说明</strong>:收发电子邮件，浏览新闻组。  </p>
<p><strong>语法</strong>:pine [-ahikorz][-attach<附件>][-attach_and_delete<附件>][-attachlist<附件清单>][-c<邮件编号>][-conf][-create_lu<地址薄><排序法>][-f<收件箱>][-F<文件>][-I<暂存快捷键>][-n<邮件编号>][-nr][-p<环境文件>][-pinerc<输出文件>][-P<配置文件>][-sort<排序法>][-url<URL>][-<功能选项>=<设置值>][用户名称或电子邮件地址...]  </p>
<p><strong>补充说明</strong>:pine是个以显示导向为住的邮件处理程序，包括一般电子邮件和新闻组的文章。pine也支持MIME格式，可让用户将MIME的对象保存成文件，甚至指定外挂程序直接开启对象。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  在UWIN中使用匿名模式。  </p>
<p>-attach<附件>  把指定的文件附加在信件里，一并夹带寄出。  </p>
<p>-attach_and_delete  此参数的效果和指定"-attach"参数类似，但在信件寄出后<附件>会将指定的文件删除。  </p>
<p>-attachlist<附件清单>  设置一份文件清单，把该清单内的文件全部附加到信件中，夹带寄出。  -c<邮件编号>  直接开启指定编号的邮件。  </p>
<p>-conf  产生pine.conf的范例文件，并输出到标准输出设备。  </p>
<p>-create_lu<地址薄><排序法>  将地址薄以指定的排序法排序，产生.addressbook.lu索引文件。  </p>
<p>-f<收件箱>  开启指定的接收信件箱，而非预设的INBOX收件箱。 </p>
<p> -F<文件>  直接浏览指定文件的内容。 </p>
<p>-h  在线帮助。  </p>
<p>-i  直接进入收件箱。  </p>
<p>-I<暂存快捷键>  设置进入pine就要执行的命令，该命令以快捷键的按键指定。  </p>
<p>-k  支持键盘上的F1,F2...等功能，而非使用一般快捷键。  </p>
<p>-n<邮件编号>  设置现在的邮件编号。  </p>
<p>-nr  使用UWIN的特殊模式。  </p>
<p>-o  设置收件箱为只读。  </p>
<p>-p<环境文件>  另外指定pine的环境文件。 </p>
<p>-pinerc<输出文件>  读取.pinerc环境文件的内容并输出成文件保存起来，您必须指定输出文件的名称。  </p>
<p>-r  展示模式。  </p>
<p>-sort<排序法>  把收件箱内的信件依指定的方式排序。  </p>
<p>-url<URL>  直接开启给予的URL。  </p>
<p>-z  让pine可被Ctrl+z中断，暂存在后台作业里。  </p>
<p>-<功能选项>=<设置值>  暂时指定各项功能的设置值。</p>
<h3 id="slrn"><a href="#slrn" class="headerlink" title="***slrn"></a>***slrn</h3><p><strong>功能说明</strong>:新闻组阅读程序。  </p>
<p><strong>语法</strong>:slrn [-Cdnp][-create][-help][-f<新闻组文件>][-h<服务器>][--version]  </p>
<p><strong>补充说明</strong>:slrn是一个很容易使用的新闻组阅读程序，提供全屏幕的图形操作界面，让用户能轻松地阅读与管理新闻组。  </p>
<p><strong>参数</strong>: </p>
<p>-C  使用彩色模式。  </p>
<p>-d  下载组清单时，也一并下载每个组的说明。  </p>
<p>-f<新闻组文件>  指定要存储组内容的文件，预设的文件名为.newsrc。  </p>
<p>-h<服务器>  指定新闻组服务器。  </p>
<p>-n  不要检查是否有新的新闻组。  </p>
<p>-p  设置新闻组服务器的连接端口编号，预设为119。  </p>
<p>-create  第一次连上某台新闻组服务器时，必须使用此参数，以便下载服务器中的组清单，并保存在指定的newsrc文件中。  </p>
<p>-help  显示帮助。  </p>
<p>--version  显示版本信息。</p>
<h2 id="X-WINDOWS-SYSTEM"><a href="#X-WINDOWS-SYSTEM" class="headerlink" title="X WINDOWS SYSTEM"></a>X WINDOWS SYSTEM</h2><h3 id="reconfig"><a href="#reconfig" class="headerlink" title="*** reconfig"></a>*** <strong>reconfig</strong></h3><p><strong>功能说明</strong>:转换配置文件。  </p>
<p><strong>语法</strong>:reconfig [Xconfig] XF86Config  </p>
<p><strong>补充说明</strong>:reconfig指令能将XFree86 3.1及以前的版本的配置文件，转成新的格式。现今的配置文件XF86Config，存放在/etc或/etc/X11目录下，它的格式包含了更多的信息，因此在转换之后，您还须自行编辑设置文件，输入不足的部分。</p>
<h3 id="startx-start-X-Window"><a href="#startx-start-X-Window" class="headerlink" title="***startx(start X Window)"></a>***<strong>startx(start X Window)</strong></h3><p><strong>功能说明</strong>:启动X Window。  </p>
<p><strong>语法</strong>:startx [程序][--服务器设置]  </p>
<p><strong>补充说明</strong>:startx为启动X Window的script文件，实际上启动X Window的程序为xinit。  </p>
<p><strong>参数</strong>:  </p>
<p>[程序]  此处所指定的[程序]为X Window所要执行程序的配置文件。 </p>
<p>[--服务器设置]  startx预设会去读取.xerverrc中的配置，决定启动X Window的方式。</p>
<h3 id="Xconfigurator"><a href="#Xconfigurator" class="headerlink" title="***Xconfigurator"></a>***<strong>Xconfigurator</strong></h3><p><strong>功能说明</strong>:设置XFree86。  </p>
<p><strong>语法</strong>:Xconfigurator [--card<显卡型号>][--expert][--help][--hsync"<水平扫描频率>"][-kickstart][--monitor<显示器型号>][--server<显示服务器>][--vsync"<垂直扫描频率>"]  </p>
<p><strong>补充说明</strong>:这是Red Hat公司遵循GPL规则所开发的程序，它具有互动式操作界面，您可以轻易地利用方向键和空格键等，设置显卡和显示器，并选择欲使用的画面分辨率与色彩深度，最后保存配置文件XF86Config。  </p>
<p><strong>参数</strong>:  </p>
<p>--card<显卡型号>  设置显卡的型号，可用"--help"参数查询型号列表。  </p>
<p>--expert  启用专家模式，增加用户得以自行选择的项目而非由程序完全自动检测。 </p>
<p>--help  在线帮助。  </p>
<p>--hsync"<水平扫描频率>"  设置水平扫描频率。  </p>
<p>--kickstart  启用全自动模式。  </p>
<p>--monitor<显示器型号>  设置显示器型号，可用"--help"参数查询型号列表。  </p>
<p>--server<显示服务器>  设置显示服务器。  </p>
<p>--vsync"<垂直扫描频率>"  设置垂直扫描频率。</p>
<h3 id="XF86Setup"><a href="#XF86Setup" class="headerlink" title="***XF86Setup"></a>***XF86Setup</h3><p><strong>功能说明</strong>:设置XFee86。  </p>
<p><strong>语法</strong>:XF86Setup [-display<主机名称或IP地址>:<显示器编号>][-nodialog][-sync]  </p>
<p><strong>补充说明</strong>:这是Linux系统用来设置XFee86的程序，它会进入图形模式，通过互动操作界面，让用户轻松完成XFee86环境的设置。  </p>
<p><strong>参数</strong>:  </p>
<p>-display<主机名称或IP地址>:<显示器编号>  指定显示XF86Setup设置画面的主机名称以及欲在该主机上的哪个显示器显示画面。  </p>
<p>-nodialog  执行XF86Setup时，不显示交谈窗，直接以文字模式提出询问。  </p>
<p>--sync  和X Server进行数据同步传输。</p>
<h3 id="xlsatoms"><a href="#xlsatoms" class="headerlink" title="***xlsatoms"></a>***<strong>xlsatoms</strong></h3><p><strong>功能说明</strong>:列出X Server定义的成分。 </p>
<p> <strong>语法</strong>:xlsatoms [-display<显示器编号>][-format<输出格式>][-name<成分名称>][-range<列表范围>]  </p>
<p><strong>补充说明</strong>:执行xlsatoms指令会列出X Server内部所有定义的成分，每个成分都有其编号，您可利用参数设置列表范围，或直接指定欲查询的成分名称。  </p>
<p><strong>参数</strong>:  </p>
<p>-display<显示器编号>  指定X Server连接的显示器编号，该编号由"0"开始计算， 依序递增。  </p>
<p>-format<输出格式>  设置成分清单的列表格式，您可使用控制字符改变显示样式。  </p>
<p>-name<成分名称>  列出指定的成分。  </p>
<p>-range<列表范围>  设置成分清单的列表范围。</p>
<h3 id="xlsclients"><a href="#xlsclients" class="headerlink" title="***xlsclients"></a>***xlsclients</h3><p><strong>功能说明</strong>:列出显示器中的客户端应用程序。  </p>
<p><strong>语法</strong>:xlsclients [-al][-display<显示器编号>][-m<最大指令长度>]  </p>
<p><strong>补充说明</strong>:执行xlsclients指令可列出某个显示器中，正在执行的客户端应用程序信息。  </p>
<p><strong>参数</strong>:  </p>
<p>-a  列出所有显示器的客户端应用程序信息。  </p>
<p>-display<显示器编号>  指定X Server连接的显示器编号，该编号由"0"开始计算，依序递增。  </p>
<p>-l  使用详细格式列表。  </p>
<p>-m<最大指令长度>  设置显示指令信息的最大长度，单位以字符计算。</p>
<h3 id="xlsfonts"><a href="#xlsfonts" class="headerlink" title="***xlsfonts"></a>***<strong>xlsfonts</strong></h3><p><strong>功能说明</strong>:列出X Server使用的字体。  </p>
<p><strong>语法</strong>:xlsfonts [-1Clmou][-display<主机名称或IP地址>:<显示器编号>][-fn<范本样式>][-ll][-lll][-n<显示栏位数>][-w<每列字符数>]  </p>
<p><strong>补充说明</strong>:执行xlsfonts指令会显示目前X Server可使用的字体，也能使用范本样式仅列出的符合条件的字体。  </p>
<p><strong>参数</strong>:  </p>
<p>-1  仅用单一栏位列出字体清单。  </p>
<p>-C  使用多个栏位列出字体清单。  </p>
<p>-display<主机名称或IP地址>:<显示器编号>  指定显示XF86Setup设置画面的主机名称以及欲放在该主机机上的哪个显示器画面。  </p>
<p>-fn<范本样式>  只列出符合范本样式指定的条件的字体。  </p>
<p>-l  除字体名称外，同时列出字体的属性。  </p>
<p>-ll  此参数的效果和指定"l"参数类似，但显示更详细的信息。  </p>
<p>-lll  此参数的效果和指定"ll"参数类似，但显示更详细的信息。  </p>
<p>-m  配合参数"-l"使用时，一并列出字体大小的上下限。  </p>
<p>-n<显示栏位数>  设置每列显示的栏位数。 </p>
<p> -o  以OpenFont的形式列出字体清单。  </p>
<p>-u  列出字体清单时不依照其名称排序。  </p>
<p>-w<每列字符数>  设置每列的最大字符数。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="yes"><a href="#yes" class="headerlink" title="***yes"></a>***yes</h3><p><strong>1.命令说明</strong> 输出回应的字符串。yes回应“y”字符，后者指定字符。  </p>
<p><strong>2.路径</strong> /usr/bin/yes </p>
<p><strong>3.语法</strong> yes [--help] [--version] string </p>
<p><strong>4.参数</strong> --help 显示帮助字符。 --version 显示版本信息  </p>
<p><strong>5.相关命令</strong> 无 </p>
<p><strong>6.举例说明</strong> [root@bixuan/]#yes "OK"  //回应“OK”字符串。 命令执行结果如下： </p>
<p>OK </p>
<p>OK </p>
<p>OK  </p>
<p>... </p>
<p>Ctrl+c //按Ctrl+c键中断 </p>
<h3 id="Expect"><a href="#Expect" class="headerlink" title="***Expect"></a>***Expect</h3><p><strong>功能说明</strong>：Expect是Unix系统中用来进行自动化控制和测试的软件工具，由Don Libes制作，作为Tcl脚本语言的一个扩展，应用在交互式软件中如<a href="http://man.linuxde.net/telnet">telnet</a>，<a href="http://man.linuxde.net/ftp">ftp</a>，<a href="http://man.linuxde.net/passwd">passwd</a>，<a href="http://man.linuxde.net/fsck">fsck</a>，<a href="http://man.linuxde.net/rlogin">rlogin</a>，tip，<a href="http://man.linuxde.net/ssh">ssh</a>等等。该工具利用Unix伪终端包装其子进程，允许任意程序通过终端接入进行自动化控制；也可利用Tk工具，将交互程序包装在X11的图形用户界面中。</p>
<p><strong>补充说明</strong>：Expect含有利用正则表达式进行模式匹配以及通用的编程功能，允许简单的脚本智能地管理如下工具：telnet,ftp和ssh（这些工具都缺少编程的功能），宏以及其它程序。Expect脚本的出现使得这些老的软件工具有了新的功能和更多的灵活性。</p>
<p><strong>实例</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 向远程服务器请求打开一个telnet会话，并等待服务器询问用户名</span><br><span class="line">spawn telnet $servername</span><br><span class="line">expect &quot;username:&quot;</span><br><span class="line"></span><br><span class="line"># 输入用户名，并等待服务器询问密码</span><br><span class="line">send &quot;$username\r&quot;</span><br><span class="line">expect &quot;password:&quot;</span><br><span class="line"></span><br><span class="line"># 输入密码，并等待键入需要运行的命令</span><br><span class="line">send &quot;$password\r&quot;</span><br><span class="line">expect &quot;%&quot;</span><br><span class="line"></span><br><span class="line"># 输入预先定好的密码，等待运行结果</span><br><span class="line">send &quot;$password\r&quot;</span><br><span class="line">expect &quot;%&quot;</span><br><span class="line"></span><br><span class="line"> # 将运行结果存入到变量中，显示出来或者写到磁盘中</span><br><span class="line">set results $test(buffer)</span><br><span class="line"></span><br><span class="line"># 退出telnet会话，等待服务器的退出提示EOF</span><br><span class="line">send &quot;exit\r&quot;</span><br><span class="line">expect eof		</span><br></pre></td></tr></table></figure>

<h3 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="***firewall-cmd"></a>***firewall-cmd</h3><p><strong>功能说明</strong>：Linux上新用的防火墙软件，跟<a href="http://man.linuxde.net/iptables">iptables</a>差不多的工具</p>
<p><strong>语法</strong>：firewall-cmd [选项 ... ]</p>
<p><strong>补充说明</strong>：firewall-cmd 是 firewalld的字符界面管理工具，firewalld是centos7的一大特性，最大的好处有两个：支持动态更新，不用重启服务；第二个就是加入了防火墙的“zone”概念。</p>
<p>firewalld跟iptables比起来至少有两大好处：</p>
<ol>
<li>firewalld可以动态修改单条规则，而不需要像iptables那样，在修改了规则后必须得全部刷新才可以生效。</li>
<li>firewalld在使用上要比iptables人性化很多，即使不明白“五张表五条链”而且对TCP/<a href="http://man.linuxde.net/ip">ip</a>协议也不理解也可以实现大部分功能。</li>
</ol>
<p>firewalld自身并不具备防火墙的功能，而是和iptables一样需要通过内核的netfilter来实现，也就是说firewalld和 iptables一样，他们的作用都是用于维护规则，而真正使用规则干活的是内核的netfilter，只不过firewalld和iptables的结 构以及使用方法不一样罢了。</p>
<p><strong>参数</strong>：</p>
<p>-h, --help    # 显示帮助信息；</p>
<p>-V, --version # 显示版本信息. （这个选项不能与其他选项组合）；</p>
<p>-q, --quiet   # 不打印状态消息；</p>
<p>--state                # 显示firewalld的状态；</p>
<p>--reload               # 不中断服务的重新加载；</p>
<p>--complete-reload      # 中断所有连接的重新加载；</p>
<p>--runtime-to-permanent # 将当前防火墙的规则永久保存；</p>
<p>--check-config         # 检查配置正确性；</p>
<p>--get-log-denied         # 获取记录被拒绝的日志；</p>
<p>--set-log-denied=<value> # 设置记录被拒绝的日志，只能为 'all','unicast','broadcast','multicast','off' 其中的一个；</p>
<p><strong>配置管理</strong>：</p>
<p>firewall-cmd --version  # 查看版本</p>
<p>firewall-cmd --help     # 查看帮助</p>
<p><strong>查看设置</strong>：</p>
<p>firewall-cmd --state  # 显示状态</p>
<p>firewall-cmd --get-active-zones  # 查看区域信息</p>
<p>firewall-cmd --get-zone-of-interface=eth0  # 查看指定接口所属区域</p>
<p>firewall-cmd --panic-on  # 拒绝所有包</p>
<p>firewall-cmd --panic-off  # 取消拒绝状态</p>
<p>firewall-cmd --query-panic  # 查看是否拒绝</p>
<p>firewall-cmd --reload  # 更新防火墙规则</p>
<p>firewall-cmd --complete-reload  </p>
<p>两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务</p>
<p>将接口添加到区域，默认接口都在public</p>
<p>firewall-cmd --zone=public --add-interface=eth0</p>
<p>永久生效再加上 --permanent 然后reload防火墙</p>
<p>设置默认接口区域，立即生效无需重启</p>
<p>firewall-cmd --set-default-zone=public</p>
<p>查看所有打开的端口：</p>
<p>firewall-cmd --zone=dmz --list-ports</p>
<p>加入一个端口到区域：</p>
<p>firewall-cmd --zone=dmz --add-port=8080/tcp</p>
<p>若要永久生效方法同上</p>
<p>打开一个服务，类似于将端口可视化，服务需要在配置文件中添加，/etc/firewalld 目录下有services文件夹，这个不详细说了，详情参考文档</p>
<p>firewall-cmd --zone=work --add-service=smtp</p>
<p><strong>移除服务</strong>：</p>
<p>firewall-cmd --zone=work --remove-service=smtp</p>
<p>显示支持的区域列表</p>
<p>firewall-cmd --get-zones</p>
<p>设置为家庭区域</p>
<p>firewall-cmd --set-default-zone=home</p>
<p>查看当前区域</p>
<p>firewall-cmd --get-active-zones</p>
<p>设置当前区域的接口</p>
<p>firewall-cmd --get-zone-of-interface=enp03s</p>
<p>显示所有公共区域（public）</p>
<p>firewall-cmd --zone=public --list-all</p>
<p>临时修改网络接口（enp0s3）为内部区域（internal）</p>
<p>firewall-cmd --zone=internal --change-interface=enp03s</p>
<p>永久修改网络接口enp03s为内部区域（internal）</p>
<p>firewall-cmd --permanent --zone=internal --change-interface=enp03s</p>
<p><strong>服务管理</strong>：</p>
<p>显示服务列表  </p>
<p>Amanda, ftp, Samba和tftp等最重要的服务已经被FirewallD提供相应的服务，可以使用如下命令查看：</p>
<p>firewall-cmd --get-services</p>
<p>允许ssh服务通过</p>
<p>firewall-cmd --enable service=ssh</p>
<p>禁止SSH服务通过</p>
<p>firewall-cmd --disable service=ssh</p>
<p>打开TCP的8080端口</p>
<p>firewall-cmd --enable ports=8080/tcp</p>
<p>临时允许Samba服务通过600秒</p>
<p>firewall-cmd --enable service=samba --timeout=600</p>
<p>显示当前服务</p>
<p>firewall-cmd --list-services</p>
<p>添加HTTP服务到内部区域（internal）</p>
<p>firewall-cmd --permanent --zone=internal --add-service=http<br>firewall-cmd --reload     # 在不改变状态的条件下重新加载防火墙</p>
<p><strong>端口管理</strong>：</p>
<p>打开443/TCP端口</p>
<p>firewall-cmd --add-port=443/tcp</p>
<p>永久打开3690/TCP端口</p>
<p>firewall-cmd --permanent --add-port=3690/tcp</p>
<p>永久打开端口好像需要reload一下，临时打开好像不用，如果用了reload临时打开的端口就失效了</p>
<p>其它服务也可能是这样的，这个没有测试</p>
<p>firewall-cmd --reload</p>
<p>查看防火墙，添加的端口也可以看到</p>
<p>firewall-cmd --list-all</p>
<p><strong>直接模式</strong>：</p>
<p>FirewallD包括一种直接模式，使用它可以完成一些工作，例如打开TCP协议的9999端口</p>
<p>firewall-cmd --direct -add-rule ipv4 filter INPUT 0 -p tcp --dport 9000 -j accept<br>firewall-cmd --reload</p>
<p><strong>自定义服务</strong>：</p>
<p>（末尾带有 [P only] 的话表示该选项除了与（--permanent）之外，不能与其他选项一同使用！）</p>
<p>--new-service=<服务名> 新建一个自定义服务 [P only]</p>
<p>--new-service-from-file=<文件名> [--name=<服务名>]<br>                      从文件中读取配置用以新建一个自定义服务 [P only]</p>
<p>--delete-service=<服务名><br>                      删除一个已存在的服务 [P only]</p>
<p>--load-service-defaults=<服务名><br>                      Load icmptype default settings [P only]</p>
<p>--info-service=<服务名><br>                      显示该服务的相关信息</p>
<p>--path-service=<服务名><br>                      显示该服务的文件的相关路径 [P only]</p>
<p>--service=<服务名> --set-description=<描述><br>                      给该服务设置描述信息 [P only]</p>
<p>--service=<服务名> --get-description<br>                      显示该服务的描述信息 [P only]</p>
<p>--service=<服务名> --set-short=<描述><br>                      给该服务设置一个简短的描述 [P only]</p>
<p>--service=<服务名> --get-short<br>                      显示该服务的简短描述 [P only]</p>
<p>--service=<服务名> --add-port=<端口号>[-<端口号>]/<protocol><br>                      给该服务添加一个新的端口(端口段) [P only]</p>
<p>--service=<服务名> --remove-port=<端口号>[-<端口号>]/<protocol><br>                      从该服务上移除一个端口(端口段) [P only]</p>
<p>--service=<服务名> --query-port=<端口号>[-<端口号>]/<protocol><br>                      查询该服务是否添加了某个端口(端口段) [P only]</p>
<p>--service=<服务名> --get-ports<br>                      显示该服务添加的所有端口 [P only]</p>
<p>--service=<服务名> --add-protocol=<protocol><br>                      为该服务添加一个协议 [P only]</p>
<p>--service=<服务名> --remove-protocol=<protocol><br>                      从该服务上移除一个协议 [P only]</p>
<p>--service=<服务名> --query-protocol=<protocol><br>                      查询该服务是否添加了某个协议 [P only]</p>
<p>--service=<服务名> --get-protocols<br>                      显示该服务添加的所有协议 [P only]</p>
<p>--service=<服务名> --add-source-port=<端口号>[-<端口号>]/<protocol><br>                      添加新的源端口(端口段)到该服务 [P only]</p>
<p>--service=<服务名> --remove-source-port=<端口号>[-<端口号>]/<protocol><br>                      从该服务中删除源端口(端口段) [P only]</p>
<p>--service=<服务名> --query-source-port=<端口号>[-<端口号>]/<protocol><br>                      查询该服务是否添加了某个源端口(端口段) [P only]</p>
<p>--service=<服务名> --get-source-ports<br>                      显示该服务所有源端口 [P only]</p>
<p>--service=<服务名> --add-module=<module><br>                      为该服务添加一个模块 [P only]</p>
<p>--service=<服务名> --remove-module=<module><br>                      为该服务移除一个模块 [P only]</p>
<p>--service=<服务名> --query-module=<module><br>                      查询该服务是否添加了某个模块 [P only]</p>
<p>--service=<服务名> --get-modules<br>                      显示该服务添加的所有模块 [P only]</p>
<p>--service=<服务名> --set-destination=<ipv>:<address>[/]<br>                      Set destination for ipv to address in service [P only]</p>
<p>--service=<服务名> --remove-destination=<ipv><br>                      Disable destination for ipv i service [P only]</p>
<p>--service=<服务名> --query-destination=<ipv>:<address>[/]<br>                      Return whether destination ipv is set for service [P only]</p>
<p>--service=<服务名> --get-destinations<br>                      List destinations in service [P only]</p>
<p><strong>控制端口或服务</strong></p>
<p>firewall-cmd --add-service=mysql        # 开放mysql端口</p>
<p>firewall-cmd --remove-service=http      # 阻止http端口</p>
<p>firewall-cmd --list-services            # 查看开放的服务</p>
<p>firewall-cmd --add-port=3306/tcp        # 开放通过tcp访问3306</p>
<p>firewall-cmd --remove-port=80tcp        # 阻止通过tcp访问3306</p>
<p>firewall-cmd --add-port=233/udp         # 开放通过udp访问233</p>
<p>firewall-cmd --list-ports               # 查看开放的端口</p>
<p><strong>伪装IP</strong>：</p>
<p>firewall-cmd --query-masquerade # 检查是否允许伪装IP</p>
<p>firewall-cmd --add-masquerade   # 允许防火墙伪装IP</p>
<p>firewall-cmd --remove-masquerade# 禁止防火墙伪装IP</p>
<p><strong>端口转发</strong>：</p>
<p>firewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080   # 将80端口的流量转发至8080</p>
<p>firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1 # 将80端口的流量转发至192.168.0.1</p>
<p>firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1:toport=8080 # 将80端口的流量转发至192.168.0.1的8080端口</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>docker命令总结（一）</title>
    <url>/2025/01/13/2025011317/</url>
    <content><![CDATA[<p>个人简单总结：</p>
<span id="more"></span>
<table>
<thead>
<tr>
<th>参数</th>
<th>用途</th>
<th>语法</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t0">search</a></td>
<td>在docker hub中搜索镜像</td>
<td>docker search 镜像名称</td>
<td>docker search nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t1">pull</a></td>
<td>在docker hub中下载镜像到本地</td>
<td>docker pull 镜像名：tag</td>
<td>docker pull nginx:latest</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t2">push</a></td>
<td>推送指定镜像到docker镜像服务器</td>
<td>docker push 本地镜像：tag</td>
<td>docker push nginx:V1</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t3">images</a></td>
<td>查看本地所有docker镜像</td>
<td>docker images</td>
<td>docker imaegs</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t4">run</a></td>
<td>创建容器，并运行</td>
<td>docker run 参数 镜像名：tag</td>
<td>docker -d run nginx:latest</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t5">history</a></td>
<td>查看镜像形成过程</td>
<td>docker history 本地镜像名：tag</td>
<td>docker history nginx:V1</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t6">start</a></td>
<td>启动容器</td>
<td>docker start 容器ID或容器名称</td>
<td>docker strat 3d265463456</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t7">stop</a></td>
<td>停止容器</td>
<td>docker stop 容器ID或容器名称</td>
<td>docker stop nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t8">build</a></td>
<td>通过dockerfile制作镜像</td>
<td>docker build 参数 镜像名：tag dockerfile目录</td>
<td>docker build -t nginx:V1 &#x2F;opt&#x2F;</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t9">attach</a></td>
<td>当前shell连接运行容器</td>
<td>docker attach 容器名</td>
<td>docker attach nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t10">commit</a></td>
<td>保存当前容器为镜像&#x2F;快照</td>
<td>docker commit 容器ID或容器名 新镜像名：tag</td>
<td>docker commit nginx nginx:V2</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t11">cp</a></td>
<td>容器与宿主机互相复制文件</td>
<td>docker cp 容器名：文件目录&#x2F;名称 本地目录</td>
<td>docker cp &#x2F;var&#x2F;www&#x2F;html&#x2F; nginx:&#x2F;var&#x2F;www&#x2F;html</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t12">create</a></td>
<td>创建容器但不启动容器</td>
<td>docker create  参数 镜像名称</td>
<td>docker create nginx:V1</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t13">diff</a></td>
<td>查看容器改动</td>
<td>docker diff 容器ID或容器名称</td>
<td>docker diff nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t14">exec</a></td>
<td>在容器中执行命令</td>
<td>docker exec 参数 容器ID或名称 命令</td>
<td>docker exec centos echo ‘123’</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t15">login</a></td>
<td>登入docker镜像源服务器</td>
<td>docker login 服务器地址</td>
<td>docker login</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t16">logout</a></td>
<td>退出登录镜像源服务器</td>
<td>docker logout</td>
<td>docker logout</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t17">logs</a></td>
<td>输出当前容器的日志信息</td>
<td>docker logs 容器ID或名称</td>
<td>docker logs nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t18">port</a></td>
<td>查看容器的端口映射情况</td>
<td>docker port 容器ID或名称</td>
<td>docker port nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t19">ps</a></td>
<td>列出容器列表</td>
<td>docker ps 参数</td>
<td>docker ps -a</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t20">restart</a></td>
<td>重新启动容器</td>
<td>docker restart 容器ID或名称</td>
<td>docker restart nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t21">rm</a></td>
<td>删除容器</td>
<td>docker rm 参数 容器ID或名称</td>
<td>docker rm nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t22">rmi</a></td>
<td>删除本地镜像</td>
<td>docker rmi 镜像名：tag</td>
<td>docker rmi nginx:V1</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t23">save</a></td>
<td>保存镜像为tar包</td>
<td>docker save -o tar文件名 镜像名:tag</td>
<td>docker save -o nginx.tar nginx:V1</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t24">top</a></td>
<td>查看容器中进程信息</td>
<td>docker top 容器ID或名称</td>
<td>docker top nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t25">version</a></td>
<td>查看docker软件版本</td>
<td>docker version</td>
<td>docker version</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t26">events</a></td>
<td>查看docker服务器实时时间</td>
<td>docker events 参数</td>
<td>docker events –since&#x3D;”1577321423”</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t27">import</a></td>
<td>从tar文件导入docker为镜像</td>
<td>docker import 参数 tar文件 镜像名：tag</td>
<td>docker import nginx.tar nginx:V2</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t28">export</a></td>
<td>从docker导出镜像为tar文件</td>
<td>docker export 参数 镜像名：tag tar文件</td>
<td>docker export nginx:V2 nginx2.tar</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t29">info</a></td>
<td>查看docker系统信息</td>
<td>docker info</td>
<td>docker info</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t30">inspect</a></td>
<td>查看容器详细信息</td>
<td>docker inspect 容器ID或名称</td>
<td>docker inspect nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t31">kill</a></td>
<td>杀死正在运行的容器</td>
<td>docker kill 参数 容器ID或名称</td>
<td>docker kill nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t32">load</a></td>
<td>从tar文件中加载为docker镜像</td>
<td>docker load -i tar文件 镜像名：tag</td>
<td>docker load -i nginx2.tar nginx:V3</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t33">pause</a></td>
<td>暂停容器</td>
<td>docker pause 容器ID&#x2F;名称</td>
<td>docker pause nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t35">tag</a></td>
<td>镜像打标签</td>
<td>docker tag 镜像名：tag 新镜像名：tag</td>
<td>docker tag nginx:V3 mynginx:V4</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t34">unpause</a></td>
<td>取消暂停的容器</td>
<td>docker unpause 容器ID&#x2F;名称</td>
<td>docker unpause nginx</td>
</tr>
<tr>
<td><a href="https://blog.csdn.net/KH_FC/article/details/103821457#t36">wait</a></td>
<td>阻塞运行直到容器停止，然后打印出它的退出代码</td>
<td>docker wait CONTAINER</td>
<td>docker wait CONTAINER</td>
</tr>
</tbody></table>
<p>这里提醒大家一句，我这里省略了许多命令参数，上面这些是最常用的一些参数和语法，后面会向大家介绍命令参数的使用</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>resin部署安装</title>
    <url>/2025/01/13/2025011318/</url>
    <content><![CDATA[<p>Resin是CAUCHO公司的产品，是一个非常流行的application server,对servlet和JSP提供了良好的支持，性能也比较优良，resin自身也是采用JAVA语法开发，功能近似于tomcat</p>
<span id="more"></span>
<p>resin版本分为：普通版和pro版；主要区别于pro版本支持缓存和负载均衡，此版本有强大的cache功能；Resin本身包含了一个支持HTTP&#x2F;1.1的WEB服务器。它不仅可以显示动态内容，而它显示静态内容能力也特别强</p>
<p>Resin也可以和其他WEB服务器一起工作，如：nginx\apache\IIS等，resin支持servlets2.3标准和jsp1.2标准。熟悉ASP和PHP的用户可以发现用Resin来进行JSP编程是很方便的，resin添加了php解析执行功能，能够执行php程序，但不如php原生版本</p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul>
<li>resin程序需要JDK的支持，但JDK要求6.0版本或者更高的版本</li>
</ul>
<p>JDK可以到<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html">oracle官网</a>进行下载相关版本的JDK，这里提醒大家建议使用稳定版本的JDK程序</p>
<h2 id="安装resin"><a href="#安装resin" class="headerlink" title="安装resin"></a>安装resin</h2><h4 id="Centos-RedHat-rpm安装"><a href="#Centos-RedHat-rpm安装" class="headerlink" title="Centos&#x2F;RedHat rpm安装"></a><strong>Centos&#x2F;RedHat rpm安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">加载公钥</span><br><span class="line">	[root@jia /]# rpm --import http://caucho.com/download/rpm/RPM-GPG-KEY-caucho</span><br><span class="line">安装软件包(pro版本)</span><br><span class="line">	[root@jia /]# yum -y install http://caucho.com/download/rpm/4.0.30/x86_64/resin-pro-4.0.30-1.x86_64.rpm</span><br><span class="line">	[root@jia /]# yum -y install http://caucho.com/download/rpm-6.8/4.0.63/x86_64/resin-4.0.63-1.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h4 id="Ubuntu-Debian-deb安装"><a href="#Ubuntu-Debian-deb安装" class="headerlink" title="Ubuntu&#x2F;Debian deb安装"></a><strong>Ubuntu&#x2F;Debian deb安装</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">添加存储库</span><br><span class="line">	[root@jia /]# add-apt-repository http://caucho.com/download/debian</span><br><span class="line">更新本地存储库</span><br><span class="line">	[root@jia /]# apt-get update</span><br><span class="line">安装软件包(pro版本)</span><br><span class="line">	[root@jia /]# apt -y install resin-pro</span><br><span class="line">安装软件包(普通版本)</span><br><span class="line">	[root@jia /]# apt -y install resin</span><br></pre></td></tr></table></figure>
<h4 id="基于Linux的编译安装"><a href="#基于Linux的编译安装" class="headerlink" title="基于Linux的编译安装"></a><strong>基于Linux的编译安装</strong></h4><p><strong>安装依赖软件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">安装依赖软件(redhat/centos)</span><br><span class="line">	[root@jia /]# yum -y install wget gcc make gcc-c++</span><br><span class="line">安装依赖软件(ubuntu/Debian)</span><br><span class="line">	[root@jia /]# apt -y install wget gcc make</span><br></pre></td></tr></table></figure>
<p><strong>下载JDK软件包，并进行解压</strong><br>    下载软件包请移步<a href="https://www.oracle.com/technetwork/java/javase/downloads/">JAVA官网</a>,下载后将软件包上传至linux服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解压JDK软件包</span><br><span class="line">	[root@jia /]# tar zxf jdk-8u231-linux-x64.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure>
<p>配置环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@jia /]# <span class="built_in">cp</span> /etc/profile /etc/profile.bak</span><br><span class="line">[root@jia /]# <span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; export JAVA_HOME=/usr/local/jdk-8u231</span></span><br><span class="line"><span class="string">&gt; export PATH=$JAVA_HOME/bin:$PATH</span></span><br><span class="line"><span class="string">&gt; export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="string">&gt;EOF</span></span><br><span class="line">[root@jia /]#java -version		//查看java版本，列出版本号就证明成功了</span><br></pre></td></tr></table></figure>
<p><strong>下载resin软件包，并进行解压</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">普通标准版</span><br><span class="line">	[root@jia /]# wget -c http://caucho.com/download/resin-4.0.63.tar.gz</span><br><span class="line">	[root@jia /]# tar zxf resin-4.0.63.tar.gz</span><br><span class="line">pro版本</span><br><span class="line">	[root@jia /]# wget -c http://caucho.com/download/resin-pro-4.0.63.tar.gz</span><br><span class="line">	[root@jia /]# tar zxf resin-pro-4.0.63.tar.gz</span><br></pre></td></tr></table></figure>
<p><strong>编译安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@jia /]# <span class="built_in">cd</span> resin-4.0.63</span><br><span class="line">[root@jia /]# ./configure --prefix=/usr/local/resin --with-resin-log=/data/logs/resin/ --with-java-home=/usr/local/jdk-8u231</span><br><span class="line">[root@jia /]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>.&#x2F;configure参数介绍：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>–help</td>
<td>帮助，可以查看.&#x2F;configure所有参数</td>
</tr>
<tr>
<td>–prefix</td>
<td>指定安装目录</td>
</tr>
<tr>
<td>–enable-64bit</td>
<td>使用64编译JNI</td>
</tr>
<tr>
<td>–enable-ssl</td>
<td>启用OpenSSL</td>
</tr>
<tr>
<td>–with-apxs&#x3D;PATH</td>
<td>启用apache集成并产生mod_caucho</td>
</tr>
<tr>
<td>–enable-debug</td>
<td>为mod_caucho\isapi_dll和resin_jni启用扩展日志记录</td>
</tr>
<tr>
<td>–with-resin-log&#x3D;PATH</td>
<td>指定resin日志存放目录</td>
</tr>
<tr>
<td>–with-java-home&#x3D;PATH</td>
<td>指定java程序的家目录</td>
</tr>
</tbody></table>
<h4 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a><strong>windows安装</strong></h4><p><strong>下载JDK软件包</strong><br>下载软件包请移步<a href="https://www.oracle.com/technetwork/java/javase/downloads/">JAVA官网</a>,下载后将软件包上传至服务器</p>
<p><strong>安装JDK软件</strong></p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/743460c130d6afd90cbff782224ecfc8.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/743460c130d6afd90cbff782224ecfc8.png">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/0ffe14f7b203f389024f8f5c5649f7b5.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/0ffe14f7b203f389024f8f5c5649f7b5.png">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/c96d48fa9be9b52a95c2f096ed302b01.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/c96d48fa9be9b52a95c2f096ed302b01.png">'); </script><br>

<p><strong>配置环境变量</strong><br>在桌面上右击”我的电脑(计算机)–&gt;属性”，选择”高级系统设置”。</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/85fe24b74e59ba83e1479581de112b25.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/85fe24b74e59ba83e1479581de112b25.png">'); </script><br>

<p>在”系统属性”中选择”高级–&gt;环境变量”。  </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5892e9d911952850fca7067d13d46420.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/5892e9d911952850fca7067d13d46420.png">'); </script><br>

<p>在”环境变量”面板中找到”系统变量”，选择”新建”。   </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/734748ad32d1297ff1e6cc4ac80d1dfb.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/734748ad32d1297ff1e6cc4ac80d1dfb.png">'); </script><br>

<p>在’”新建系统变量”对话框中，变量名一栏输入:”JAVA_HOME”，变量值找到jdk的安装路径填入。  </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/988c004bcf0226208c6aa03235656cb9.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/988c004bcf0226208c6aa03235656cb9.png">'); </script><br>

<p>接着在”系统变量”中找到”CLASSPATH”变量，选中之后，点击”编辑”。有些电脑上面没有这个变量，没有的直接新建变量就可以了<br> <!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/cb282fe0db7a73b0d0483a41578f615d.png) --><br> <script> document.write('<img src="'+ imgurl +'1736751090/cb282fe0db7a73b0d0483a41578f615d.png">'); </script><br></p>
<p>最后在”系统变量”中找到”path”变量，选中之后，点击”编辑”。   </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/5e439d97842405a707b89b1302b2dd09.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/5e439d97842405a707b89b1302b2dd09.png">'); </script><br>

<p>点击新建,在变量值一行的末尾输入:”;%JAVA_HOME%\bin”  必须是英文。之后确定即可。到此环境变量已经配置好了。    </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/46abd09e65378b3bdaa567af1a3aae31.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/46abd09e65378b3bdaa567af1a3aae31.png">'); </script><br>
<p><strong>验证是否安装成功</strong></p>
<p> 使用WIN+R快捷键，打开运行输入cmd指令，进入doc命令窗口<br>  <!-- 　![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/838a4c4f6d05cbc44923b5b70e5f2370.png) --><br>  <script> document.write('<img src="'+ imgurl +'1736751090/838a4c4f6d05cbc44923b5b70e5f2370.png">'); </script><br><br>  <!-- ![](https://i-blog.csdnimg.cn/blog_migrate/5ce0a255abc3155b2d3e7af50cadb974.png) --><br>  <script> document.write('<img src="'+ imgurl +'1736751090/5ce0a255abc3155b2d3e7af50cadb974.png">'); </script><br></p>
<p>  输入”java -version”,出现如下界面，jdk安装成功。  </p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/64939f84e1fd85f2f486d433640d2ebc.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/64939f84e1fd85f2f486d433640d2ebc.png">'); </script><br>

<p><strong>下载resin，并进行解压</strong><br>下载软件包请移步<a href="http://caucho.com/download/">resin官网</a>,下载后将软件包上传至服务器<br>解压resin软件包</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/6840fdb257fca62a5681120f8d8e9352.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/6840fdb257fca62a5681120f8d8e9352.png">'); </script><br>

<p>解压后文件内容：</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/bf4317651a0535ebb53c1a7e8a22d309.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/bf4317651a0535ebb53c1a7e8a22d309.png">'); </script><br>

<p>设置环境变量，可以直接执行setup.exe文件</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/317a5ff93af3dc13cdcc4046f39abaa2.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/317a5ff93af3dc13cdcc4046f39abaa2.png">'); </script><br>

<p>然后点击Install&#x2F;Chang执行完成后即安装成功</p>
<h2 id="启动resin"><a href="#启动resin" class="headerlink" title="启动resin"></a>启动resin</h2><h4 id="Linux操作系统启动resin"><a href="#Linux操作系统启动resin" class="headerlink" title="Linux操作系统启动resin"></a><strong>Linux操作系统启动resin</strong></h4><p><strong>使用yum或者apt安装的resin可以使用下面命令进行启动</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用yum或者apt安装的resin可以使用下面命令进行启动(pro版本)</span><br><span class="line">	[root@jia /]# systemctl start resin-pro		//启动</span><br><span class="line">	[root@jia /]# systemctl stop resin-pro		//停止</span><br><span class="line">	[root@jia /]# systemctl restart resin-pro	//重启</span><br><span class="line">使用yum或者apt安装的resin可以使用下面命令进行启动(普通版本)	</span><br><span class="line">	[root@jia /]# systemctl start resin		</span><br><span class="line">	[root@jia /]# systemctl stop resin		</span><br><span class="line">	[root@jia /]# systemctl restart resin</span><br><span class="line">需要注意的是centos/redhat 7版本以下操作系统需要使用下面方法启动</span><br><span class="line">	[root@jia /]# server resin start	//启动</span><br><span class="line">	[root@jia /]# server resin stop		//停止</span><br><span class="line">	[root@jia /]# server resin restart	//重启</span><br></pre></td></tr></table></figure>
<p><strong>使用编译安装的resin需要使用下面方法进行启动</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@jia /]# /usr/local/resin/bin/resin.sh start	//启动</span><br><span class="line">[root@jia /]# /usr/local/resin/bin/resin.sh stop	//停止</span><br></pre></td></tr></table></figure>
<h4 id="windowns启动resin"><a href="#windowns启动resin" class="headerlink" title="windowns启动resin"></a><strong>windowns启动resin</strong></h4><p>windowns启动相对比较简单，进入resin主目录，直接执行resin.exe程序就可以了</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/39061fcc2c6f0ba1c8f8d43e4439dc23.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/39061fcc2c6f0ba1c8f8d43e4439dc23.png">'); </script><br>

<p>执行后</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/730d4e1dd50e55fb7d8e7f8595d5d69d.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/730d4e1dd50e55fb7d8e7f8595d5d69d.png">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/216e631cbd1b5344102ef8f777556ba9.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/216e631cbd1b5344102ef8f777556ba9.png">'); </script><br>

<p>关闭resin时只需要把后面这个选中stop就可以了，就会直接关闭</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/fef4315f6cb2fb450f149da76f8d3a22.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/fef4315f6cb2fb450f149da76f8d3a22.png">'); </script><br>

<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/344a024c12c4b8313c1daa0190ce6be7.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/344a024c12c4b8313c1daa0190ce6be7.png">'); </script><br>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>直接使用下面链接进行访问就可以的了，注意默认端口为8080，若已经修改请更换端口<br>访问地址：http:&#x2F;&#x2F;服务器IP:8080，访问后出现下面表示部署成功</p>
<!-- ![在这里插入图片描述](https://i-blog.csdnimg.cn/blog_migrate/dfb4b3aaa39af142d5e20e7aca963603.png) -->
<script> document.write('<img src="'+ imgurl +'1736751090/dfb4b3aaa39af142d5e20e7aca963603.png">'); </script><br>

]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>resin</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx location匹配及rewrite规则</title>
    <url>/2025/01/13/2025011319/</url>
    <content><![CDATA[<p>nginx location匹配及rewrite规则</p>
<span id="more"></span>
<h1 id="location匹配规则"><a href="#location匹配规则" class="headerlink" title="location匹配规则"></a>location匹配规则</h1><h2 id="1-实例"><a href="#1-实例" class="headerlink" title="1. 实例"></a>1. 实例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">	server&#123;</span><br><span class="line">		location = \ &#123;</span><br><span class="line">			[配置A]</span><br><span class="line">		&#125;</span><br><span class="line">		location / &#123;</span><br><span class="line">			[配置B]</span><br><span class="line">		&#125;</span><br><span class="line">		location = /images/ &#123;</span><br><span class="line">			[配置C]</span><br><span class="line">		&#125;</span><br><span class="line">		location ^~ /static/&#123;</span><br><span class="line">			[配置D]</span><br><span class="line">		&#125;</span><br><span class="line">		localtion ~* \.(gif|jpg|png)&#123;</span><br><span class="line">			[配置E]</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-location语法规则"><a href="#2-location语法规则" class="headerlink" title="2. location语法规则"></a>2. location语法规则</h2><p><strong>语法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location  = | ~ | ~* | ^~ | @  /url/&#123;		//注意 =、~、~*、^~ 、@是location的匹配规则，”|“表示或者</span><br><span class="line">“</span><br><span class="line">	......省略其他配置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>规则说明：</strong></p>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>字面精准匹配，如果匹配，则跳出匹配过程（不再进行正则匹配）</td>
</tr>
<tr>
<td>~</td>
<td>开头区分大小写的正则匹配</td>
</tr>
<tr>
<td>~*</td>
<td>开头不区分大小写的正则匹配</td>
</tr>
<tr>
<td>^~</td>
<td>开头表示uri以某哥常规字符串开头，理解为匹配url路径即可</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>通用匹配，在没有正则表达式匹配时，任何请求都会匹配到</td>
</tr>
<tr>
<td>@</td>
<td>不是普通的location匹配，用于location内部重定向的变量</td>
</tr>
<tr>
<td>~</td>
<td>开头区分大小写的正则匹配</td>
</tr>
</tbody></table>
<p><strong>多个location配置的匹配顺序：</strong></p>
<ul>
<li>首先匹配：”&#x3D;”</li>
<li>其次匹配：”^~”</li>
<li>再匹配：文件location书写顺序</li>
<li>最后把所有请求交给通配符（”&#x2F;“）</li>
</ul>
<p>注意：每次匹配成功后，停止匹配，会按照本匹配的location处理请求</p>
<p><strong>按照上面实例进行说明匹配顺序：</strong></p>
<ul>
<li>首先对比第一个location，如果匹配就会停止匹配，并按照配置A进行处理请求：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location = \ &#123;</span><br><span class="line">	[配置A]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>其次对比第二个location，如果匹配就会停止匹配，并按照配置D进行处理请求：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ^~ /static/&#123;</span><br><span class="line">		[配置D]</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></li>
<li>再按照顺序依此进行对比，直到找到匹配的才会停止，并按照所匹配的配置*进行处理请求</li>
<li>如果以上无任何匹配项则会选择通用选项，并按照所匹配的配置B进行处理请求：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">		[配置B]</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="3-应用举例"><a href="#3-应用举例" class="headerlink" title="3. 应用举例"></a>3. 应用举例</h2><ul>
<li>精准规则（&#x3D;）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location = / &#123;</span><br><span class="line">	root /var/ww/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示只匹配以默认地址进行访问的请求，访问地址：<a href="http://nginxip/">http://NginxIP/</a></li>
<li>匹配url路径（^~）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ^~ /static/ &#123;</span><br><span class="line">	root /var/www/html/static;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示只匹配以” &#x2F;static&#x2F; “开头的地址进行访问的请求，访问地址：<a href="http://nginxip/static/">http://NginxIP/static/</a></li>
<li>忽略大小写（~*）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~* \.(png|gif|jpg)&#123;</span><br><span class="line">	root /var/www/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示只匹配” *.png | *.gif | *.jpg “的文件，访问地址：<a href="http://nginxip/test.png">http://NginxIP/test.png</a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~* /Test/ &#123;</span><br><span class="line">	root /var/www/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示匹配url地址中存在Test的访问请求，不区分大小写test也可以，访问地址：<a href="http://nginxip/test/">http://NginxIP/test/</a></li>
<li>区分大小写（~）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~ /Test/&#123;</span><br><span class="line">	root /var/www/html/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示匹配url地址中存在Test的访问请求，区分大小写,test是进行匹配的，访问地址：<a href="http://nginxip/Test/">http://NginxIP/Test/</a></li>
<li>默认匹配（所有规则都可匹配）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">	root /var/www/html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则为默认匹配，他可以匹配所有以默认地址访问的链接，访问地址：<a href="http://nginxip/login.html">http://NginxIP/login.html</a></li>
<li>内部跳转（@）<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location @index_error&#123;</span><br><span class="line">	root /var/www/error/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
此规则表示匹配以 “&#x2F;index&#x2F; “开头的请求，如果链接状态404，会匹配到这条规则</li>
</ul>
<h1 id="rewrite规则详解"><a href="#rewrite规则详解" class="headerlink" title="rewrite规则详解"></a>rewrite规则详解</h1><p>nginx的rewrite功能和apache一样，rewrite的主要功能是实现RUL地址的重定向。Nginx的rewrite功能是由PCRE软件支持，rewrite模块即<code>ngx_http_rewrite_module</code>模块。从某种意义上可以说为了美观或者搜索引起的友好搜索，提高排名等</p>
<h2 id="1-实例-1"><a href="#1-实例-1" class="headerlink" title="1.实例"></a>1.实例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$host</span> != <span class="string">&#x27;www.jkyst.xyz&#x27;</span> )&#123;</span><br><span class="line">		rewrite ^/(.*)$ http://www.jkyst.xyz/<span class="variable">$1</span> permanent;</span><br><span class="line">	&#125;</span><br><span class="line">	location ~.*\.(png|gif|jpg)&#123;</span><br><span class="line">		<span class="built_in">return</span> 403;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-rewrite语法规则"><a href="#2-rewrite语法规则" class="headerlink" title="2.rewrite语法规则"></a>2.rewrite语法规则</h2><p><strong>语法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rewrite		regex		replacement		[flag]</span><br></pre></td></tr></table></figure>
<p>rewrite：rewrite重写的关键字不可省略<br>regex：这里写的是正则表达式<br>replacement：这里是重新内容<br>flag：这里是最后的flag标记</p>
<p><strong>flag标记说明：</strong></p>
<table>
<thead>
<tr>
<th>flag标记</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>last</td>
<td>也就是apache里的（L）标记，表示完成rewrite，URL地址不会改变</td>
</tr>
<tr>
<td>break</td>
<td>本条规则匹配成功后，会停止匹配，不再匹配后面的规则，URL地址不会改变</td>
</tr>
<tr>
<td>redirect</td>
<td>返回302临时重定向，浏览器地址会显示跳转后的URL地址</td>
</tr>
<tr>
<td>permanent</td>
<td>返回301永久重定向，浏览器地址栏显示跳转后的URL地址，Nginx返回response状态码301</td>
</tr>
<tr>
<td><strong>相关符号说明：</strong></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>代表前面0或者多个字符</td>
</tr>
<tr>
<td>+</td>
<td>代表前面1或者多个字符</td>
</tr>
<tr>
<td>?</td>
<td>代表前面0或1个字符</td>
</tr>
<tr>
<td>^</td>
<td>代表字符串的开始位置</td>
</tr>
<tr>
<td>$</td>
<td>代表字符串结束位置</td>
</tr>
<tr>
<td>$n</td>
<td>代表字符串结束第n个参数</td>
</tr>
<tr>
<td>.</td>
<td>通配符，代表任何字符</td>
</tr>
</tbody></table>
<h2 id="3-应用实例"><a href="#3-应用实例" class="headerlink" title="3.应用实例"></a>3.应用实例</h2><ul>
<li>多域名跳转到同一域名<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz jkyst.xyz abc.jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$host</span> != <span class="string">&#x27;www.jkyst.xyz&#x27;</span>)&#123;</span><br><span class="line">		rewrite ^/(.*)$ http://www,jkyst.xyz/<span class="variable">$1</span> permanent;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>当访问 abc.jkyst.xyz 时会自动跳转到 <a href="http://www.jkyst.xyz/">www.jkyst.xyz</a> ，这里出现if语句用于判断，判断结果为true则执行语句内部的 rewrite重写</p>
<ul>
<li>当文件不存在时重定向到指定文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span>(!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">		rewrite  ^/test/(.*)$ http://www.jkyst.xyz/test1/<span class="variable">$1</span> permanent;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>当访问 “test” 目录下的文件或目录不存在时，则跳转到 “test1”下面的此文件或者目录，跳转后会将URL进行转换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span>(!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">		rewrite ^/test/(.*)$ index.html last;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>表示当访问 “test” 目录下的文件或目录不存在时，则重定向到 “index.html”文件，跳转后URl不会进行转换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">		listen 80;</span><br><span class="line">		server_name www.jkyst.xyz;</span><br><span class="line">		<span class="keyword">if</span>(!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">			rewrite ^/test/([0-9a-z]+)/([0-9a-z]+)/(.*)$ http://www.jkyst.xyz/test/$1$2<span class="variable">$3</span> permanent;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>目录切换，表示将原目录转换成其他目录，【0-9a-z】表示转换后目录名称</p>
<ul>
<li>禁止访问.sh后缀的文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">	server&#123;</span><br><span class="line">	......其他配置</span><br><span class="line">	location ~.*\.(sh)<span class="variable">$&#123;</span></span><br><span class="line"><span class="variable">		return 405;</span></span><br><span class="line"><span class="variable">	&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>表示当访问 “*.sh”的文件就会返回405错误</p>
<ul>
<li>匹配用户浏览器代理信息<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span> ( <span class="variable">$http_user_agent</span> ~* (<span class="string">&quot;Android&quot;</span>)|(iPhone))&#123;</span><br><span class="line">		rewrite ^/test/(.*)$ http://www.jkyst.xyz/test/<span class="variable">$1</span>  permanent;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>表示当匹配到浏览代理为Android和iPhone时进行重定向 “test”目录下的文件，改变访问的地址</p>
<ul>
<li>禁止htaccess<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	location ~//.ht &#123;</span><br><span class="line">         deny all;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="4-文件目录匹配"><a href="#4-文件目录匹配" class="headerlink" title="4.文件目录匹配"></a>4.文件目录匹配</h2><table>
<thead>
<tr>
<th>参数</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>-f</td>
<td>判断文件是否存在 返回值true为存在</td>
</tr>
<tr>
<td>!-f</td>
<td>判断文件是否存在 返回值false为不存在</td>
</tr>
<tr>
<td>-d</td>
<td>判断目录是否存在 返回值true为存在</td>
</tr>
<tr>
<td>!-d</td>
<td>判断目录是否存在 返回值true为不存在</td>
</tr>
<tr>
<td>-e</td>
<td>判断文件或目录是否存在 返回值true为存在</td>
</tr>
<tr>
<td>!-e</td>
<td>判断文件或目录是否存在 返回值true为不存在</td>
</tr>
<tr>
<td>-x</td>
<td>判断文件是否可执行 返回值true为可执行</td>
</tr>
<tr>
<td>!-x</td>
<td>判断文件是否可执行 返回值true为不可执行</td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	listen 80;</span><br><span class="line">	server_name www.jkyst.xyz;</span><br><span class="line">	<span class="keyword">if</span>(!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">		rewrite  ^/test/(.*)$ http://www.jkyst.xyz/test1/<span class="variable">$1</span> permanent;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>判断文件或目录是否存在</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
      </tags>
  </entry>
  <entry>
    <title>docker命令总结（二）</title>
    <url>/2025/01/13/2025011316/</url>
    <content><![CDATA[<p>上次只是给大家把命令的作用以及简单使用列出来了（大家可以查看：<a href="https://blog.csdn.net/KH_FC/article/details/103789373">docker命令总结（一）</a>），那这篇文章会详细介绍每条命令的参数</p>
<span id="more"></span>
<h2 id="search"><a href="#search" class="headerlink" title="search"></a>search</h2><p>docker search：此命令是用来在仓库中查找docker镜像</p>
<p><strong>语法：</strong></p>
<pre><code>docker search 参数 镜像名称:tag（版本）
</code></pre>
<p><strong>参数说明：</strong></p>
<pre><code>--filter，-f：根据相关条件过滤输出
 --format：使用Go模板进行漂亮的打印搜索
--limit：指定最大搜索结果，默认25个
--no-trunc：显示完整的镜像描述
--stars，-s：列出收藏数不小于指定值的镜像
--automated：仅显示自动构建的镜像
</code></pre>
<p><strong>示例：</strong></p>
<p> 默认搜索</p>
<pre><code>ubuntu@VM-101-242-ubuntu:~$ sudo docker search nginx
NAME                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
nginx                             Official build of Nginx.                        12438               [OK]                
jwilder/nginx-proxy               Automated Nginx reverse proxy for docker con…   1713                                    [OK]
richarvey/nginx-php-fpm           Container running Nginx + PHP-FPM capable of…   750                                     [OK]
linuxserver/nginx                 An Nginx container, brought to you by LinuxS…   84                                      
bitnami/nginx                     Bitnami nginx Docker Image                      75                                      [OK]
tiangolo/nginx-rtmp               Docker image with Nginx using the nginx-rtmp…   60                                      [OK]
nginxdemos/hello                  NGINX webserver that serves a simple page co…   35                                      [OK]
jc21/nginx-proxy-manager          Docker container for managing Nginx proxy ho…   34                                      
nginx/unit                        NGINX Unit is a dynamic web and application …   33                                      
jlesage/nginx-proxy-manager       Docker container for Nginx Proxy Manager        31                                      [OK]
nginx/nginx-ingress               NGINX Ingress Controller for Kubernetes         22                                      
privatebin/nginx-fpm-alpine       PrivateBin running on an Nginx, php-fpm &amp; Al…   19                                      [OK]
schmunk42/nginx-redirect          A very simple container to redirect HTTP tra…   17                                      [OK]
blacklabelops/nginx               Dockerized Nginx Reverse Proxy Server.          12                                      [OK]
centos/nginx-18-centos7           Platform for running nginx 1.8 or building n…   12                                      
nginxinc/nginx-unprivileged       Unprivileged NGINX Dockerfiles                  12                                      
centos/nginx-112-centos7          Platform for running nginx 1.12 or building …   11                                      
nginx/nginx-prometheus-exporter   NGINX Prometheus Exporter                       9                                       
sophos/nginx-vts-exporter         Simple server that scrapes Nginx vts stats a…   6                                       [OK]
mailu/nginx                       Mailu nginx frontend                            5                                       [OK]
1science/nginx                    Nginx Docker images that include Consul Temp…   5                                       [OK]
pebbletech/nginx-proxy            nginx-proxy sets up a container running ngin…   2                                       [OK]
ansibleplaybookbundle/nginx-apb   An APB to deploy NGINX                          1                                       [OK]
centos/nginx-110-centos7          Platform for running nginx 1.10 or building …   0                                       
wodby/nginx                       Generic nginx                                   0                                       [OK]
ubuntu@VM-101-242-ubuntu:~$ 
</code></pre>
<p>搜索收藏数大于10的nginx镜像，并显示详细信息</p>
<pre><code>ubuntu@VM-101-242-ubuntu:~$ sudo docker search --stars=10 --no-trunc nginx
Flag --stars has been deprecated, use --filter=stars=3 instead
NAME                          DESCRIPTION                                                                                            STARS               OFFICIAL            AUTOMATED
nginx                         Official build of Nginx.                                                                               12438               [OK]                
jwilder/nginx-proxy           Automated Nginx reverse proxy for docker containers                                                    1713                                    [OK]
richarvey/nginx-php-fpm       Container running Nginx + PHP-FPM capable of pulling application code from git                         750                                     [OK]
linuxserver/nginx             An Nginx container, brought to you by LinuxServer.io.                                                  84                                      
bitnami/nginx                 Bitnami nginx Docker Image                                                                             75                                      [OK]
tiangolo/nginx-rtmp           Docker image with Nginx using the nginx-rtmp-module module for live multimedia (video) streaming.      60                                      [OK]
nginxdemos/hello              NGINX webserver that serves a simple page containing its hostname, IP address and port ...             35                                      [OK]
jc21/nginx-proxy-manager      Docker container for managing Nginx proxy hosts with a simple, powerful interface                      34                                      
nginx/unit                    NGINX Unit is a dynamic web and application server designed to run applications in various languages   33                                      
jlesage/nginx-proxy-manager   Docker container for Nginx Proxy Manager                                                               31                                      [OK]
nginx/nginx-ingress           NGINX Ingress Controller for Kubernetes                                                                22                                      
privatebin/nginx-fpm-alpine   PrivateBin running on an Nginx, php-fpm &amp; Alpine Linux stack                                           19                                      [OK]
schmunk42/nginx-redirect      A very simple container to redirect HTTP traffic to another server, based on nginx                     17                                      [OK]
centos/nginx-18-centos7       Platform for running nginx 1.8 or building nginx-based application                                     12                                      
nginxinc/nginx-unprivileged   Unprivileged NGINX Dockerfiles                                                                         12                                      
blacklabelops/nginx           Dockerized Nginx Reverse Proxy Server.                                                                 12                                      [OK]
centos/nginx-112-centos7      Platform for running nginx 1.12 or building nginx-based application                                    11                                      
ubuntu@VM-101-242-ubuntu:~$ 
</code></pre>
<p>使用条件查找收藏数大于10的nginx镜像</p>
<pre><code>ubuntu@VM-101-242-ubuntu:~$ sudo docker search --filter stars=3 nginx
NAME                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
nginx                             Official build of Nginx.                        12438               [OK]                
jwilder/nginx-proxy               Automated Nginx reverse proxy for docker con…   1713                                    [OK]
richarvey/nginx-php-fpm           Container running Nginx + PHP-FPM capable of…   750                                     [OK]
linuxserver/nginx                 An Nginx container, brought to you by LinuxS…   84                                      
bitnami/nginx                     Bitnami nginx Docker Image                      75                                      [OK]
tiangolo/nginx-rtmp               Docker image with Nginx using the nginx-rtmp…   60                                      [OK]
nginxdemos/hello                  NGINX webserver that serves a simple page co…   35                                      [OK]
jc21/nginx-proxy-manager          Docker container for managing Nginx proxy ho…   34                                      
nginx/unit                        NGINX Unit is a dynamic web and application …   33                                      
jlesage/nginx-proxy-manager       Docker container for Nginx Proxy Manager        31                                      [OK]
nginx/nginx-ingress               NGINX Ingress Controller for Kubernetes         22                                      
privatebin/nginx-fpm-alpine       PrivateBin running on an Nginx, php-fpm &amp; Al…   19                                      [OK]
schmunk42/nginx-redirect          A very simple container to redirect HTTP tra…   17                                      [OK]
centos/nginx-18-centos7           Platform for running nginx 1.8 or building n…   12                                      
blacklabelops/nginx               Dockerized Nginx Reverse Proxy Server.          12                                      [OK]
nginxinc/nginx-unprivileged       Unprivileged NGINX Dockerfiles                  12                                      
centos/nginx-112-centos7          Platform for running nginx 1.12 or building …   11                                      
nginx/nginx-prometheus-exporter   NGINX Prometheus Exporter                       9                                       
sophos/nginx-vts-exporter         Simple server that scrapes Nginx vts stats a…   6                                       [OK]
mailu/nginx                       Mailu nginx frontend                            5                                       [OK]
1science/nginx                    Nginx Docker images that include Consul Temp…   5                                       [OK]
ubuntu@VM-101-242-ubuntu:~$ 
</code></pre>
<h2 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h2><p>从docker仓库下载镜像到本地</p>
<p><strong>语法</strong></p>
<pre><code>docker pull 镜像名称:tag（版本）
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-a, --all-tags：下载所有版本的镜像
-q, --quiet：不显示详细信息
--disable-content-trust：不对下载的镜像进行校验
--platform：指定下载镜像服务器的平台信息
</code></pre>
<p><strong>示例</strong></p>
<p>下载nginx默认版本的docker镜像</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker pull nginx:latest
latest: Pulling from library/nginx
8ec398bc0356: Pull complete 
465560073b6f: Pull complete 
f473f9fd0a8c: Pull complete 
Digest: sha256:b2d89d0a210398b4d1120b3e3a7672c16a4ba09c2c4a0395f18b9f7999b768f2
Status: Downloaded newer image for nginx:latest
docker.io/library/nginx:latest
ubuntu@VM-35-226-ubuntu:~$ sudo docker images			//查看本地所有镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        9 days ago          126MB
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<h2 id="push"><a href="#push" class="headerlink" title="push"></a>push</h2><p>推送指定镜像到docker镜像服务器</p>
<p><strong>语法</strong></p>
<pre><code>docker push 本地镜像：tag(版本)
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--disable-content-trust：不对镜像进行校验
</code></pre>
<p><strong>示例</strong></p>
<pre><code>docker push blxt:5000/blxt/nginx 上传nginx到私有仓库
</code></pre>
<h2 id="images"><a href="#images" class="headerlink" title="images"></a>images</h2><p>查看本地所有docker镜像</p>
<p><strong>语法</strong></p>
<pre><code>docker images 参数 镜像:tag（版本）
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-a, --all：列出本地所有镜像
--digests：显示镜像简单信息说明
-f, --filter：根据相关条件过滤输出
--format：使用Go模板进行漂亮的打印搜索
--no-trunc：显示镜像的完整信息
-q, --quiet：只显示镜像ID
</code></pre>
<p><strong>示例</strong></p>
<p>查看本地所有镜像</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker images -a
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        9 days ago          126MB
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>查看镜像详细信息</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker images --no-trunc nginx:latest
REPOSITORY          TAG                 IMAGE ID                                                                  CREATED             SIZE
nginx               latest              sha256:f7bb5701a33c0e572ed06ca554edca1bee96cbbc1f76f3b01c985de7e19d0657   9 days ago          126MB
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>查看镜像ID</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker images -q nginx:latest
f7bb5701a33c
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><p>创建容器，并运行</p>
<p><strong>语法</strong></p>
<pre><code>docker run 参数 镜像:tag（版本）
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-a, --attach：	指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项
-d:		容器将在后台运行
-t：		给容器分配tty终端
--sig-proxy=true：	将所有接收到的信号代理到进程（仅限非TTY模式）
-i:		以交互模式运行容器
--name:		给容器设置名称
--dns：		为容器设置自定义dns服务器
--dns-search：	指定DNS搜索域名
--network：		为容器指定网卡
--network-alias：		为容器的网卡设置别名
--add-host：		在容器的hosts文件中添加记录
--mac-address：		设置容器的MAC地址
--ip：		设置容器的IPV4地址
--ip6：		设置容器IPV6地址
--link-local-ip：		设置一个或多个容器的以太网设备的链接本地IPv4/IPv6地址
--rm：		容器退出时自动删除容器
-m， --memory：		设置容器内存大小，最小4M
--memory-swap：		设置容器的总内存大小，包含交换分区
-c， --cpu-shares：		设置cpu
--cpus：		设置cpu数量
--entrypoint：	在容器运行时执行的默认命令
--expose：		设置端口映射
-P：			将容器中所有端口映射到宿主机
-p：			将容器的某个端口映射到宿主机
--link：		将链接添加到另外一个容器
-v, --volume：		将宿主机的文件挂载到容器中
--volumes-from：		将宿主机的所有文件系统挂载到容器
-u，--user：		设置所使用的用户名或UID以及指定命令的可选组名或GID
-h：		指定容器主机名称
-e：		设置环境变量
--env-file：		从指定文件中导入变量
参数还有很多，这里就不一一列举了，上面是常用的参数
</code></pre>
<p><strong>示例</strong></p>
<p>后台运行nginx容器，并取名为nginx</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker run -d --name nginx nginx:latest
06a913a442f9729e284b1a0628e5ce46561f81c6e8777f91d184f10de079cb55
ubuntu@VM-35-226-ubuntu:~$ sudo docker ps -a			//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
06a913a442f9        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   18 seconds ago      Up 15 seconds       80/tcp              nginx
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>后台运行nginx容器，并映射容器80端口到宿主机的80端口</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker run -d --name nginx -p 80:80 nginx:latest
c026ee7e0c9477c15ac42965ed19af92b6017e7bcce079fd450f8cee5f2d9de6
ubuntu@VM-35-226-ubuntu:~$ sudo docker ps -a			//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES
c026ee7e0c94        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   8 seconds ago       Up 6 seconds        0.0.0.0:80-&gt;80/tcp   nginx
ubuntu@VM-35-226-ubuntu:~$ sudo curl 127.0.0.1		//访问容器种nginx页面
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Welcome to nginx!&lt;/title&gt;
&lt;style&gt;
    body &#123;
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    &#125;
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
&lt;p&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;/p&gt;

&lt;p&gt;For online documentation and support please refer to
&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
Commercial support is available at
&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>创建nginx容器，并进行交互式启动</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker run -it --name nginx nginx:latest /bin/bash
root@4a518f4a2a01:/# 
</code></pre>
<h2 id="history"><a href="#history" class="headerlink" title="history"></a>history</h2><p>查看镜像形成过程</p>
<p><strong>语法</strong></p>
<pre><code>docker history 参数 镜像：tag（版本）
</code></pre>
<p><strong>参数</strong></p>
<pre><code>--format：使用Go模板进行漂亮的打印搜索
-H, --human：以可读格式打印大小和日期（默认为true）
--no-trunc：显示形成详细信息
-q, --quiet：只显示镜像ID
</code></pre>
<p><strong>示例</strong></p>
<p>默认使用方法</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker history nginx:latest
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
f7bb5701a33c        9 days ago          /bin/sh -c #(nop)  CMD [&quot;nginx&quot; &quot;-g&quot; &quot;daemon…   0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  STOPSIGNAL SIGTERM           0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  EXPOSE 80                    0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c ln -sf /dev/stdout /var/log/nginx…   22B                 
&lt;missing&gt;           9 days ago          /bin/sh -c set -x     &amp;&amp; addgroup --system -…   57.1MB              
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster     0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  ENV NJS_VERSION=0.3.7        0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  ENV NGINX_VERSION=1.17.6     0B                  
&lt;missing&gt;           9 days ago          /bin/sh -c #(nop)  LABEL maintainer=NGINX Do…   0B                  
&lt;missing&gt;           10 days ago         /bin/sh -c #(nop)  CMD [&quot;bash&quot;]                 0B                  
&lt;missing&gt;           10 days ago         /bin/sh -c #(nop) ADD file:04caaf303199c81ff…   69.2MB              
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>只打印镜像ID</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker history -q nginx:latest
f7bb5701a33c
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
&lt;missing&gt;
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<p>显示镜像形成的详细信息</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker history --no-trunc nginx

sha256:f7bb5701a33c0e572ed06ca554edca1bee96cbbc1f76f3b01c985de7e19d0657   9 days ago          /bin/sh -c #(nop)  CMD [&quot;nginx&quot; &quot;-g&quot; &quot;daemon off;&quot
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop)  EXPOSE 80                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    0B                  
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log     &amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      22B                 
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c set -x     &amp;&amp; addgroup --system --gid 101 nginx     &amp;&amp; adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos &quot;nginx user&quot; --shell /bin/false --uid 101 nginx     &amp;&amp; apt-get update     &amp;&amp; apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &amp;&amp;     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found=&#39;&#39;;     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo &quot;Fetching GPG key $NGINX_GPGKEY from $server&quot;;         apt-key adv --keyserver &quot;$server&quot; --keyserver-options timeout=10 --recv-keys &quot;$NGINX_GPGKEY&quot; &amp;&amp; found=yes &amp;&amp; break;     done;     test -z &quot;$found&quot; &amp;&amp; echo &gt;&amp;2 &quot;error: failed to fetch GPG key $NGINX_GPGKEY&quot; &amp;&amp; exit 1;     apt-get remove --purge --auto-remove -y gnupg1 &amp;&amp; rm -rf /var/lib/apt/lists/*     &amp;&amp; dpkgArch=&quot;$(dpkg --print-architecture)&quot;     &amp;&amp; nginxPackages=&quot;         nginx=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-xslt=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-geoip=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-image-filter=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-njs=$&#123;NGINX_VERSION&#125;.$&#123;NJS_VERSION&#125;-$&#123;PKG_RELEASE&#125;     &quot;     &amp;&amp; case &quot;$dpkgArch&quot; in         amd64|i386)             echo &quot;deb https://nginx.org/packages/mainline/debian/ buster nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list             &amp;&amp; apt-get update             ;;         *)             echo &quot;deb-src https://nginx.org/packages/mainline/debian/ buster nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list                         &amp;&amp; tempDir=&quot;$(mktemp -d)&quot;             &amp;&amp; chmod 777 &quot;$tempDir&quot;                         &amp;&amp; savedAptMark=&quot;$(apt-mark showmanual)&quot;                         &amp;&amp; apt-get update             &amp;&amp; apt-get build-dep -y $nginxPackages             &amp;&amp; (                 cd &quot;$tempDir&quot;                 &amp;&amp; DEB_BUILD_OPTIONS=&quot;nocheck parallel=$(nproc)&quot;                     apt-get source --compile $nginxPackages             )                         &amp;&amp; apt-mark showmanual | xargs apt-mark auto &gt; /dev/null             &amp;&amp; &#123; [ -z &quot;$savedAptMark&quot; ] || apt-mark manual $savedAptMark; &#125;                         &amp;&amp; ls -lAFh &quot;$tempDir&quot;             &amp;&amp; ( cd &quot;$tempDir&quot; &amp;&amp; dpkg-scanpackages . &gt; Packages )             &amp;&amp; grep &#39;^Package: &#39; &quot;$tempDir/Packages&quot;             &amp;&amp; echo &quot;deb [ trusted=yes ] file://$tempDir ./&quot; &gt; /etc/apt/sources.list.d/temp.list             &amp;&amp; apt-get -o Acquire::GzipIndexes=false update             ;;     esac         &amp;&amp; apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base     &amp;&amp; apt-get remove --purge --auto-remove -y ca-certificates &amp;&amp; rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         &amp;&amp; if [ -n &quot;$tempDir&quot; ]; then         apt-get purge -y --auto-remove         &amp;&amp; rm -rf &quot;$tempDir&quot; /etc/apt/sources.list.d/temp.list;     fi   57.1MB              
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nopubuntu@VM-35-226-ubuntu:~$ sudo docker history --no-trunc nginx:latest

sha256:f7bb5701a33c0e572ed06ca554edca1bee96cbbc1f76f3b01c985de7e19d0657   9 days ago          /bin/sh -c #(nop)  CMD [&quot;nginx&quot; &quot;-g&quot; &quot;daemon off;&quot
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop)  EXPOSE 80                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    0B                  
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c ln -sf /dev/stdout /var/log/nginx/access.log     &amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      22B                 
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c set -x     &amp;&amp; addgroup --system --gid 101 nginx     &amp;&amp; adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos &quot;nginx user&quot; --shell /bin/false --uid 101 nginx     &amp;&amp; apt-get update     &amp;&amp; apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &amp;&amp;     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found=&#39;&#39;;     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo &quot;Fetching GPG key $NGINX_GPGKEY from $server&quot;;         apt-key adv --keyserver &quot;$server&quot; --keyserver-options timeout=10 --recv-keys &quot;$NGINX_GPGKEY&quot; &amp;&amp; found=yes &amp;&amp; break;     done;     test -z &quot;$found&quot; &amp;&amp; echo &gt;&amp;2 &quot;error: failed to fetch GPG key $NGINX_GPGKEY&quot; &amp;&amp; exit 1;     apt-get remove --purge --auto-remove -y gnupg1 &amp;&amp; rm -rf /var/lib/apt/lists/*     &amp;&amp; dpkgArch=&quot;$(dpkg --print-architecture)&quot;     &amp;&amp; nginxPackages=&quot;         nginx=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-xslt=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-geoip=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-image-filter=$&#123;NGINX_VERSION&#125;-$&#123;PKG_RELEASE&#125;         nginx-module-njs=$&#123;NGINX_VERSION&#125;.$&#123;NJS_VERSION&#125;-$&#123;PKG_RELEASE&#125;     &quot;     &amp;&amp; case &quot;$dpkgArch&quot; in         amd64|i386)             echo &quot;deb https://nginx.org/packages/mainline/debian/ buster nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list             &amp;&amp; apt-get update             ;;         *)             echo &quot;deb-src https://nginx.org/packages/mainline/debian/ buster nginx&quot; &gt;&gt; /etc/apt/sources.list.d/nginx.list                         &amp;&amp; tempDir=&quot;$(mktemp -d)&quot;             &amp;&amp; chmod 777 &quot;$tempDir&quot;                         &amp;&amp; savedAptMark=&quot;$(apt-mark showmanual)&quot;                         &amp;&amp; apt-get update             &amp;&amp; apt-get build-dep -y $nginxPackages             &amp;&amp; (                 cd &quot;$tempDir&quot;                 &amp;&amp; DEB_BUILD_OPTIONS=&quot;nocheck parallel=$(nproc)&quot;                     apt-get source --compile $nginxPackages             )                         &amp;&amp; apt-mark showmanual | xargs apt-mark auto &gt; /dev/null             &amp;&amp; &#123; [ -z &quot;$savedAptMark&quot; ] || apt-mark manual $savedAptMark; &#125;                         &amp;&amp; ls -lAFh &quot;$tempDir&quot;             &amp;&amp; ( cd &quot;$tempDir&quot; &amp;&amp; dpkg-scanpackages . &gt; Packages )             &amp;&amp; grep &#39;^Package: &#39; &quot;$tempDir/Packages&quot;             &amp;&amp; echo &quot;deb [ trusted=yes ] file://$tempDir ./&quot; &gt; /etc/apt/sources.list.d/temp.list             &amp;&amp; apt-get -o Acquire::GzipIndexes=false update             ;;     esac         &amp;&amp; apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base     &amp;&amp; apt-get remove --purge --auto-remove -y ca-certificates &amp;&amp; rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         &amp;&amp; if [ -n &quot;$tempDir&quot; ]; then         apt-get purge -y --auto-remove         &amp;&amp; rm -rf &quot;$tempDir&quot; /etc/apt/sources.list.d/temp.list;     fi   57.1MB              
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop
&lt;missing&gt;                                                                 9 days ago          /bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers &lt;docker-maint@nginx.com&gt
&lt;missing&gt;                                                                 10 days ago         /bin/sh -c #(nop)  CMD [&quot;bash&quot;]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 0B                  
&lt;missing&gt;                                                                 10 days ago         /bin/sh -c #(nop) ADD file:04caaf303199c81ff1a94e2e39d5096f9d02b73294b82758e5bc6e23aff94272 in
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><p>启动容器</p>
<p><strong>语法</strong></p>
<pre><code>docker start 参数 容器ID/容器名称
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-a, --attach：附加STDOUT/STDERR和转发信号
--checkpoint：从快照进行还原 
--checkpoint-dir：使用自定义检查点存储目录
--detach-keys：重写用于分离容器的键序列
-i, --interactive：附加容器的STDIN
</code></pre>
<p><strong>示例</strong></p>
<p>启动使用create创建的nginx容器</p>
<pre><code>ubuntu@VM-35-226-ubuntu:~$ sudo docker ps -a			//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
8b9053318855        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   9 seconds ago       Created                                 admiring_rhodes
ubuntu@VM-35-226-ubuntu:~$ sudo docker start 8b9053318855 	
8b9053318855
ubuntu@VM-35-226-ubuntu:~$ sudo docker ps 		//查看已运行容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
8b9053318855        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   40 seconds ago      Up 7 seconds        80/tcp              admiring_rhodes
ubuntu@VM-35-226-ubuntu:~$ 
</code></pre>
<h2 id="stop"><a href="#stop" class="headerlink" title="stop"></a>stop</h2><p>关闭容器</p>
<p><strong>语法</strong></p>
<pre><code>docker stop 参数 容器ID/容器名称
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--time , -t：在多少时间后关闭容器
</code></pre>
<p><strong>示例</strong></p>
<p>默认使用方法</p>
<pre><code>ubuntu@VM-121-163-ubuntu:~$ sudo docker run -d --name nginx nginx:latest		//创建并后台启动nginx容器
4c1e4ab3cfdcb7c5c55052238525e79bb82c0b5cf70b18420520ec2884669272
ubuntu@VM-121-163-ubuntu:~$ sudo docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
4c1e4ab3cfdc        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   7 seconds ago       Up 5 seconds        80/tcp              nginx
ubuntu@VM-121-163-ubuntu:~$ sudo docker stop nginx
nginx
ubuntu@VM-121-163-ubuntu:~$ sudo docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES
4c1e4ab3cfdc        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   26 seconds ago      Exited (0) 5 seconds ago                       nginx
ubuntu@VM-121-163-ubuntu:~$ 
</code></pre>
<h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><p>通过dockerfile制作镜像</p>
<p><strong>语法</strong></p>
<pre><code>docker build 参数 路径
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--build-arg：设置创建时的变量
--cgroup-parent：容器的可选父cgroup
--compress：使用gzip压缩构建上下文
--cpu-shares :设置 cpu 使用权重
--cpu-period :限制 CPU CFS周期
--cpu-quota :限制 CPU CFS配额
--cpuset-cpus :指定使用的CPU id
--cpuset-mems :指定使用的内存 id
--disable-content-trus:跳过镜像验证
--file , -f：指定dockerfile的名称，默认为dockerfile
--force-rm：始终移除中间容器
--iidfile：将镜像ID写入文件
--isolation：使用容器隔离
--label：为镜像设置元数据
--memory , -m：设置内存限制
--memory-swap：设置总内存，包含交换内存
--network：设置镜像网络信息
--no-cache：构建镜像不使用缓存
--output , -o：设置镜像生成位置
--pull：始终尝试提取图像的较新版本
--quiet , -q：	禁止生成输出并成功打印图像ID
--rm：成功构建后删除中间容器
--tag, -t: 镜像的名字及标签
--ulimit :Ulimit配置
--shm-size :设置/dev/shm的大小，默认值是64M
</code></pre>
<p><strong>示例</strong></p>
<p>使用当前目录下的dockerfile制作nginx：V1镜像</p>
<pre><code>docker build -t nginx：V1 .
</code></pre>
<p>创建nginx：V2镜像，使用非当前目录下的dockerfile</p>
<pre><code>docker build -t nginx:V2 -f /opt/dockerfile
</code></pre>
<p>添加其他主机到容器文件中</p>
<pre><code>docker build --add-host=docker:1.1.1.1 .
</code></pre>
<p>使用参数–squash创建名为test:1的镜像</p>
<pre><code>docker build --squash -t test:1  .
</code></pre>
<h2 id="attach"><a href="#attach" class="headerlink" title="attach"></a>attach</h2><p>当前shell连接运行容器</p>
<p><strong>语法</strong></p>
<pre><code>docker attach 参数 容器ID/容器名称
</code></pre>
<p><strong>参数</strong></p>
<pre><code>--detach-keys：	覆盖分离容器的键序列
--no-stdin：不要附上STDIN
--sig-proxy：代理所有接收到的信号到进程
</code></pre>
<p><strong>示例</strong></p>
<p>默认使用方法</p>
<pre><code>ubuntu@VM-121-163-ubuntu:~$ sudo docker run -d --name ubuntu ubuntu /usr/bin/top -b		//创建并后台启动ubuntu容器
98c3f0964ad3a38e360867941a5510cd77e164a835be5b9b69aa47d3d5ceed17
ubuntu@VM-121-163-ubuntu:~$ sudo docker attach ubuntu
top - 08:24:58 up  1:12,  0 users,  load average: 0.04, 0.06, 0.01
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
%Cpu(s):  2.3 us,  1.7 sy,  0.0 ni, 96.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem :   885080 total,   149760 free,   231524 used,   503796 buff/cache
KiB Swap:        0 total,        0 free,        0 used.   499100 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
    1 root      20   0   36480   3100   2748 R  0.0  0.4   0:00.19 top

top - 08:25:01 up  1:12,  0 users,  load average: 0.04, 0.06, 0.01
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
%Cpu(s):  1.0 us,  0.7 sy,  0.0 ni, 98.0 id,  0.3 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem :   885080 total,   151252 free,   230048 used,   503780 buff/cache
KiB Swap:        0 total,        0 free,        0 used.   500588 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
    1 root      20   0   36480   3100   2748 R  0.0  0.4   0:00.19 top


top - 08:25:04 up  1:13,  0 users,  load average: 0.04, 0.06, 0.01
Tasks:   1 total,   1 running,   0 sleeping,   0 stopped,   0 zombie
%Cpu(s):  1.3 us,  1.0 sy,  0.0 ni, 97.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem :   885080 total,   151264 free,   230016 used,   503800 buff/cache
KiB Swap:        0 total,        0 free,        0 used.   500616 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
    1 root      20   0   36480   3100   2748 R  0.0  0.4   0:00.19 top
</code></pre>
<p>您可以看到该bash 过程返回的退出代码也由docker attach命令返回给其调用者</p>
<pre><code>ubuntu@VM-121-163-ubuntu:~$ sudo docker run --name ubuntu -d -it ubuntu		//创建并后台运行ubuntu容器
9ac7802feb2b77bb905bc9f4c5ca9782e6800fc995b1f2b39da78239d86a7405
ubuntu@VM-121-163-ubuntu:~$ sudo docker attach ubuntu
root@9ac7802feb2b:/# 
root@9ac7802feb2b:/# 
</code></pre>
<h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><p>保存当前容器为镜像&#x2F;快照</p>
<p><strong>语法</strong></p>
<pre><code>docker commit 容器名称/容器ID 镜像名:tag（版本）
</code></pre>
<p><strong>示例</strong></p>
<pre><code>ubuntu@VM-121-163-ubuntu:~$ sudo docker images		//查看镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        9 days ago          126MB
ubuntu              latest              549b9b86cb8d        2 weeks ago         64.2MB
ubuntu@VM-121-163-ubuntu:~$ sudo docker run -itd --name nginx nginx:latest		//创建容器
9566c54f3883b0a3b2f92dc94eb8520772d5d05826d7025be23212768f4d7967
ubuntu@VM-121-163-ubuntu:~$ sudo docker ps -a		//查看容器状态
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
9566c54f3883        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   11 seconds ago      Up 9 seconds        80/tcp              nginx
ubuntu@VM-121-163-ubuntu:~$ sudo docker commit nginx nginx:V1		//生成快照
sha256:e091997549ff02cf6309d6146b7626c6efef6dd9ce598c632f6bf0f4d090978c
ubuntu@VM-121-163-ubuntu:~$ sudo docker images		//查看镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               V1                  e091997549ff        22 seconds ago      126MB
nginx               latest              f7bb5701a33c        9 days ago          126MB
ubuntu              latest              549b9b86cb8d        2 weeks ago         64.2MB
ubuntu@VM-121-163-ubuntu:~$ 
</code></pre>
<h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><p>容器与宿主机互相复制文件</p>
<p><strong>语法</strong></p>
<pre><code>docker cp 容器ID/容器名:文件路径 宿主机路径		复制容器中文件到宿主机
docker cp 宿主机路径 容器ID/容器名:文件存储路径		复制宿主机文件到容器
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code> -a, --archive：复制文件同时复制文件用户信息
 -L, --follow-link：保持源目标中的链接
</code></pre>
<p><strong>示例</strong></p>
<p>复制宿主机文件到容器的根目录中</p>
<pre><code>root@test:/jia/test# docker run -d --name nginx nginx:latest	//创建并运行nginx容器
33b6339003ef41fd62b909fd79e9056d53d944b3172f0f02fc717fd64a2648e3
root@test:/jia/test# docker exec nginx ls /			//列出容器根目录
bin
boot
dev
etc
home
lib
lib64
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
root@test:/jia/test# docker cp test nginx:/		//复制文件到容器
root@test:/jia/test# docker exec nginx ls /		//列出容器根目录
bin
boot
dev
etc
home
lib
lib64
media
mnt
opt
proc
root
run
sbin
srv
sys
test
tmp
usr
var
</code></pre>
<p>从容器中复制文件到宿主目录</p>
<pre><code>root@test:/jia/test# ls 		//列出目录
root@test:/jia/test# docker cp nginx:/test .		//复制容器中文件到当前目录
root@test:/jia/test# ls			//列出目录
test
root@test:/jia/test# 
</code></pre>
<h2 id="create"><a href="#create" class="headerlink" title="create"></a>create</h2><p>创建容器但不启动容器</p>
<p><strong>语法</strong></p>
<pre><code>docker create 参数 镜像:tag（版本）
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--add-host：			在容器的hosts文件中添加记录	
-a, --attach：		指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项
--cap-add：		添加linux功能
--cap-drop：		删除linux功能
--cidfile：		将容器ID写入文件
-c， --cpu-shares：		设置cpu
--device：		将主机设备添加到容器
--disable-content-trus：		不对镜像进行验证
--dns：		为容器设置自定义dns服务器‘
--dns-opt：		设置DNS选项
--dns-search：		指定DNS搜索域名
--domainname：		设置容器域名
--env , -e：		设置环境变量
--env-file：		读取变量文件进行设置容器变量
--expose：		设置端口映射
--hostname , -h：		设置容器主机名
--init：		在容器内运行一个初始化程序，以转发信号并获取进程
--ip：		设置容器的IPV4地址
--ip6：		设置容器IPV6地址
--isolation：		使用隔离技术
--link：		将链接添加到宿主机，也就是创建软连接
--link-local-ip：		设置容器本地地址
--mac-address：		设置容器MAC地址
--memory , -m：		设置内存
--memory-swap：		设置总内存大小，包含交换内存
--mount：		挂载文件系统
--name：		设置容器名称
--net：		将容器链接网络
--net-alias：		为容器网络起别名
--network：		容器链接到网络
--network-alias：		为容器网络起别名
--publish , -p：		将容器端口映射到宿主机
--publish-all , -P：		将容器所有端口映射到宿主机
--read-only：		将容器的根文件系统挂载为只读
--restart：		容器退出时重新启动策略以应用
--rm：		退出时自动删除容器
--stop-signal：		停止容器的信号
--tty , -t：		分配终端
--user , -u：		设置运行容器的用户
--workdir , -w：		设置容器的工作目录
参数还有很多，这里就不一一列举了，上面是常用的参数
</code></pre>
<p><strong>示例</strong></p>
<p>创建nginx容器并启动</p>
<pre><code>root@test:/jia/test# docker create -t -i  nginx:latest /bin/bash		//创建容器
6f2cea61b80c117fe877589073b5f259a57623bd511a89330c72c825c0cbe4fd		
root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
6f2cea61b80c        nginx:latest        &quot;/bin/bash&quot;         12 seconds ago      Created                                 funny_gould
root@test:/jia/test# docker start -a -i 6f2cea61b80c		//启动容器
root@6f2cea61b80c:/# ls		//列出容器当前目录
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@6f2cea61b80c:/# 
</code></pre>
<p>创建名为nginx的容器并进行启动</p>
<pre><code>root@test:/jia/test# docker create --name nginx -t -i nginx:latest /bin/bash		//创建容器
5487d362e25bfcd39c70754972eb964121ba8408f3f97c89cac930208882e745
root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
5487d362e25b        nginx:latest        &quot;/bin/bash&quot;         5 seconds ago       Created                                 nginx
root@test:/jia/test# docker start -a -i nginx		//启动容器并进行链接
root@5487d362e25b:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@5487d362e25b:/# 
</code></pre>
<p>创建nginx容器并映射端口</p>
<pre><code>root@test:/jia/test# docker create --name nginx -p 80:80-it nginx:latest /bin/bash	//创建容器
4cc06988f4284f01281a338b914aff247a16969e33177088673a281d848f99d4
root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
ad7eb9da0f48        nginx:latest        &quot;/bin/bash&quot;         2 minutes ago       Exited (0) 2 seconds ago                       nginx
root@test:/jia/test# docker start nginx		//启动容器
nginx
root@test:/jia/test# docker ps -a		//查看容器状态
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                  NAMES
ad7eb9da0f48        nginx:latest        &quot;/bin/bash&quot;         2 minutes ago       Up 5 seconds        0.0.0.0:8080-&gt;80/tcp   nginx
root@test:/jia/test# curl 127.0.0.1
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Welcome to nginx!&lt;/title&gt;
&lt;style&gt;
    body &#123;
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    &#125;
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
&lt;p&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;/p&gt;

&lt;p&gt;For online documentation and support please refer to
&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
Commercial support is available at
&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
root@test:/jia/test#
</code></pre>
<h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><p>查看容器改动</p>
<p><strong>语法</strong></p>
<pre><code>docker diff 容器
</code></pre>
<p><strong>符号说明</strong></p>
<pre><code>A	添加了文件或目录
D	文件或目录已删除
C	文件或目录已更改
</code></pre>
<p><strong>示例</strong></p>
<p>默认使用方法</p>
<pre><code>root@test:/jia/test# docker diff nginx
C /root
A /root/.bash_history
root@test:/jia/test# 
</code></pre>
<p>复制test文件到nginx容器中查看你改动情况</p>
<pre><code>root@test:/jia/test# docker cp test nginx:/		//复制test文件到容器的根目录
root@test:/jia/test# docker diff nginx
A /test
C /root
A /root/.bash_history
root@test:/jia/test# 
</code></pre>
<h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><p>在容器中执行命令</p>
<p><strong>语法</strong></p>
<pre><code>docker exec 参数 容器ID/容器名称 命令
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--detach , -d：后台运行容器
--detach-keys：覆盖分离容器的键序列
--env , -e：设置环境变量
--interactive , -i：	即使未连接STDIN也保持打开状态
--privileged：赋予命令扩展权限
--tty , -t：	分配伪TTY
--user , -u：指定运行用户
--workdir , -w：设置工作目录
</code></pre>
<p><strong>示例</strong></p>
<p>使用容器打印“hello word”</p>
<pre><code>root@test:/jia/test# docker run --name centos -itd centos:latest		//创建并启动容器
1b75dac7104122e021fb8cc7989c8992eb8502f34713e76ee87e6d6f7796e83c
root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
1b75dac71041        centos:latest       &quot;/bin/bash&quot;         4 seconds ago       Up 3 seconds                            centos
root@test:/jia/test# docker exec centos echo &quot;hello word&quot;		//使用 echo 打印“hello word”
hello word
root@test:/jia/test# 
</code></pre>
<p>给容器建立交互式shell，并查看容器IP地址</p>
<pre><code>root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
1b75dac71041        centos:latest       &quot;/bin/bash&quot;         2 minutes ago       Up 2 minutes                            centos
root@test:/jia/test# docker exec -it centos /bin/bash		//建立bash交互式shell
[root@1b75dac71041 /]# ip addr		//查看IP地址
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
20: eth0@if21: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default 
    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0
       valid_lft forever preferred_lft forever
[root@1b75dac71041 /]# 
</code></pre>
<p>指定工作目录，并打印路径</p>
<pre><code>root@test:/jia/test# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
1b75dac71041        centos:latest       &quot;/bin/bash&quot;         9 minutes ago       Up 9 minutes                            centos
root@test:/jia/test# docker exec -w /var/www/html centos pwd		//设置工作目录，并进行打印目录
/var/www/html
root@test:/jia/test#
</code></pre>
<h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>登入docker镜像源服务器</p>
<p><strong>语法</strong></p>
<pre><code>docker login 参数 服务器地址
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-p, --password：指定登录服务器用户的密码
-u, --username：指定登录服务器用户的账户
</code></pre>
<p><strong>示例</strong></p>
<p>默认登录dockerhub</p>
<pre><code>root@test:/jia/test# docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don&#39;t have a Docker ID, head over to https://hub.docker.com to create one.
Username: blxt
Password: 
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@test:/jia/test#
</code></pre>
<p>指定用户名和密码进行登录</p>
<pre><code>root@test:/jia/test# docker login -u blxt -p 123456
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@test:/jia/test# 
</code></pre>
<p>登录阿里镜像仓库</p>
<pre><code>root@jia:/etc# docker login -u &#39;弑天倾城&#39; -p &#39;123456&#39; registry.cn-shenzhen.aliyuncs.com
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@jia:/etc# 
</code></pre>
<h2 id="logout"><a href="#logout" class="headerlink" title="logout"></a>logout</h2><p>退出登录镜像源服务器</p>
<p><strong>语法</strong></p>
<pre><code>docker logout 镜像仓库地址
</code></pre>
<p><strong>示例</strong></p>
<p>退出dockerhub用户登录</p>
<pre><code>root@jia:/etc# docker login -u blxt -p &#39;JKY@jjj.123&#39;		//登录dockerhub服务器
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@jia:/etc# docker logout		//退出登录
Removing login credentials for https://index.docker.io/v1/
root@jia:/etc# 
</code></pre>
<p>退出阿里镜像仓库</p>
<pre><code>root@jia:/etc# docker login -u &#39;弑天倾城&#39; -p &#39;123456&#39; registry.cn-shenzhen.aliyuncs.com		//登录阿里镜像仓库
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
root@jia:/etc# docker logout		//退出失败没有登录dockerhub仓库
Not logged in to https://index.docker.io/v1/
root@jia:/etc# docker logout registry.cn-shenzhen.aliyuncs.com
Removing login credentials for registry.cn-shenzhen.aliyuncs.com		//退出登录阿里镜像仓库
root@jia:/etc# 
</code></pre>
<h2 id="logs"><a href="#logs" class="headerlink" title="logs"></a>logs</h2><p>输出当前容器的日志信息</p>
<p><strong>语法</strong></p>
<pre><code>docker logs 参数 容器ID/容器名
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--details：查看日志详细信息
--follow , -f：实时动态的查看日志
--since：显示生成日志的时间
--tail：显示日志行数
--timestamps , -t：显示时间戳
--until：显示某一时间段的日志信息
</code></pre>
<p><strong>示例</strong></p>
<p>默认查看容器日志</p>
<pre><code>root@jia:/etc# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
85c8be92df44        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   7 minutes ago       Up 7 minutes        80/tcp              nginx
root@jia:/etc# docker logs nginx
172.17.0.1 - - [08/Jan/2020:08:19:02 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
172.17.0.1 - - [08/Jan/2020:08:19:04 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
172.17.0.1 - - [08/Jan/2020:08:19:07 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
root@jia:/etc# 
</code></pre>
<p>实时显示nginx容器的日志</p>
<pre><code>root@jia:/etc# docker run --name nginx -itd nginx:latest		//创建并启动nginx容器
85c8be92df44960e0973ae2b48907661679d921d0523cb93526351f07850f290
root@jia:/etc# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
85c8be92df44        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   4 seconds ago       Up 3 seconds        80/tcp              nginx
root@jia:~# docker inspect nginx | IPAddress	//查看容器的ip地址
IPAddress: command not found
root@jia:~# docker inspect nginx | grep IPAddress
            &quot;SecondaryIPAddresses&quot;: null,
            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
root@jia:~# curl 127.0.0.1		//访问nginx服务
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Welcome to nginx!&lt;/title&gt;
&lt;style&gt;
    body &#123;
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    &#125;
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
&lt;p&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;/p&gt;

&lt;p&gt;For online documentation and support please refer to
&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
Commercial support is available at
&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
root@jia:/etc# docker logs -f nginx		//输出日志信息
172.17.0.1 - - [08/Jan/2020:08:19:02 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
172.17.0.1 - - [08/Jan/2020:08:19:04 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
172.17.0.1 - - [08/Jan/2020:08:19:07 +0000] &quot;GET / HTTP/1.1&quot; 200 612 &quot;-&quot; &quot;curl/7.58.0&quot; &quot;-&quot;
</code></pre>
<h2 id="port"><a href="#port" class="headerlink" title="port"></a>port</h2><p>查看容器的端口映射情况</p>
<p><strong>语法</strong></p>
<pre><code>docker port 容器ID/容器名称
</code></pre>
<p><strong>示例</strong></p>
<p>列出nginx容器所有端口映射情况</p>
<pre><code>root@jia:/etc# docker run --name nginx -itd -P nginx:latest 		//创建并启动容器，映射容器所有端口
b4e3a51697c2e35b4a17acee93630ac77c6e9fe94df99c70750b60c4f87b535a
root@jia:/etc# docker ps -a			//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
b4e3a51697c2        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   4 seconds ago       Up 3 seconds        0.0.0.0:32768-&gt;80/tcp   nginx
root@jia:/etc# docker port nginx		//显示容器端口映射情况
80/tcp -&gt; 0.0.0.0:32768
root@jia:/etc# 
</code></pre>
<h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p>列出容器列表</p>
<p><strong>语法</strong></p>
<pre><code>docker ps 参数 
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--all , -a：查看所有容器
--filter , -f：根据相关条件进行过滤
--format:	使用Go模板打印漂亮的容器
--last , -n:显示第几个创建的容器
--latest , -l：显示最新创建的容器
--no-trunc：显示详细信息
--quiet , -q：只显示容器ID
--size , -s：显示容器的总大小
</code></pre>
<p><strong>示例</strong></p>
<p>查看所有容器</p>
<pre><code>root@jia:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
79b53ebbc86e        centos:latest       &quot;/bin/bash&quot;              5 seconds ago       Created                                     fervent_payne
b4e3a51697c2        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   13 minutes ago      Up 13 minutes       0.0.0.0:32768-&gt;80/tcp   nginx
root@jia:~# 
</code></pre>
<p>查看正在运行的容器</p>
<pre><code>root@jia:~# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
b4e3a51697c2        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   13 minutes ago      Up 13 minutes       0.0.0.0:32768-&gt;80/tcp   nginx
root@jia:~# 
</code></pre>
<h2 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h2><p>重新启动容器</p>
<p><strong>语法</strong></p>
<pre><code>docker restart 容器名称/容器ID
</code></pre>
<p><strong>参数</strong></p>
<pre><code>-t:设置重启执行时间
</code></pre>
<p><strong>示例</strong></p>
<pre><code>root@jia:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
b4e3a51697c2        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   16 minutes ago      Up 16 minutes       0.0.0.0:32768-&gt;80/tcp   nginx
root@jia:~# docker restart nginx
nginx
root@jia:~# 
</code></pre>
<h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>删除容器</p>
<p><strong>语法</strong></p>
<pre><code>docker rm 参数 容器ID/容器名称
</code></pre>
<p><strong>参数</strong></p>
<pre><code>--force , -f：根据条件进行删除容器，强制删除正在运行的容器
--link , -l：移除容器间的网络连接，而非容器本身
-v, --volumes：删除与容器关联的文件系统
</code></pre>
<p><strong>示例</strong></p>
<p>删除nginx容器</p>
<pre><code>root@jia:~# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                   NAMES
c3800e1bda43        centos              &quot;/bin/bash&quot;              About a minute ago   Up About a minute                           centos
b4e3a51697c2        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   22 minutes ago       Up 5 minutes        0.0.0.0:32769-&gt;80/tcp   nginx
root@jia:~# docker rm nginx		//删除容器，但nginx容器正在运行所以无法使用此参数删除
Error response from daemon: You cannot remove a running container b4e3a51697c2e35b4a17acee93630ac77c6e9fe94df99c70750b60c4f87b535a. Stop the container before attempting removal or force remove
root@jia:~# docker rm -f nginx		//强制删除nginx容器
nginx
root@jia:~# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMES
c3800e1bda43        centos              &quot;/bin/bash&quot;         About a minute ago   Up About a minute                       centos
root@jia:~# 
</code></pre>
<p>删除所有容器</p>
<pre><code>root@jia:~# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
4ee9b7488e32        nginx               &quot;nginx -g &#39;daemon of…&quot;   26 seconds ago      Up 25 seconds       80/tcp              nginx
c3800e1bda43        centos              &quot;/bin/bash&quot;              4 minutes ago       Up 4 minutes                            centos
root@jia:~# docker rm $(docker ps -a -q)		//删除容器失败，因为容器正在运行
Error response from daemon: You cannot remove a running container 4ee9b7488e323c80d9acaa01a214d00bc3072e2430df5ce7a0560acea0c9587c. Stop the container before attempting removal or force remove
Error response from daemon: You cannot remove a running container c3800e1bda43416add00ac18fb9c2d15e7d106e302ceef090e04d7fa6133368d. Stop the container before attempting removal or force remove
root@jia:~# docker rm -f  $(docker ps -a -q)		//删除所有容器
4ee9b7488e32
c3800e1bda43
root@jia:~# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@jia:~# 
</code></pre>
<h2 id="rmi"><a href="#rmi" class="headerlink" title="rmi"></a>rmi</h2><p>删除本地镜像</p>
<p><strong>语法</strong></p>
<pre><code>docker rmi 参数 镜像名称/镜像ID
</code></pre>
<p><strong>参数</strong></p>
<pre><code>--force , -f：强制删除
--no-prune：不移除该镜像的过程镜像，默认移除
</code></pre>
<p><strong>示例</strong></p>
<p>默认删除镜像</p>
<pre><code>root@jia:~# docker images		//查看本地镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        10 days ago         126MB
ubuntu              latest              549b9b86cb8d        2 weeks ago         64.2MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:~# docker rmi  549b9b86cb8d 		//删除ubuntu的镜像
Untagged: ubuntu:latest
Untagged: ubuntu@sha256:250cc6f3f3ffc5cdaa9d8f4946ac79821aafb4d3afc93928f0de9336eba21aa4
Deleted: sha256:549b9b86cb8d75a2b668c21c50ee092716d070f129fd1493f95ab7e43767eab8
Deleted: sha256:7c52cdc1e32d67e3d5d9f83c95ebe18a58857e68bb6985b0381ebdcec73ff303
Deleted: sha256:a3c2e83788e20188bb7d720f36ebeef2f111c7b939f1b19aa1b4756791beece0
Deleted: sha256:61199b56f34827cbab596c63fd6e0ac0c448faa7e026e330994818190852d479
Deleted: sha256:2dc9f76fb25b31e0ae9d36adce713364c682ba0d2fa70756486e5cedfaf40012
root@jia:~# docker images		//查看本地镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        10 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:~# 
</code></pre>
<p>强制删除正在运行的镜像</p>
<pre><code>root@jia:~# docker run -itd --name nginx nginx		//启动创建容器
36b203a3fb5cf8fe6a1e13e298998c8510f7d24e49da36ada8d7181d89b16089
root@jia:~# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
36b203a3fb5c        nginx               &quot;nginx -g &#39;daemon of…&quot;   3 seconds ago       Up 2 seconds        80/tcp              nginx
root@jia:~# docker images		//查看本地镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        10 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:~# docker rmi nginx:latest		//默认删除镜像，删除失败，报错镜像正在使用
Error response from daemon: conflict: unable to remove repository reference &quot;nginx:latest&quot; (must force) - container 36b203a3fb5c is using its referenced image f7bb5701a33c
root@jia:~# docker rmi -f nginx:latest		//强制删除镜像
Untagged: nginx:latest
Untagged: nginx@sha256:b2d89d0a210398b4d1120b3e3a7672c16a4ba09c2c4a0395f18b9f7999b768f2
root@jia:~# docker images		//查看镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
&lt;none&gt;              &lt;none&gt;              f7bb5701a33c        10 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:~# 
</code></pre>
<p>注意：当强制删除镜像后，会直接删除，但是会生成新的镜像，容器不会被删除</p>
<h2 id="save"><a href="#save" class="headerlink" title="save"></a>save</h2><p>保存镜像为tar包</p>
<p><strong>语法</strong></p>
<pre><code>docker save 参数 镜像名称 文件目录及名称.tar
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--output , -o：保存到某文件
</code></pre>
<p><strong>示例</strong></p>
<p>将nginx镜像保存为文件</p>
<pre><code>root@jia:/jia/jia# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        11 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# docker save nginx:latest &gt; nginx.tar
root@jia:/jia/jia# ls
nginx.tar
root@jia:/jia/jia# 
</code></pre>
<p>将多个镜像保存到一个文件</p>
<pre><code>root@jia:/jia/jia# docker save  -o test.tar nginx:latest centos:latest
root@jia:/jia/jia# ls
nginx.tar  test.tar
root@jia:/jia/jia# 
</code></pre>
<p>使用gzip+tar进行打包压缩</p>
<pre><code>root@jia:/jia/jia# docker save nginx:latest | gzip &gt; nginx.tar.gz
root@jia:/jia/jia# ls -lh		//查看目录中文件长格式显示
total 513M
-rw-r--r-- 1 root root 125M Jan  9 16:57 nginx.tar
-rw-r--r-- 1 root root  47M Jan  9 17:03 nginx.tar.gz
-rw------- 1 root root 342M Jan  9 17:00 test.tar
root@jia:/jia/jia# 
</code></pre>
<h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>查看容器中进程信息</p>
<p><strong>语法</strong></p>
<pre><code>docker top 参数 容器ID/容器名称
</code></pre>
<p><strong>示例</strong><br>查看nginx容器中所有进程信息</p>
<pre><code>root@jia:/jia/jia# docker run --name nginx -itd nginx:latest		//创建启动nginx容器
69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6
root@jia:/jia/jia# docker ps -a			//列出所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   5 seconds ago       Up 4 seconds        80/tcp              nginx
root@jia:/jia/jia# docker top nginx
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
root                28665               28637               1                   17:08               pts/0               00:00:00            nginx: master process nginx -g daemon off;
systemd+            28724               28665               0                   17:08               pts/0               00:00:00            nginx: worker process
root@jia:/jia/jia# 
</code></pre>
<h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><p>查看docker软件版本</p>
<p><strong>语法</strong></p>
<pre><code>docker version 参数
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-f, --format：使用给定的Go模板格式化输出
--kubeconfig：Kubernetes配置文件
</code></pre>
<p><strong>示例</strong><br>查看docker版本详细信息</p>
<pre><code>root@jia:/jia/jia# docker version
Client: Docker Engine - Community
 Version:           19.03.5
 API version:       1.40
 Go version:        go1.12.12
 Git commit:        633a0ea838
 Built:             Wed Nov 13 07:29:52 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          19.03.5
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.12
  Git commit:       633a0ea838
  Built:            Wed Nov 13 07:28:22 2019
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.2.10
  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339
 runc:
  Version:          1.0.0-rc8+dev
  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683
root@jia:/jia/jia# 
</code></pre>
<p>查看docker版本</p>
<pre><code>root@jia:/jia/jia# docker version --format &#39;&#123;&#123;.Server.Version&#125;&#125;&#39;
19.03.5
root@jia:/jia/jia#
</code></pre>
<h2 id="events"><a href="#events" class="headerlink" title="events"></a>events</h2><p>查看docker服务器实时事件</p>
<p><strong>语法</strong></p>
<pre><code>docker events 参数
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-f，--filter：根据条件过滤事件
--since ：从指定的时间戳后显示所有事件
--until ：流水时间显示到指定的时间为止
--format：使用给定的Go模板格式化输出
</code></pre>
<p><strong>示例</strong><br>容器启动停止，使用events显示事件</p>
<pre><code>root@jia:/jia/jia# docker ps -a		//查看容器列表
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   13 minutes ago      Up 13 minutes       80/tcp              nginx
root@jia:/jia/jia# docker stop nginx		//停止容器
nginx
root@jia:/jia/jia# docker start nginx		//启动容器
nginx
root@jia:/jia/jia# 

root@jia:~# docker events 		//查看实时事件，注意此命令不会自动终止需要crtl+c终止
2020-01-09T17:22:26.880177305+08:00 container kill 69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6 (image=nginx:latest, maintainer=NGINX Docker Maintainers &lt;docker-maint@nginx.com&gt;, name=nginx, signal=15)
2020-01-09T17:22:27.005016080+08:00 container die 69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6 (exitCode=0, image=nginx:latest, maintainer=NGINX Docker Maintainers &lt;docker-maint@nginx.com&gt;, name=nginx)
2020-01-09T17:22:27.103273324+08:00 network disconnect f2ccf449e47668433fb96511ef577c7515be7f481a7a9cb386c9d46650cbabbf (container=69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6, name=bridge, type=bridge)
2020-01-09T17:22:27.145650268+08:00 container stop 69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6 (image=nginx:latest, maintainer=NGINX Docker Maintainers &lt;docker-maint@nginx.com&gt;, name=nginx)
2020-01-09T17:22:33.680477968+08:00 network connect f2ccf449e47668433fb96511ef577c7515be7f481a7a9cb386c9d46650cbabbf (container=69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6, name=bridge, type=bridge)
2020-01-09T17:22:34.093551544+08:00 container start 69e353d8564025e07ee201098cafb9870d95b92edf990db2455aa6261c0bede6 (image=nginx:latest, maintainer=NGINX Docker Maintainers &lt;docker-maint@nginx.com&gt;, name=nginx)
</code></pre>
<h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><p>从tar文件导入docker为镜像</p>
<p><strong>语法</strong></p>
<pre><code>docker import 参数 tar文件目录名称 导入的镜像名称：tag（版本）
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--change , -c：	将Dockerfile指令应用于创建的映像
--message , -m：	设置导入图像的提交消息
</code></pre>
<p><strong>示例</strong><br>将nginx.tar的镜像包导入docker并命名nginx版本V1</p>
<pre><code>root@jia:/jia/jia# docker images		//查看本地所有镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        11 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# ls
nginx.tar  nginx.tar.gz  test.tar
root@jia:/jia/jia# docker import nginx.tar nginx:V1
sha256:07b2b1766ed11df9e7a12f98a4c5127c1aa0087e6b7d4eb0bc21490f168c1b0d
root@jia:/jia/jia# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               V1                  07b2b1766ed1        3 seconds ago       130MB
nginx               latest              f7bb5701a33c        11 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# 
</code></pre>
<p>导入使用tar打包gzip压缩的镜像</p>
<pre><code>root@jia:/jia/jia# docker import nginx.tar.gz nginx:V2
sha256:ca7505dbea914f7babb1ed3667d1a133461c344d92ea978585b64fe7dabf5b36
root@jia:/jia/jia# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               V2                  ca7505dbea91        8 seconds ago       130MB
nginx               V1                  07b2b1766ed1        2 minutes ago       130MB
nginx               latest              f7bb5701a33c        11 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# 
</code></pre>
<h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><p>从docker导出容器为tar文件</p>
<p><strong>语法</strong></p>
<pre><code>docker export 参数 容器名称/容器ID
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--output , -o：写入文件
</code></pre>
<p><strong>示例</strong><br>导出centos容器并命名为centos.tar</p>
<pre><code>root@jia:/jia/jia# docker run --name centos -itd centos:latest		//创建并启动centos容器
06b5abbb068dc493056aae6f1526b81028f931fd160fe470a937e15ac0110bdf
root@jia:/jia/jia# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
06b5abbb068d        centos:latest       &quot;/bin/bash&quot;              4 seconds ago       Up 3 seconds                            centos
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   32 minutes ago      Up 18 minutes       80/tcp              nginx
root@jia:/jia/jia# docker export centos &gt; centos.tar
root@jia:/jia/jia# ls
centos.tar  nginx.tar  nginx.tar.gz  test.tar
root@jia:/jia/jia# 
</code></pre>
<p>导出centos容器并命名为centos.tar.gz,使用gzip压缩</p>
<pre><code>root@jia:/jia/jia# docker export centos &gt; centos.tar
root@jia:/jia/jia# ls
centos.tar  nginx.tar  nginx.tar.gz  test.tar
root@jia:/jia/jia# docker export centos | gzip &gt; centos.tar.gz
root@jia:/jia/jia# ls -lh
total 796M
-rw-r--r-- 1 root root 217M Jan  9 17:41 centos.tar
-rw-r--r-- 1 root root  67M Jan  9 17:43 centos.tar.gz
-rw-r--r-- 1 root root 125M Jan  9 16:57 nginx.tar
-rw-r--r-- 1 root root  47M Jan  9 17:03 nginx.tar.gz
-rw------- 1 root root 342M Jan  9 17:00 test.tar
root@jia:/jia/jia# 
</code></pre>
<p>导出nginx容器，并命名nginx1.tar</p>
<pre><code>root@jia:/jia/jia# docker export -o nginx1.tar nginx
root@jia:/jia/jia# ls
centos.tar  centos.tar.gz  nginx1.tar  nginx.tar  nginx.tar.gz  test.tar
root@jia:/jia/jia# 
</code></pre>
<h2 id="info"><a href="#info" class="headerlink" title="info"></a>info</h2><p>查看docker系统信息</p>
<p><strong>语法</strong></p>
<pre><code>docekr info 参数
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--format , -f：使用给定的Go模板格式化输出
</code></pre>
<p><strong>示例</strong></p>
<pre><code>root@jia:/jia/jia# docker info
    Client:
     Debug Mode: false
    
    Server:
     Containers: 2
      Running: 2
      Paused: 0
      Stopped: 0
     Images: 4
     Server Version: 19.03.5
     Storage Driver: overlay2
      Backing Filesystem: extfs
      Supports d_type: true
      Native Overlay Diff: true
     Logging Driver: json-file
     Cgroup Driver: cgroupfs
     Plugins:
      Volume: local
      Network: bridge host ipvlan macvlan null overlay
      Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
     Swarm: inactive
     Runtimes: runc
     Default Runtime: runc
     Init Binary: docker-init
     containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339
     runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657
     init version: fec3683
     Security Options:
      apparmor
      seccomp
       Profile: default
     Kernel Version: 4.15.0-65-generic
     Operating System: Ubuntu 18.04.3 LTS
     OSType: linux
     Architecture: x86_64
     CPUs: 2
     Total Memory: 3.852GiB
     Name: jia
     ID: 74XS:4TCO:7OQX:BKF2:O2WW:JYEF:6Y6Q:RT3X:YVRO:Y2LP:JZIA:AHSB
     Docker Root Dir: /var/lib/docker
     Debug Mode: false
     Registry: https://index.docker.io/v1/
     Labels:
     Experimental: false
     Insecure Registries:
      127.0.0.0/8
     Live Restore Enabled: false
    
    WARNING: No swap limit support
    root@jia:/jia/jia# 
</code></pre>
<h2 id="inspect"><a href="#inspect" class="headerlink" title="inspect"></a>inspect</h2><p>查看容器详细信息</p>
<p><strong>语法</strong></p>
<pre><code>docker inspect 参数 容器ID/容器名称
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--format , -f：使用给定的Go模板格式化输出
--size , -s：显示文件总大小
--type :为指定类型返回JSON
</code></pre>
<p><strong>示例</strong></p>
<p>获取容器IP地址</p>
<pre><code>第一种方式：

root@jia:/jia/jia# docker ps -a		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
06b5abbb068d        centos:latest       &quot;/bin/bash&quot;              17 hours ago        Up 17 hours                             centos
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   17 hours ago        Up 17 hours         80/tcp              nginx
root@jia:/jia/jia# docker inspect centos | grep IPAddress
        &quot;SecondaryIPAddresses&quot;: null,
        &quot;IPAddress&quot;: &quot;172.17.0.3&quot;,
                &quot;IPAddress&quot;: &quot;172.17.0.3&quot;,
root@jia:/jia/jia# 

第二种方式：（只显示IP地址）

root@jia:/jia/jia#  docker inspect --format=&#39;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#39; centos
172.17.0.3
root@jia:/jia/jia# 
</code></pre>
<p>获取容器MAC地址</p>
<pre><code>root@jia:/jia/jia# docker inspect centos | grep MacAddress
        &quot;MacAddress&quot;: &quot;02:42:ac:11:00:03&quot;,
                &quot;MacAddress&quot;: &quot;02:42:ac:11:00:03&quot;,
root@jia:/jia/jia# 
</code></pre>
<p>获取容器日志目录</p>
<pre><code>root@jia:/jia/jia# docker inspect centos | grep log
    &quot;LogPath&quot;: &quot;/var/lib/docker/containers/06b5abbb068dc493056aae6f1526b81028f931fd160fe470a937e15ac0110bdf/06b5abbb068dc493056aae6f1526b81028f931fd160fe470a937e15ac0110bdf-json.log&quot;,
root@jia:/jia/jia# 
</code></pre>
<h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><pre><code>杀死正在运行的容器
</code></pre>
<p><strong>语法</strong></p>
<pre><code>docker kill 参数 容器ID/容器名称
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>--signal , -s：向容器发送信号
</code></pre>
<p><strong>示例</strong></p>
<p>杀死正在运行的centos容器</p>
<pre><code>root@jia:/jia/jia# docker ps		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
06b5abbb068d        centos:latest       &quot;/bin/bash&quot;              17 hours ago        Up 17 hours                             centos
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   18 hours ago        Up 17 hours         80/tcp              nginx
root@jia:/jia/jia# docker kill centos
centos
root@jia:/jia/jia# docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES
06b5abbb068d        centos:latest       &quot;/bin/bash&quot;              17 hours ago        Exited (137) 6 seconds ago                       centos
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   18 hours ago        Up 17 hours                  80/tcp              nginx
root@jia:/jia/jia# 
</code></pre>
<p>杀死正在运行的nginx容器，发送kill信号</p>
<pre><code>root@jia:/jia/jia# docker kill --signal=kill  nginx
nginx
root@jia:/jia/jia# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES
06b5abbb068d        centos:latest       &quot;/bin/bash&quot;              17 hours ago        Exited (137) 3 minutes ago                       centos
69e353d85640        nginx:latest        &quot;nginx -g &#39;daemon of…&quot;   18 hours ago        Exited (137) 1 second ago                        nginx
root@jia:/jia/jia# 
</code></pre>
<h2 id="load"><a href="#load" class="headerlink" title="load"></a>load</h2><p>从tar文件中加载为docker镜像</p>
<p><strong>语法</strong></p>
<pre><code>docker load 参数 tar文件
</code></pre>
<p><strong>参数说明</strong></p>
<pre><code>-i, --input：从tar存档文件中读取，而不是从STDIN中读取
--quiet , -q：显示简要信息
</code></pre>
<p><strong>示例</strong></p>
<p>导入nginx镜像</p>
<pre><code>root@jia:/jia/jia# docker images		//查看所有镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# docker load &lt; nginx.tar.gz 
556c5fb0d91b: Loading layer [==================================================&gt;]  72.48MB/72.48MB
49434cc20e95: Loading layer [==================================================&gt;]  57.67MB/57.67MB
75248c0d5438: Loading layer [==================================================&gt;]  3.584kB/3.584kB
Loaded image: nginx:latest
root@jia:/jia/jia# docker images		//查看所有镜像
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        12 days ago         126MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# 
</code></pre>
<h2 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h2><p>暂停容器</p>
<p><strong>语法</strong></p>
<pre><code>docker pause 容器ID/容器名称
</code></pre>
<p><strong>示例</strong></p>
<p>暂停centos容器</p>
<pre><code>root@jia:/jia/jia# docker run -itd --name centos centos:latest		//创建并运行
48e49042b927f427aed68437e12e5acd14b82e3a33a71b6f236bcef5c3edd41d
root@jia:/jia/jia# docker ps		//查看容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
48e49042b927        centos:latest       &quot;/bin/bash&quot;         2 seconds ago       Up 2 seconds                            centos
root@jia:/jia/jia# docker pause centos	
centos
root@jia:/jia/jia# docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                   PORTS               NAMES
48e49042b927        centos:latest       &quot;/bin/bash&quot;         14 seconds ago      Up 13 seconds (Paused)                       centos
root@jia:/jia/jia# 

容器暂停后会在状态处加(Paused) 
</code></pre>
<h2 id="unpause"><a href="#unpause" class="headerlink" title="unpause"></a>unpause</h2><p>取消容器暂停状态</p>
<p><strong>语法</strong></p>
<pre><code>docker unpause 容器ID/容器名称
</code></pre>
<p><strong>示例</strong></p>
<p>取消centos容器的暂停操作</p>
<pre><code>root@jia:/jia/jia# docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                   PORTS               NAMES
48e49042b927        centos:latest       &quot;/bin/bash&quot;         14 seconds ago      Up 13 seconds (Paused)                       centos
root@jia:/jia/jia# docker unpause centos
centos
root@jia:/jia/jia# docker ps -a		//查看所有容器
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
48e49042b927        centos:latest       &quot;/bin/bash&quot;         5 minutes ago       Up 5 minutes                            centos
root@jia:/jia/jia# 
</code></pre>
<h2 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h2><p>给镜像进行打标签</p>
<p><strong>语法</strong></p>
<pre><code>docker tag 源镜像ID/源镜像名称:tag（版本） 目标镜像名称：tag（版本）
</code></pre>
<p><strong>示例</strong></p>
<p>给centos镜像重新打标签</p>
<pre><code>root@jia:/jia/jia# docker tag  centos:latest centos:V1
root@jia:/jia/jia# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              f7bb5701a33c        12 days ago         126MB
centos              V1                  0f3e07c0138f        3 months ago        220MB
centos              latest              0f3e07c0138f        3 months ago        220MB
root@jia:/jia/jia# 
</code></pre>
<h2 id="wait"><a href="#wait" class="headerlink" title="wait"></a>wait</h2><p>阻塞运行直到容器停止，然后打印出它的退出代码</p>
<p><strong>语法</strong></p>
<pre><code>docekr wait 容器ID/容器名称
</code></pre>
<p><strong>示例</strong></p>
<pre><code>root@jia:/jia/jia# docker run -itd --name nginx nginx		//创建启动容器
57af5446f0eaff56a54c3a5559ac0073511de9b9f48c93ff04bbcd0c62b3a809
root@jia:/jia/jia# docker ps		//查看容器
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
57af5446f0ea        nginx               &quot;nginx -g &#39;daemon of…&quot;   4 seconds ago       Up 3 seconds        80/tcp              nginx
root@jia:/jia/jia# docker inspect nginx | grep IPAddress		//查看容器IP地址
        &quot;SecondaryIPAddresses&quot;: null,
        &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
                &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
root@jia:/jia/jia# curl 172.17.0.2		//访问容器的80端口
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Welcome to nginx!&lt;/title&gt;
&lt;style&gt;
    body &#123;
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    &#125;
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;
&lt;p&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;/p&gt;

&lt;p&gt;For online documentation and support please refer to
&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;
Commercial support is available at
&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
root@jia:/jia/jia# docker wait nginx		//启动阻塞

root@jia:~# curl 172.18.0.2		//发现无法访问容器nginx页面
</code></pre>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Rocky部署OpenVPN</title>
    <url>/2024/12/20/Rocky%E9%83%A8%E7%BD%B2OpenVPN/</url>
    <content><![CDATA[<!-- ### 参考文献
<font style="color:rgb(31, 45, 61);"></font>[Linux 小白鼠：https://www.itwordsweb.com/archives/openvpn](https://www.itwordsweb.com/)

[Rocky9.3安装openVPN_rocky 9.3-CSDN博客](https://blog.csdn.net/qq_19402941/article/details/135339138) -->

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="OpenVPN是啥？"><a href="#OpenVPN是啥？" class="headerlink" title="OpenVPN是啥？"></a>OpenVPN是啥？</h2><p>看名字想必大家也就猜个差不多了，open嘛就是开放、开源的意思，OpenVPN是一个开源的SSL VPN软件，主要是建立点对点的的连接，说白一点就是在做远程接入的时候建立VPN通道，这样可以对传输中的数据进行加密提高安全性。</p>
<span id="more"></span>
<h2 id="为啥要部署OpenVPN"><a href="#为啥要部署OpenVPN" class="headerlink" title="为啥要部署OpenVPN"></a>为啥要部署OpenVPN</h2><pre><code>1. 提高互联网链接的安全性；
2. 解决在某些限制较多的网络环境下访问服务器；
3. 减少在互联网暴露的端口；
4. 提高运维效率；
5. ......
</code></pre>
<p>我这里部署OpenVPN主要是为了解决我公司内部限制访问互联网的某些非常规端口的问题，我有几台服务器都是通过互联网通过不同的远程端口进行运维管理的，公司近期上了一台上网行为管理，直接导致我无法远程上我的服务器了，端口直接被限制掉，部署一台OpenVPN服务器正好完美解决了这个问题。</p>
<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><p>我这里环境比较简单，所有的主机都在一个网段里面，网段是192.168.0.0&#x2F;24段的，都在同一个网段下面，我这里拿出2台服务器来做介绍，一台服务器做OpenVPN服务器，一台服务器用于测试使用，一台电脑用于安装客户端测试，具体信息如下：</p>
<table>
<thead>
<tr>
<th align="center">主机名称</th>
<th align="center">操作系统</th>
<th align="center">内网IP地址</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ecs-df93</td>
<td align="center">Rocky Linux 9.5</td>
<td align="center">192.168.0.140</td>
<td align="center">安装openvpn服务端</td>
</tr>
<tr>
<td align="center">DESKTOP-6OLGDG7</td>
<td align="center">windows server 2022</td>
<td align="center">192.168.0.187</td>
<td align="center">作为被访问的服务器</td>
</tr>
<tr>
<td align="center">YOLO</td>
<td align="center">win11</td>
<td align="center">192.168.218.242</td>
<td align="center">作为客户端使用</td>
</tr>
</tbody></table>
<blockquote>
<p>注意!!!：这里需要注意下，客户端内网网段不能和服务器在同一个网段，而且客户端的网络这种也有和服务器是相同网段的也是不可以的，这样会造成网段冲突，会造成网络不可用的问题。</p>
</blockquote>
<h1 id="部署OpenVPN"><a href="#部署OpenVPN" class="headerlink" title="部署OpenVPN"></a>部署OpenVPN</h1><h2 id="服务器初始化"><a href="#服务器初始化" class="headerlink" title="服务器初始化"></a>服务器初始化</h2><h3 id="加载epel、elrepo库"><a href="#加载epel、elrepo库" class="headerlink" title="加载epel、elrepo库"></a>加载epel、elrepo库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf -y install epel-release epel-next-release elrepo-release</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<!-- <img src="1733752190720-3427b976-8989-459d-ae3f-3f63ed21e832.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733752190720-3427b976-8989-459d-ae3f-3f63ed21e832.png">'); </script>

<h3 id="重新建立缓存"><a href="#重新建立缓存" class="headerlink" title="重新建立缓存"></a>重新建立缓存</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf clean all	## 删除缓存</span><br><span class="line">dnf makecache ## 建立缓存</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<!-- <img src="1733752411057-dec47ca1-3ffc-447c-8ce5-dd35d22b469f.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733752411057-dec47ca1-3ffc-447c-8ce5-dd35d22b469f.png">'); </script>

<h3 id="安装更新"><a href="#安装更新" class="headerlink" title="安装更新"></a>安装更新</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf update -y</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<!-- <img src="1733752072418-384d60b0-fe4c-403f-ac18-3523d409524a.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733752072418-384d60b0-fe4c-403f-ac18-3523d409524a.png">'); </script>

<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld	## 关闭防火墙</span><br><span class="line">systemctl disable firewalld	## 关闭防火墙开机自启动</span><br></pre></td></tr></table></figure>

<h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">  setenforce 0	## 临时关闭selinux，重启后会自动开启</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改配置文件永久关闭</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">配置文件：/etc/selinux/config</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">修改参数：SELINUX=disabled</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">修改后配置内容如下：</span></span><br><span class="line">  </span><br><span class="line">cat /etc/selinux/config </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    disabled - No SELinux policy is loaded.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">See also:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/using_selinux/changing-selinux-states-and-modes_using-selinux#changing-selinux-modes-at-boot-time_changing-selinux-states-and-modes</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># NOTE: Up to RHEL 8 release included, SELINUX=disabled would also</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fully <span class="built_in">disable</span> SELinux during boot. If you need a system with SELinux</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fully disabled instead of SELinux running with no policy loaded, you</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">need to pass selinux=0 to the kernel <span class="built_in">command</span> line. You can use grubby</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">to persistently <span class="built_in">set</span> the bootloader to boot with selinux=0:</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#    grubby --update-kernel ALL --args selinux=0</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To revert back to SELinux enabled:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#    grubby --update-kernel ALL --remove-args selinux</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">SELINUX=disabled</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SELINUXTYPE= can take one of these three values:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    minimum - Modification of targeted policy. Only selected processes are protected.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>

<h2 id="安装OpenVPN"><a href="#安装OpenVPN" class="headerlink" title="安装OpenVPN"></a>安装OpenVPN</h2><p>安装有很多中方法安装比如编译安装、rpm安装、docker安装等等，我这里就用个最简单的安装方式rpm安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install -y openvpn easy-rsa</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<!-- <img src="1733753188062-6e60b3be-49cb-4ff5-8ddd-bc83d5e14c12.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733753188062-6e60b3be-49cb-4ff5-8ddd-bc83d5e14c12.png">'); </script>

<h2 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h2><h3 id="创建easy-rsa工作目录"><a href="#创建easy-rsa工作目录" class="headerlink" title="创建easy-rsa工作目录"></a>创建easy-rsa工作目录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/openvpn/easy-rsa	## 创建工作目录</span><br><span class="line">cp -r /usr/share/easy-rsa/3.0.8/* /etc/openvpn/easy-rsa/	## 将所需文件复制到工作目录</span><br><span class="line">mkdir -p /etc/openvpn/easy-rsa/keys	## 创建存放证书的目录</span><br><span class="line">cp -r /usr/share/doc/easy-rsa-3.0.8/vars.example /etc/openvpn/easy-rsa/vars	## 复制vars模板文件到工作目录</span><br></pre></td></tr></table></figure>

<!-- <img src="1733753736682-1aeac48f-cd42-4159-bf78-4778e656ddf5.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733753736682-1aeac48f-cd42-4159-bf78-4778e656ddf5.png">'); </script>>


<h3 id="编辑修改easy-rsa（vars）配置文件，配置文件路径：-etc-openvpn-easy-rsa-vars"><a href="#编辑修改easy-rsa（vars）配置文件，配置文件路径：-etc-openvpn-easy-rsa-vars" class="headerlink" title="编辑修改easy-rsa（vars）配置文件，配置文件路径：&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars"></a>编辑修改easy-rsa（vars）配置文件，配置文件路径：&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;vars</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 1. 修改第50行，取消前面注释并修改</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA        <span class="string">&quot;<span class="variable">$&#123;0%/*&#125;</span>&quot;</span></span></span><br><span class="line">修改为：</span><br><span class="line">  set_var EASYRSA	&quot;$PWD&quot;		## 设置当前目录为工作目录</span><br><span class="line">2. 取消第60行注释</span><br><span class="line">  set_var EASYRSA_OPENSSL &quot;openssl&quot;	## 设置使用openssl</span><br><span class="line">3. 在第61行增加内容</span><br><span class="line">增加内容：</span><br><span class="line">  set_var EASYRSA_PKCS11_TOOL &quot;pkcs11-tool&quot;	## 指定pkcs11-tool命令</span><br><span class="line">  set_var EASYRSA_GREP &quot;grep&quot;	## 指定grep命令</span><br><span class="line">4. 修改第74行，取消前面注释并修改</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_PKI             <span class="string">&quot;<span class="variable">$PWD</span>/pki&quot;</span></span></span><br><span class="line">修改为：</span><br><span class="line">  set_var EASYRSA_PKI             &quot;$PWD/keys&quot;		## 设置存放密钥的文件</span><br><span class="line">5. 取消第129行注释</span><br><span class="line">  set_var EASYRSA_KEY_SIZE        2048		## RSA密钥长度</span><br><span class="line">6. 修改第146行，取消前面注释并修改</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_CA_EXPIRE      3650</span></span><br><span class="line">修改为：</span><br><span class="line">  set_var EASYRSA_CA_EXPIRE       36500	## CA证书有效期</span><br><span class="line">7. 修改第150行，取消前面注释并修改</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_CERT_EXPIRE     825</span></span><br><span class="line">修改为：</span><br><span class="line">   set_var EASYRSA_CERT_EXPIRE     36500	## 普通证书有效期</span><br><span class="line">8. 修改第103-108行，取消前面注释并修改</span><br><span class="line">此部分内容可以自行填写，为一些前方证书的基本信息</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_COUNTRY    <span class="string">&quot;US&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_PROVINCE   <span class="string">&quot;California&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_CITY       <span class="string">&quot;San Francisco&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_ORG        <span class="string">&quot;Copyleft Certificate Co&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_EMAIL      <span class="string">&quot;me@example.net&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">set_var EASYRSA_REQ_OU         <span class="string">&quot;My Organizational Unit&quot;</span></span></span><br><span class="line">修改为：</span><br><span class="line">  set_var EASYRSA_REQ_COUNTRY     &quot;CN&quot;		## 国家</span><br><span class="line">  set_var EASYRSA_REQ_PROVINCE    &quot;HeBei&quot;		## 省份</span><br><span class="line">  set_var EASYRSA_REQ_CITY        &quot;Shi JiaZhuang&quot;		## 城市</span><br><span class="line">  set_var EASYRSA_REQ_ORG &quot;blxt&quot;		## 公司名称</span><br><span class="line">  set_var EASYRSA_REQ_EMAIL       &quot;blxt@163.com&quot;	##邮箱</span><br><span class="line">  set_var EASYRSA_REQ_OU          &quot;blxt&quot;		## 维护单位</span><br><span class="line">9. 在末尾增加行</span><br><span class="line">  set_var EASYRSA_REQ_CN &quot;EasyRSA&quot;	## 设置通用名称</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## easy-rsa初始化</span></span></span><br><span class="line">  cd /etc/openvpn/easy-rsa</span><br><span class="line">  ./easyrsa init-kpi</span><br></pre></td></tr></table></figure>
<p>输出内容如下：</p>
<!-- <img src="1733756249632-d026eef5-f42b-4a79-b568-9a9d2f919b77.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733756249632-d026eef5-f42b-4a79-b568-9a9d2f919b77.png">'); </script>

<blockquote>
<p>注意!!!：提示以下内容时需要输入“yes”</p>
<ol>
<li>Type the word ‘yes’ to continue, or any other input to abort.<br> Confirm removal:	</li>
<li>Type the word ‘yes’ to continue, or any other input to abort.<br> Remove current ‘vars’ file?</li>
</ol>
</blockquote>
<h3 id="生成CA证书"><a href="#生成CA证书" class="headerlink" title="生成CA证书"></a>生成CA证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./easyrsa build-ca nopass</span><br></pre></td></tr></table></figure>

<p>输出内如如下：</p>
<!-- <img src="1733756483255-055a65e6-ea89-48df-8777-ecb520b92a49.png"/> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733756483255-055a65e6-ea89-48df-8777-ecb520b92a49.png">'); </script>

<blockquote>
<p>注意!!!：注意查看是敲回车还是输入yes<br>Common Name (eg: your user, host, or server name) [Easy-RSA CA]:</p>
</blockquote>
<h3 id="生成server端私钥和证书"><a href="#生成server端私钥和证书" class="headerlink" title="生成server端私钥和证书"></a>生成server端私钥和证书</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./easyrsa gen-req server nopass</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<!-- <img src="1733756749530-85e72c84-9671-417d-91c3-7de3928ec13e.png"/> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733756749530-85e72c84-9671-417d-91c3-7de3928ec13e.png">'); </script>>

<blockquote>
<p>注意!!!：注意查看是敲回车还是输入yes<br>Common Name (eg: your user, host, or server name) [server]:</p>
</blockquote>
<h3 id="给server证书进行签名"><a href="#给server证书进行签名" class="headerlink" title="给server证书进行签名"></a>给server证书进行签名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./easyrsa sign-req server server</span><br></pre></td></tr></table></figure>

<p>输出内容如下：</p>
<!-- <img src="1733756920853-2511622d-1a1f-429a-88c5-f6775f7b46a0.png" /> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733756920853-2511622d-1a1f-429a-88c5-f6775f7b46a0.png">'); </script>

<h3 id="生成客户端证书和私钥并进行签名"><a href="#生成客户端证书和私钥并进行签名" class="headerlink" title="生成客户端证书和私钥并进行签名"></a>生成客户端证书和私钥并进行签名</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./easyrsa gen-req client nopass	## 签发证书和私钥</span><br><span class="line">./easyrsa sign-req client client	## 对证书进行签名</span><br></pre></td></tr></table></figure>

<h3 id="生成Diffie-Hellman参数"><a href="#生成Diffie-Hellman参数" class="headerlink" title="生成Diffie-Hellman参数"></a>生成Diffie-Hellman参数</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./easyrsa gen-dh</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<!-- <img src="1733757261549-02a15b69-0cad-4d1d-a2ab-c9b967ef5e97.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733757261549-02a15b69-0cad-4d1d-a2ab-c9b967ef5e97.png">'); </script>
<h2 id="配置OpenVPN"><a href="#配置OpenVPN" class="headerlink" title="配置OpenVPN"></a>配置OpenVPN</h2><h3 id="复制配置文件模板"><a href="#复制配置文件模板" class="headerlink" title="复制配置文件模板"></a>复制配置文件模板</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /usr/share/doc/openvpn/sample/sample-config-files/server.conf /etc/openvpn/server/</span><br></pre></td></tr></table></figure>

<h3 id="创建ta-key文件"><a href="#创建ta-key文件" class="headerlink" title="创建ta.key文件"></a>创建ta.key文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openvpn --genkey tls-auth ta.key</span><br><span class="line">cp ta.key /etc/openvpn/server/</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>配置文件目录：&#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;server.conf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. 修改第25行，取消前面分号并修改</span><br><span class="line">  ;local a.b.c.d</span><br><span class="line">修改为：</span><br><span class="line">  local	0.0.0.0		## 设置服务器监听地址</span><br><span class="line">2.修改第32行，端口号</span><br><span class="line">  port 1194</span><br><span class="line">修改为：</span><br><span class="line">  port	11211		## 这个可以修改也可以不修改，我这里冲突所以说就修改一下</span><br><span class="line">3. 修改第36行，协议类型</span><br><span class="line">  proto udp</span><br><span class="line">修改为：</span><br><span class="line">  proto	tcp			## 这个也是可选修改，建议udp</span><br><span class="line">4. 修改78-80行，指定证书位置</span><br><span class="line">  ca ca.crt</span><br><span class="line">  cert server.crt</span><br><span class="line">  key server.key  # This file should be kept secret</span><br><span class="line">修改为：</span><br><span class="line">  ca /etc/openvpn/easy-rsa/keys/ca.crt		## 指定CA证书位置</span><br><span class="line">  cert /etc/openvpn/easy-rsa/keys/issued/server.crt		## 指定server证书位置</span><br><span class="line">  key /etc/openvpn/easy-rsa/keys/private/server.key		## 指定server私钥位置</span><br><span class="line">5. 修改85行，指定pem文件位置</span><br><span class="line">  dh dh2048.pem</span><br><span class="line">修改为：</span><br><span class="line">  dh /etc/openvpn/easy-rsa/keys/dh.pem</span><br><span class="line">6. 修改101行，指定分配的地址段</span><br><span class="line">  server 10.8.0.0 255.255.255.0</span><br><span class="line">修改为：</span><br><span class="line">  server 10.200.200.0 255.255.255.0	## 这里网段可以自定义，只要不冲突就可以，给客户端分配的地址</span><br><span class="line">7. 修改114行，指定路由</span><br><span class="line">  ;push &quot;route 192.168.10.0 255.255.255.0&quot;</span><br><span class="line">修改为：</span><br><span class="line">  push	&quot;route 192.168.0.0 255.255.255.0&quot;		## 这里修改为你要访问服务器的网段</span><br><span class="line">8. 取消209行注释</span><br><span class="line">  client-to-client	## 允许客户端访问客户端</span><br><span class="line">9. 取消263行注释</span><br><span class="line">  comp-lzo		## 开启压缩功能，提高传输效率</span><br><span class="line">10. 取消267行注释 </span><br><span class="line">  max-clients 100		## 设置最大连接数</span><br><span class="line">11. 修改最后一行</span><br><span class="line">  explicit-exit-notify 1</span><br><span class="line">修改为</span><br><span class="line">  explicit-exit-notify 0		## 如果第36行协议设置的udp则可以不用修改，tcp需要修改为0</span><br></pre></td></tr></table></figure>

<h3 id="启动客户端并设置开机自启"><a href="#启动客户端并设置开机自启" class="headerlink" title="启动客户端并设置开机自启"></a>启动客户端并设置开机自启</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start openvpn-server@server	## 启动</span><br><span class="line">systemctl enable openvpn-server@server	## 设置开机自启</span><br></pre></td></tr></table></figure>

<p>查看端口是否已启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -anpl | grep openvpn</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<!-- <img src="1733760762502-9bfd531a-1aed-449c-ac68-e70d9439da0f.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733760762502-9bfd531a-1aed-449c-ac68-e70d9439da0f.png">'); </script>

<p>查看生成的网卡文件</p>
<!-- <img src="1733798645075-946d0345-d845-47ac-bdc2-02c38b4eb200.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733798645075-946d0345-d845-47ac-bdc2-02c38b4eb200.png">'); </script>>

<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><h3 id="开启路由转发"><a href="#开启路由转发" class="headerlink" title="开启路由转发"></a>开启路由转发</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ecs-df93 ~]# echo &#x27;net.ipv4.ip_forward=1&#x27; &gt; /etc/sysctl.conf </span><br><span class="line">[root@ecs-df93 ~]# sysctl -p</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">[root@ecs-df93 ~]# </span><br></pre></td></tr></table></figure>

<h3 id="设置iptables防火墙转发规则和NAT规则"><a href="#设置iptables防火墙转发规则和NAT规则" class="headerlink" title="设置iptables防火墙转发规则和NAT规则"></a>设置iptables防火墙转发规则和NAT规则</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -t nat -I POSTROUTING 1 -s 10.200.200.0/24 -o ens3 -j MASQUERADE</span><br><span class="line">iptables -I INPUT 1 -i tun0 -j ACCEPT</span><br><span class="line">iptables -I FORWARD 1 -i ens3 -o tun0 -j ACCEPT</span><br><span class="line">iptables -I FORWARD 1 -i tun0 -o ens3 -j ACCEPT</span><br><span class="line">iptables -I INPUT 1 -i ens3 -p tcp --dport 11211 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><p>客户端默认配置文件模板位置在以下目录</p>
<blockquote>
<p>&#x2F;usr&#x2F;share&#x2F;doc&#x2F;openvpn&#x2F;sample&#x2F;</p>
</blockquote>
<!-- <img src="1733761084409-7ac386c5-106f-4af1-80cf-52b5f9b5620c.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733761084409-7ac386c5-106f-4af1-80cf-52b5f9b5620c.png">'); </script>

<p><font style="color:#DF2A3F;">sample-config-files</font>和<font style="color:#DF2A3F;">sample-windows</font>两个目录里面都有，针对不同的终端提供的，配置内容基本都差不多</p>
<h2 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">client		## 启用客户端模式</span><br><span class="line">dev tun		## 设置虚拟网络接口类型为tun</span><br><span class="line">proto tcp		## 设置协议类型，和服务端需要保持一致	</span><br><span class="line">remote XXX.XXX.XXX.XXX 11211		## 设置服务器外网地址和端口</span><br><span class="line">resolv-retry infinite		## 开启无限重试机制</span><br><span class="line">nobind		## 不绑定本地网络端口</span><br><span class="line">persist-key		## 设置持久化密钥</span><br><span class="line">persist-tun		## 持久化虚拟端口</span><br><span class="line">&lt;ca&gt;</span><br><span class="line">  --此处填写CA证书内容</span><br><span class="line">&lt;/ca&gt;</span><br><span class="line"></span><br><span class="line">&lt;cert&gt;</span><br><span class="line">  --此处填写客户端证书内容</span><br><span class="line">&lt;/cert&gt;</span><br><span class="line"></span><br><span class="line">&lt;key&gt;</span><br><span class="line">  --此处填写客户端私钥内容</span><br><span class="line">&lt;/key&gt;</span><br><span class="line"></span><br><span class="line">comp-lzo	## 开启压缩传输</span><br><span class="line">verb 3		##设置日志等级</span><br></pre></td></tr></table></figure>

<h2 id="下载安装客户端"><a href="#下载安装客户端" class="headerlink" title="下载安装客户端"></a>下载安装客户端</h2><blockquote>
<p>官网下载地址：<a href="https://openvpn.net/client/">https://openvpn.net/client/</a>	  ## 需要魔法哦<br>CSDN下载地址：<a href="https://download.csdn.net/download/KH_FC/90109869">https://download.csdn.net/download/KH_FC&#x2F;90109869</a>  ## 被检测到翻墙，无法下载了哦<br>gitee下载地址：<a href="https://gitee.com/blxtst/openvpn/raw/master/openvpn-connect-3.5.1.3946_signed.msi">https://gitee.com/blxtst/openvpn/raw/master/openvpn-connect-3.5.1.3946_signed.msi</a></p>
</blockquote>
<p>其他下载方法：百度上也有很多可以下载的地方，我这里就不整理了 .</p>
<p>安装就下一步下一步安装即可，不需要额外的操作，安装完成后如下截图</p>
<!-- <img src="1733797405209-c02da8e5-18e5-45a8-bce6-bdf243139234.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733797405209-c02da8e5-18e5-45a8-bce6-bdf243139234.png">'); </script>>

<h2 id="导入配置文件"><a href="#导入配置文件" class="headerlink" title="导入配置文件"></a>导入配置文件</h2><h3 id="客户端选择upload-file"><a href="#客户端选择upload-file" class="headerlink" title="客户端选择upload file"></a>客户端选择upload file</h3><!-- <img src="1733797437778-444826f4-c9ec-48ea-b7d4-4b64b4e6830a.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733797437778-444826f4-c9ec-48ea-b7d4-4b64b4e6830a.png">'); </script>

<h3 id="点击底部BROWSE"><a href="#点击底部BROWSE" class="headerlink" title="点击底部BROWSE"></a>点击底部BROWSE</h3><p>选择你修改好的客户端配置文件</p>
<!-- <img src="1733797502711-0f27285c-985e-46d0-afd9-2b0706d93846.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733797502711-0f27285c-985e-46d0-afd9-2b0706d93846.png">'); </script>

<p>点击connect即可进行连接</p>
<h3 id="连接成功截图"><a href="#连接成功截图" class="headerlink" title="连接成功截图"></a>连接成功截图</h3><!-- <img src="1733797550776-86a63338-98c9-4b45-80dc-5a37f9385a59.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733797550776-86a63338-98c9-4b45-80dc-5a37f9385a59.png">'); </script>

<h1 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h1><h3 id="ping-openvpn服务器地址"><a href="#ping-openvpn服务器地址" class="headerlink" title="ping openvpn服务器地址"></a>ping openvpn服务器地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ping 192.168.0.140</span><br></pre></td></tr></table></figure>

<!-- <img src="1733797661124-95a56ba1-fa96-4979-8f13-b0bc6ef77033.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733797661124-95a56ba1-fa96-4979-8f13-b0bc6ef77033.png">'); </script>

<h3 id="ping-服务器网关或服务器地址"><a href="#ping-服务器网关或服务器地址" class="headerlink" title="ping 服务器网关或服务器地址"></a>ping 服务器网关或服务器地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ping 192.168.0.187</span><br></pre></td></tr></table></figure>

<!-- <img src="1733798518958-bbea0918-1a30-422f-b647-35bc82e98564.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733798518958-bbea0918-1a30-422f-b647-35bc82e98564.png">'); </script>

<h3 id="查看客户端获取到的地址和路由"><a href="#查看客户端获取到的地址和路由" class="headerlink" title="查看客户端获取到的地址和路由"></a>查看客户端获取到的地址和路由</h3><!-- <img src="1733798561764-9b2b0dfd-6f8b-4f79-ae0d-407167ef0893.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733798561764-9b2b0dfd-6f8b-4f79-ae0d-407167ef0893.png">'); </script>
<!-- <img src="1733798595495-2aff9663-214a-4481-b906-4f23f8f6285f.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387254/1733798595495-2aff9663-214a-4481-b906-4f23f8f6285f.png">'); </script>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>云计算</tag>
        <tag>linux</tag>
        <tag>openvpn</tag>
      </tags>
  </entry>
  <entry>
    <title>一起聊聊等保测评</title>
    <url>/2024/12/24/dbcp01/</url>
    <content><![CDATA[<p>现在好多企业里面好像都在搞这个等保测评，这个等保测评终究是个什么东西呢？那企业为什么要做这个等保测评呢？做完之后对企业又有什么帮助呢？然后就是哪些企业需要做等保测呢？甚至很多企业做了很多次等保测评最后都不太了解这个等保测评，那今天就让我们一起聊聊这个神话般的等保测评吧！</p>
<span id="more"></span>
<p> <strong>1.首先我们来说说什么是等保测评？</strong><br>等保测评可以说是对<strong>信息</strong>和<strong>信息载体</strong>按照重要性等级分级别进行保护的一种工作，也可以说是一项<strong>网络安全测评</strong>的方法。等保测评是对于需要进行等级保护的<strong>信息</strong>或<strong>信息系统</strong>根据<strong>等级保护测评指南</strong>开展相关的测评活动，是由公安部主导的这项网络安全测评活动。<br> <strong>2. 是由谁来做呢？</strong><br>等保测评是由具有<strong>等级保护测评资质</strong>的<strong>测评机构</strong>来完成这个测评工作，开展等级保护测评的机构需要获得等保备案运营单位或者公司所在<strong>当地的公安</strong>认可，否则测评报告也许会被判无用。<br><strong>3.企业为什么要做？</strong><br>首先是为了提高<strong>保障水平</strong>以及优化<strong>资源分配</strong>，以等保为契机，统一系统化进行安全规划和建设，能有效的提高信息安全保障工作的整体水平，有效解决信息系统面临威胁和存在的主要问题，将有限的财力、物力、人力投入到重点工作当中，发挥最大的安全经济效益。<br>再次就是因为国家发布《<strong>网络安全法</strong>》，根据相关规定有义务的不做相关等保测评的进行罚款，企业罚款相关负责人也要罚款哦。</p>
<!-- ![在这里插入图片描述](83099704f22a041b6e218fc9c9f51a1f.png) -->

<!-- <img src="83099704f22a041b6e218fc9c9f51a1f.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/83099704f22a041b6e218fc9c9f51a1f.png">'); </script><br>

<p><strong>4.等保测评的工作流程是怎样的？</strong><br>等保测评工作通常分为以下五步，但是这五步并不是必须都要做的，必须要做的就是<strong>系统定级</strong>、<strong>系统备案</strong>、<strong>等级测评</strong>。其他两步是根据需求进行做就可以了。</p>
<ol>
<li>系统定级<br>首先第一步就是系统定级，进行这个系统定级需要完成<strong>定级对象</strong>、<strong>系统等级</strong>、<strong>定级报告</strong>这个三个东西。<br>首先看下这个<strong>定级对象</strong>，这个定级对象也就是指的我什么信息系统要做这个等保测评，一般的企业里面比如说<strong>OA系统</strong>、<strong>资金监管系统</strong>、<strong>ERP系统</strong>等等，这些是要求做等保测评的，这里确定好自己企业要做<strong>等保测评</strong>的系统就可以了<br>第二个就是要确定<strong>系统等级</strong>，说是要做等保测评那你总得知道我的系统要做几级的等保测评吧，但是这个等保测评等级也不是你随便说我做几级就做几级的，也是有相关发文说明的，在《<strong>信息系统安全等级保护定级指南</strong>》中有相关说明，测评等级一共是分为五个等级，这五个等级是根据等级保护对象在<strong>受到破坏</strong>时<strong>侵害的客体</strong>以及<strong>对客体造成侵害程度</strong>进行区分的<!-- ![在这里插入图片描述](31cdd819de18d2b8383ccf48abbcd331.png) -->
<!-- <img src="31cdd819de18d2b8383ccf48abbcd331.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/31cdd819de18d2b8383ccf48abbcd331.png">'); </script><br>
一般企业做等保测评的话比较多的就是二级和三级，像银行对社会秩序、公共利益和国家安全造成严重侵害，这种的要求做四级或者五级<br>最后一个就是<strong>定级报告</strong>了，这个定级报告一般来说很简单的，按照模板写一下就可以了，但是要求是必须是信息系统管理员填写，这个遇到好的等保测评机构就会帮着写，遇到比较强硬的那就自己写吧谁也没有办法。定级报告内容包含：<strong>信息系统详细描述</strong>、<strong>安全保护等级确定</strong>、<strong>系统服务安全保护等级确定</strong>。下面这个表很重要：</li>
</ol>
<!-- ![在这里插入图片描述](2364a64ab61e347feac725c2fd1d7d7e.png) -->
<!-- <img src="2364a64ab61e347feac725c2fd1d7d7e.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/2364a64ab61e347feac725c2fd1d7d7e.png">'); </script><br>

<p>偷偷透露一下，这个定级报告的内容要写蛮多的呢，这个尽量去让测评机构帮忙写，不然来来回回跑公安部麻烦的很</p>
<ol>
<li>系统备案<br>根据要求第二级以上信息系统定级单位到所在地的市级以上公安机关办理备案手续。省级单位到省公安厅网安总队备案，各地市单位一般直接到市级网安支队备案，也有部分地市区县单位的定级备案资料是先交到区县公安网监大队的，具体根据各地市要求来。备案的时候带上定级资料去网安部门，一般两份纸质文档，一份电子档，纸质的首页加盖单位公章。下面使备案表模板：</li>
</ol>
<!-- ![在这里插入图片描述](2fa41be4075bdd25bebe6b5c825adfda.png) -->
<!-- <img src="2fa41be4075bdd25bebe6b5c825adfda.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735387015/2fa41be4075bdd25bebe6b5c825adfda.png">'); </script><br>

<!-- ![在这里插入图片描述](8b8b1e61619485e56942da479546a2b1.png) -->
<!-- <img src="8b8b1e61619485e56942da479546a2b1.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735387015/8b8b1e61619485e56942da479546a2b1.png">'); </script><br>

<!-- ![在这里插入图片描述](b4f9c92c874116a7efbea729db16918e.png) -->
<!-- <img src="b4f9c92c874116a7efbea729db16918e.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735387015/b4f9c92c874116a7efbea729db16918e.png">'); </script><br>

<!-- ![在这里插入图片描述](c7400ac71465f197ee470781b0b522a1.png) -->
<!-- <img src="c7400ac71465f197ee470781b0b522a1.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735387015/c7400ac71465f197ee470781b0b522a1.png">'); </script><br>

<!-- ![在这里插入图片描述](4c7853c58fc4268e620b55eb4d95e89b.png) -->
<!-- <img src="4c7853c58fc4268e620b55eb4d95e89b.png"><br> -->
<script> document.write('<img src="'+ imgurl +'1735387015/4c7853c58fc4268e620b55eb4d95e89b.png">'); </script><br>
<ol>
<li>建设整改<br>信息系统安全保护等级确定后，运营使用单位按照管理规范和技术标准，选择管理办法要求的信息安全产品，建设符合等级要求的信息安全设施，建立安全组织，制定并落实安全管理制度。其实这个建设整改说白了就是等保测评机构先给你看看有哪些不满足要求的，然后给你说一下让你先改改，后面再进行测评，省的一次一次又一次的测麻烦。</li>
</ol>
<!-- ![在这里插入图片描述](d990c8199e100c285fde0a65b37b7150.png) -->
<!-- <img src="d990c8199e100c285fde0a65b37b7150.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/d990c8199e100c285fde0a65b37b7150.png">'); </script><br>

<ol>
<li>等级测评<br>信息系统建设完成后，运营使用单位选择符合管理办法要求的检测机构，对信息系统安全等级状况开展等级测评。测评完成之后根据发现的安全问题及时进行整改，特别是高危风险。测评的结论分为：不符合、基本符合、符合。当然符合基本是不可能的，那是理想状态，这个就是到了他们测评机构真正上场的时候了，他们会根据信息系统情况去出一份测评报告和整改报告，根据这些报告然后再去公安部进行报备最后发放证书。</li>
<li>监督检查<br>公安机关依据信息安全等级保护管理规范及《网络安全法》相关条款，监督检查运营使用单位开展等级保护工作，定期对信息系统进行安全检查。运营使用单位应当接受公安机关的安全监督、检查、指导，如实向公安机关提供有关材料。这个监督检查吧说白了就是怕有人拿假的东西来糊弄他，然后每年进行一次抽查，这个抽查是在一个行业里面抽查几家，然后他们去做测评工作，看看是否和测评报告写的一致，一致的话就平安无事，不一致的话直接系统当场停掉，然后交罚款，当时测评的测评机构也面临着摘牌的风险。</li>
</ol>
<p><strong>5.什么系统需要做等保测评？</strong></p>
<ul>
<li>党政系统</li>
<li>金融系统</li>
<li>财税系统</li>
<li>经贸系统</li>
<li>电信系统</li>
<li>能源系统</li>
<li>交通运输系统</li>
<li>供水系统</li>
<li>社会应急服务系统</li>
<li>教育科研系统</li>
<li>国防建设系统</li>
<li>物联网业务</li>
<li><strong>等等</strong></li>
</ul>
<p><strong>6.这个等保测评多久做一次呢？</strong><br>根据规定一级系统三年或多年，二级系统两年一次，三级系统一年一次，四级系统半年一次，五级系统随时做。<br><strong>7.做等保测评是不是要很多钱啊？</strong><br>这个问题其实不该问的，信息系统的安全是不能用金钱衡量的，这个等保测评各个省份价格都是不一样的，像河北大概二级等保四万，三级等保六万，北京的话更贵一点，其他省份的可能也都差不多吧，具体的可以留言咨询，我这边给你们查<br><strong>8.这个测评肯定会测哪些东西呢？</strong><br>首先这个等保测评会对机房的物理环境、网络、主机、安全、应用、数据这五个大块进行检测，具体的小项我想着上传到资源中，但是没办法上传不了，有需要的直接留言找我要吧！！！</p>
<!-- ![在这里插入图片描述](8a4b058cf79e6135de1ab1dbe9d8958a.png) -->
<!-- <img src="8a4b058cf79e6135de1ab1dbe9d8958a.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/8a4b058cf79e6135de1ab1dbe9d8958a.png">'); </script><br>
<!-- ![在这里插入图片描述](06edf1acf742742636197e0039343007.png) -->
<!-- <img src="06edf1acf742742636197e0039343007.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387015/06edf1acf742742636197e0039343007.png">'); </script><br>

<p>想不起再给大家说哪些了？大家有关于等保测评的问题可以直接评论区问？一般都是会回复的</p>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>等保测评</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>一起聊聊等保测评工作内容以及FAQ</title>
    <url>/2024/12/24/dbcp02/</url>
    <content><![CDATA[<p>之前写过一篇关于等保测评的相关介绍<a href="https://blog.csdn.net/KH_FC/article/details/115628039?spm=1001.2014.3001.5502">《一起聊聊等保测评》</a>，发现大家对于等保测评这个还是很关注的，有些人问等保测评这份工工作的，也有些人问关于等保测评一些指导意见的，这篇文章我想把大家的问题来总结一下，让大家对等保测评有一个更深入的认识。</p>
<span id="more"></span>
<p><strong>1.首先我想先来说说等保测评师这个职位，这个职位的未来发展方向又是怎样的呢？</strong><br>在说这个职位之前呀我们先来看看这个职位的工作职责是什么？下面我找了几个知名等保测评机构的招聘信息。</p>
<!-- ![在这里插入图片描述](ce3b0f2d76ea6be90ed8f35511c1629c.png) -->
<!-- <img src="ce3b0f2d76ea6be90ed8f35511c1629c.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387112/ce3b0f2d76ea6be90ed8f35511c1629c.png">'); </script><br>
<!-- ![在这里插入图片描述](58377dac4cf2f0d1af756d474e016220.png) -->
<!-- <img src="58377dac4cf2f0d1af756d474e016220.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387112/58377dac4cf2f0d1af756d474e016220.png">'); </script><br>
<!-- ![在这里插入图片描述](56e6adcf8a93d5654cc2b23d87a36f18.png) -->
<!-- <img src="56e6adcf8a93d5654cc2b23d87a36f18.png"> -->
<script> document.write('<img src="'+ imgurl +'1735387112/56e6adcf8a93d5654cc2b23d87a36f18.png">'); </script><br>

<p>这类的招聘信息还是有很多的，我这里就不一个一个列举出来了，那我们先从薪资来说一说这份工作吧。<br><strong>北京、上海、广州：平均在10-15K左右<br>河北、成都、西安：平均在8-13K左右</strong><br>由以上可以看出薪资方面还是比较不错的，当然这个薪资的高低跟区域划分、个人能力等多方面因素有关，刚入门的小伙伴如果在二线或三线城市的话可能入门薪资也就在3-8K之间，更多的是5K左右，相对于二线三线城市薪资应该算是比较合适的了，像北上广深这种一线城市可能刚毕业入门的话薪资在7-10K之间，当然这只是我招聘信息结合二三线城市的情况去推断出来的，具体的薪资情况要看企业和面试情况去定的。</p>
<p>说完薪资我们再来看看等保测评师的工作职责是什么？下面我总结了下招聘信息中所提到的一些关键性的工作职责。</p>
<ol>
<li>等保测评的项目实施及管理，包括等保测评的物理安全测评、主机安全测评、数据安全测评、应用安全测评、风险评估、差距分析等并编制相关报告。</li>
<li>完成信息安全等级保护测评、信息安全咨询、信息安全风险评估等项目的技术支持工作，能够为客户提供信息安全等级保护、信息安全风险评估以及其他信息安全知识的培训；</li>
<li>负责等级保护测评项目、信息安全风险评估项目以及其他信息安全项目的投标应答、讲解与答疑；</li>
</ol>
<p>看到上面的工作内容基本上已经涵盖了等保测评师的所有工作内容了，但是招聘信息一般写的都比较文字化不够直白，当然做过类似工作的肯定一看就知道是怎么回事，没有做过的看到上面内容一般就会认为这个工作不就是个文职类工作嘛，平时也就写写报告，写写投标文件啥的嘛，其实并不是这样的等保测评涵盖的工作有很多，不但你要有写作能力还要有技术能力才行的。下面我来说一说这个工作的具体工作内容</p>
<ol>
<li><strong>事前</strong><ul>
<li><strong>项目方案</strong>：当销售挖掘到客户需求之后，就需要等保测评师来针对客户的具体需求来出具测评项目整体方案</li>
<li><strong>答疑解惑</strong>：上面有了项目方案就需要给客户讲解整个项目的方案和解答客户所提出的问题。比如：方案优势、测评流程、职责划分等等一系列问题</li>
<li><strong>招投标</strong>：配合客户测制作招标文件，投标中技术参数、偏离表等等，当然这个会有项目经理带着一起做，有些公司没有项目经理就需要自行解决啦，还有很重要的一个环节就是招投标答疑，这个是很重要的招投标的关键点，但不是所有项目都需要答疑的</li>
</ul>
</li>
<li>事中<ul>
<li><strong>项目启动会</strong>：这个项目启动会一般是在客户测进行召开的，由等保测评公司发起客户测人员参与的这样一个会议，在这个项目启动会中要将项目进行立项，明确工作内容、划分工作职责、确定工作流程、确认工作时间点、收集信息等等</li>
<li><strong>定级、备案</strong>：这里是要协助配合客户来完成的，按照正常流程是由客户测来完成，考虑到客户测对流程不了解，所以由测评师来协助完成，在这里要明确客户测系统测评等级、需要测评的系统等等，需要编写备案表、备案报告和一些纸质的相关资料。</li>
<li><strong>专家评审</strong>：这个专家评审是由测评公司向公安部申请，由国家专家库中派遣或抽取相应的三个专家，专家去客户测现场了解情况，了解后在相关文件中进行签字，签字完成后会由客户测拿着定级报告等材料去公安部进行备案，备案完成后会发放电子版测评证书。</li>
<li><strong>系统测评</strong>：前面的工作都是准备工作，系统测评才是最重要的一部分，在这个模块中等保测评师需要对客户测系统进行现场测评，测评前打印测评表，按照测评表中测评项对客户的业务系统进行一条一条的查看检查，检查大项包括：物理环境、主机环境、数据库环境、应用环境、安全边界环境等等，这里是最重要的也是需要技术的，因为你需要一项一项的去的按照规则去查看他有没有配置相应的策略等等，在此你还需要对系统进行漏洞扫描、渗透测试等等一些工作。</li>
<li><strong>整改报告</strong>：在上一步对系统测评做完测评后会先编辑制作一份整改报告，整改报告内容包含不满足的测评项以及整改建议，当然这个期间也会对客户的系统出一个大概的分数，不满足就需要客户整改后再进行一次测评，如果满足的话就直接往下进行并且告知客户测哪些项不满足。</li>
<li><strong>测评报告</strong>：这个就是测评工作的最后一个内容了，也是需要花费大量时间去完成的一个工作了，在此你可能会有很多时间是在加班做的，因为在此期间也会其他项目去做的，这里会把所有的测评结果列出来，完成之后会交由公安部进行审核没问题最后会给到客户一份。</li>
</ul>
</li>
<li>事后<br> 大家是不是以为测评都完成了就没有后续了吧，往往不是这样的看过我写的上一篇关于等保测评的同学大家都知道测评完成了之后还有一项就是公安部会不定期不定时的会抽取行业内的一些系统进行检查的，如果被抽到的了那恭喜了，你们就需要提前联系客户去再进行一次现场测评，这一次不需要出具任何纸质资料，但是测评结果要和你提交的测评报告一致，不然公安部查出后客户测以及测评机构也会受到一些处罚的。</li>
</ol>
<p> 以上就是测评工作的基本所有内容了，所以说这份工作并不是一份纯文职的一份工作，更多的还是需要有一些技术功底的。因为很多工作都是在客户现场做的，所以会涉及到频繁的出差的。</p>
<p>说了职责那再来说说这个职位要有哪些能力才能从容的面对这份工作？下面是我在招聘信息中整理出来的一些要求：</p>
<ol>
<li>.熟悉计算机系统和网络设备的操作,至少精通一种操作系统的安全机制和配置（Windows，Linux，Unix）；熟悉数据库系统的安全机制和配置；熟悉安全协议、网络安全体系架构、安全技术和应用，熟练配置管理主流信息安全产品；</li>
<li>对系统安全、网络安全以有深入理解,熟悉网络安全相关标准，如风险评估规范，等级保护，ISO27001等；</li>
<li>持有网络安全等级测评证书（初级、中级、高级）和具有网络安全等级测评工作经验者或安全服务工作经验者优先；</li>
</ol>
<p>大致基本上就是上面的这些要求，每个公司之间的要求基本上都大差不差的，下面我来总结下具体需要哪些能力：</p>
<ol>
<li>首先就是你必须要有一定的网络知识的基础，比如：路由器、交换机、防火墙等设备的配置和工作原理。</li>
<li>熟悉服务器版本的操作系统，比如：Centos、Ubuntu等liunx操作系统，windows server 2012 R2、windows sevrer 2016等windows操作系统，甚至你还要熟悉AIX系统和unix操作系统，以及国产操作系统如麒麟、UOS等等。</li>
<li>要熟悉数据库系统，如MySql、SQL server、DB2、Oracle等数据库安全配置以及使用。</li>
<li>对各类攻击性行为的工作原理以及防护防护方法方式有一定的理解和熟知，比如：SQL注入、木马、勒索病毒等等</li>
<li>要对国家网络安全的相关标准有一定的了解或熟悉，比如ISO27001、网络安全等级保护基本要求等等，都要有一定的熟悉。</li>
<li>写文件比较多当然要有一定的写作功底。</li>
</ol>
<p>以上就是我总结的一些基础，除了以上的能力之外可能还需要很多其他的能力，所需能力基本上就这些，大家有需要补充的可以告诉我我来补充。</p>
<p>总结一下吧，这份工作呢整体来说还是很不错的，也有较大的成长空间，涉及的面相对来说也比较广，各方面都可以涉及的到，对于应届生刚步入社会不知往哪个方向发展，可以考虑先来做等保测评师通过这份工作来积累经验和了解各个方向的利弊，选择后续自己发展的一个重点，当然后续继续在这方面发展也是完全不错的，这份工作和其他IT行业的工作类似都是需要有证书和能力来提升自己的薪资，从事这个工作的建议大家都去考测评师证书，很多企业入门都是要求有这个证书的。</p>
<p><strong>2.企业业务系统部署在公有云了或者托管到了运营商的IDC机房是不是就不需要做等保了？</strong><br>首先来说下哈不管是你托管到别人的机房还是把业务系统部署到了公有云都是需要做等保测评的，根据“谁运营谁负责，谁使用谁负责，谁主管谁负责”的原则，该系统责任主体还是属于网络运营者自己，所以还是得承担相应的网络安全责任，该进行系统定级的还是得定级，该做等保的还是得做等保。<br>系统上云或托管后，并不是安全责任主体转移，只是系统所在机房地址的变更，当然在公有云模式下，Iaas、Paas、Saas不同模式相应的安全责任会有些区别，但是并不是没有责任。部署到公有云或者IDC机房当中只不过是底层资源是已经过了等保测评的，但整体的应用你还是没有过等保测评，所以还是要做的，流程还是哪些流程，不过就是有一部分不需要由自己来负责了，只需要把自己负责的一部分做好防护就可以了。<br><strong>3.系统定级是不是越低越好，定的低了所需的安全就少一些，这样就会减少很多资金投入了？</strong><br>这肯定是不对的，最终定级是根据受侵害的客体以及对客体侵害的程度来确定的，以事实为根据，而不是主观随意定级。定级低了，表面上要求更容易满足，但相应的防护措施也相对不足，万一你的系统不小心被攻击破坏造成一定不良影响，在主管部门进行责任认定追查时，很有可能就会因为系统定级不合理，安全责任没有履行到位而被处罚。<br><strong>4.只要保证不出事，是不是不做等保测评也可以？</strong><br>只要是需要做的就不能不做，《中华人民共和国网络安全法》第二十一条 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：（五）法律、行政法规规定的其他义务。不做等保就属于第五个行为，国内目前已经有公开报道的因没有落实等级保护制度而被处罚的真实案例。所以等保及时去做，不要等。<br><strong>5.系统在内网，数据不出公司是不是就可以不用做等保测评了？</strong><br>这个肯定是不对的，首先所有非涉密系统都属于等级保护范畴，和系统在外网还是内网没有关系。其次在内网的系统往往其网络安全技术措施做的并不好，甚至不少系统已经发生了安全事件。所以不论系统在内网还是外网都得及时开展等保工作。<br><strong>6.做等保测评就意味着一定要去整改吗？会不会花费很多资金来做整改？</strong><br>这个不一定，整改花多少钱取决于你的信息系统等级、系统现有的安全防护措施状况以及网络运营者对测评分数的期望值，如果信息系统在建设阶段，采取了完备的安全技术手段，整改工作不一定要花很多钱甚至不花钱。<br><strong>7.信息系统上云就安全了？</strong><br>很多单位认为网站和信息系统上云后就安全了，等保不用做了。这样是不对的，信息系统是否上云，安全责任主体都不会变。各类云平台只提供平台和简单的安全措施，安全责任主体单位还是要按等保要求落实相应的安全工作，只是物理和环境安全等部分安全工作由云平台承担。</p>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>等保测评</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>等保三级安全要求简要攻略-安全物理环境</title>
    <url>/2024/12/24/dbcp03/</url>
    <content><![CDATA[<p>之前有两篇文章写了为什么要做等保测评、等保测评的含义以及等保测评这份工作的一些职责和一些常见的FAQ，没有看过的朋友可以先去看下我的另外两篇文章：<a href="https://blog.csdn.net/KH_FC/article/details/115628039">一起聊聊等保测评</a> 和 <a href="https://blog.csdn.net/KH_FC/article/details/127748882">一起聊聊等保测评工作内容以及FAQ</a> 。</p>
<span id="more"></span>

<p>今天我们来攻略一下等保2.0国家标准中《<strong>信息安全技术网络安全等级保护基本要求</strong>》所对三级系统所提出的要求项以及针对这些要求项如何去应对或者说是如何去做防护。废话不多说直接上正题</p>
<p>在等保三级中分为十个大项分别是：安全物理环境、安全通信网络、安全区域边界、安全计算环境、安全管理中心、安全管理制度、安全管理机构、安全管理人员、安全建设和管理、安全运维管理，这十大项里面有N个小项来做限制，因为小项比较多，这篇文章主要是针对安全物理环境来说的，后面也会慢慢把所有的检查项都写给大家攻略的<br><strong>下面所写的攻略以及测评结果仅供参考，要以实际情况为准。</strong></p>
<h3 id="安全物理环境"><a href="#安全物理环境" class="headerlink" title="安全物理环境"></a>安全物理环境</h3><p>安全物理环境看名字就可以知道主要是针对我们物理上做的一些安全要求，比如说机房选址、防雷、防电、恒湿恒温等等做的一些要求</p>
<h4 id="物理位置选择"><a href="#物理位置选择" class="headerlink" title="物理位置选择"></a>物理位置选择</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>机房场地应选择在具有防震、防风和防雨等能力的建筑内。</td>
<td>这一个小项其实是要求你的机房所在的位置要有防雷、防风、防震、防雨等措施的建筑内，其实这个一般的企业里面建设机房都是可以满足的，一般企业也是把机房建设在办公楼内的比较多，一般办公楼都可以满足防风、防雨这些要求，高层建筑肯定也都有避雷针，这样这个就基本上就可以满足了。</td>
<td>针对这一项很多测评公司都会写：<strong>机房建设在办公楼内，办公楼具备防风、防雷、防雨、防震等措施。</strong></td>
</tr>
<tr>
<td>机房场地应避免设在建筑物的顶层或地下室，否则应加强防水和防潮等措施。</td>
<td>这一个小项其实是要求你的机房所在位置要有防潮、防水等措施的建筑内，企业里面估计也没有几个是把机房建设在地下室或者顶层的，除了专门做云计算的云厂商会把机房建设在奇奇怪怪的地方，比如华为、阿里、腾讯会把部分机房放到大山里面，还有更厉害的微软直接把机房放到大海里，这个毋庸置疑的是建设成本很高，一般企业也承担不起这个费用的，我记得这个要求你建设在一层可能就要要求有一些防水和防潮的措施了，这一项基本也都不会扣分的</td>
<td>针对这一项更多测评公司会写：<strong>机房建设在办公大楼的3楼位置，具备防水、防潮的能力。</strong></td>
</tr>
</tbody></table>
<h4 id="物理访问控制"><a href="#物理访问控制" class="headerlink" title="物理访问控制"></a>物理访问控制</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>机房出入口应配置电子门禁系统，控制、鉴别和记录进入人员。</td>
<td>这个一个小项其实是要求企业对进入机房的所有人员进行监控，不能随意让别人进入机房，要求对进入机房的人员进行签到记录，机房门上要安装门禁等等，这个一般企业里面也不会随意让非工作人员进入机房的</td>
<td>针对这一项跟多测评公司会写：<strong>机房门口安装有门禁，进出人员需要佩戴出入证，进入前会对所有进入人员进行登记，门口贴有机房重地，闲人勿入等标签等等</strong></td>
</tr>
</tbody></table>
<h4 id="防盗窃和放破坏"><a href="#防盗窃和放破坏" class="headerlink" title="防盗窃和放破坏"></a>防盗窃和放破坏</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应将设备或主要部件进行固定，并设置明显不易除去的标识</td>
<td>这一项基本上都会满足的，一般机房内所有设备都会固定到机柜上面，设备上一般企业做固定资产一般也会贴上标签，网线、电线上也会有一些标签来辨别用途，这一项主要是针对没有固定机柜的机房的，这个一项基本上也是送分项</td>
<td>针对这一项很多测评公司会写：<strong>机房内部署有机柜，所有安全设备、网络设备、计算设备等都固定在机柜上，并且机柜、设备、线路上印有固定资产标识等等</strong></td>
</tr>
<tr>
<td>应将通信线缆铺设在隐蔽安全处</td>
<td>这一项会有部分企业是不满足的，很多企业在实施的时候都不注重这一点，线路乱接，不进行整理，网络工程师一般都知道一个好的机房线路整理的特别顺，进到机房里面就感觉这个事情一定是强迫症做的，特别干净整洁，这一项也比较好整改，只要把线放到理线架里面基本上也没啥问题，能走底线的走底线，不能走的就走天花板基本上这也是机房的常规操作了</td>
<td>针对这一项很多测评公司会写：<strong>通信线缆铺设在防静电地板下面，并且地板上面线路均铺设在理线架内</strong></td>
</tr>
<tr>
<td>应设置机房防盗报警系统或设置有专人值守的视频监控系统。</td>
<td>这一项基本上也是送分项，机房内肯定会安装摄像头，无非就是有没有专人值守监控了，企业有钱的话也会安装防盗报警系统，但是说实话这一套系统也不少钱呢，基本上这一项大部分都满足</td>
<td>针对这一项很多测评公司会写：<strong>机房内有防盗报警系统，当有人非法闯入会自动报警，系统接入到了保安室，保安室会7*24小时有专人值守</strong></td>
</tr>
</tbody></table>
<h4 id="防雷击"><a href="#防雷击" class="headerlink" title="防雷击"></a>防雷击</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应将各类机柜、设施和设备通过接地系统安全接地</td>
<td>这一项基本上企业也都满足，说白了就是要有接地线进行安全接地，机房大部分都会有接地线的，只不过设备多的时候就要求每个设备都可以安全接地，一般现在机柜都会有接地线，只要机柜接地了，设备只要把接地线接到机柜上基本上也可以做到安全接地了</td>
<td>针对这一项很多测评公司会写：<strong>所有设备、机柜、设施已进行安全接地</strong></td>
</tr>
<tr>
<td>应采取措施防止感应雷，例如设置防雷保安器或过压保护装置等</td>
<td>这一项基本上也都可以满足，大部分都会有过压保护装置，这个防雷保安器可能很少会有，但是二选其一只要有一个有就可以了</td>
<td>针对这一项很多测评公司会写：<strong>机房内安装有过压保护装置，当电压过高自动采取过压措施</strong></td>
</tr>
</tbody></table>
<h4 id="防火"><a href="#防火" class="headerlink" title="防火"></a>防火</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>机房应设置火灾自动消防系统，能够自动检测火情、自动报警，并自动灭火</td>
<td>这一项基本上也都可以满足，现在只要是办公楼现在都有自动灭火感应装置，如果企业有钱的话可以给机房单独部署一套火灾自动消防系统</td>
<td>针对这一项很多测评公司会写：<strong>机房内有自动灭火感应装置和烟雾感应装置</strong></td>
</tr>
<tr>
<td>机房及相关的工作房间和辅助房应采用具有耐火等级的建筑材料</td>
<td>这一项其实说白了就是让你提供机房建设时使用的建设材料是否满足要求的耐火等级要求的材料，只要正规建筑单位基本上都可以满足，除非你用隔板做的隔间机房</td>
<td>针对这一项很多测评公司会写：<strong>机房建设材料采用耐火等级几级的建筑材料</strong></td>
</tr>
<tr>
<td>应对机房划分区域进行管理，区域和区域之间设置隔离防火措施</td>
<td>这一项针对大型机房来说的，一般小型机房基本上不涉及这一项的，就是说要你在每隔几个机柜之间防一个防火隔离装置或者隔离墙这样的东西</td>
<td>针对这一项很多测评公司会写：<strong>机房内装有防火隔离墙</strong></td>
</tr>
</tbody></table>
<h4 id="防水和防潮"><a href="#防水和防潮" class="headerlink" title="防水和防潮"></a>防水和防潮</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采取措施防止雨水通过机房窗户、屋顶和墙壁渗透</td>
<td>这一项也是送分项，这个只要是在窗户上装上防雨罩，屋顶墙壁做防水就可以了，只要是做了就会满足</td>
<td>针对这一项很多测评公司会写：<strong>机房内窗户上安装有防雨罩，屋顶墙壁等左右防水</strong></td>
</tr>
<tr>
<td>应采取措施防止机房内水蒸气结露和地下积水的转移与渗透</td>
<td>这一项就是要求你的机房内部要恒温恒湿了，机房要装有空调，保证室内是恒温恒湿状态就可以了，天花板、地板上没有水就可以</td>
<td>针对这一项很多测评公司会写：<strong>机房内装有恒温恒湿装置</strong></td>
</tr>
<tr>
<td>应安装对水敏感的检测仪表或元件，对机房进行防水检测和报警</td>
<td>这一项就是防止你的机房内部有水蒸气、或者结水呀等情况的时候能及时发出报警，这个就需要安装一个水敏感检测器了，有很多企业也都不装这个，装有恒湿恒温装置基本上也就解决这个问题了，每个测评公司要求不太一样，这个会不会减分完全在测评公司</td>
<td>针对这一项测评公司会写：<strong>机房内装有恒湿恒温设备，并且有水敏感检测仪器</strong></td>
</tr>
</tbody></table>
<h4 id="防静电"><a href="#防静电" class="headerlink" title="防静电"></a>防静电</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采取防静电地板或地面，并采用必要的接地防经典措施</td>
<td>这一项基本上企业也都会装有防静电地板，大家也都知道静电对设备或者精密仪器会有致命伤害的，基本上这一点我见过的机房都是做到的</td>
<td>针对这一项测评公司会写：<strong>机房地板采用防静电地板</strong></td>
</tr>
<tr>
<td>应采取措施防止静电的产生，例如采用静电消除器、佩戴防静电手环等</td>
<td>这一项主要是看如何防止静电的产生了，针对的是人员进入之后产生的静电，这个一般企业都不会注意到这一点，这项要求想要满足可以在机房里面放一个静电消除器，人员进入时先进行消除静电，日常也对机房内部进行静电消除</td>
<td>针对这一项测评公司会写：<strong>机房内采用静电消除器进行消除静电</strong></td>
</tr>
</tbody></table>
<h4 id="温湿度控制"><a href="#温湿度控制" class="headerlink" title="温湿度控制"></a>温湿度控制</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应设置温湿度自动调节设施，使机房温湿度的变化在设备运行允许范围之内</td>
<td>这一项要求机房恒湿恒温，这个要求机房内要么装恒温恒湿装置，要么就是你装个空调然后再装一个温湿度感应器，随时监控温湿度</td>
<td>针对这一项测评公司会写：<strong>机房内装有空调，并且装有温湿度感应装置</strong></td>
</tr>
</tbody></table>
<h4 id="电力供应"><a href="#电力供应" class="headerlink" title="电力供应"></a>电力供应</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应在机房供电线路上配置稳压器和过电压防护设备</td>
<td>其实说的就是你要给机房一个恒压的环境，不能电压忽高忽低，这个一般企业应对的话就时装一个过压防护设备和小型变压器就可以了，这个基本上也都可以满足</td>
<td>针对这一项测评公司会写：<strong>机房内装有稳压器和过压防护装置，可为机房提供恒压环境</strong></td>
</tr>
<tr>
<td>应提供短期的备用电力供应，至少满足设备在断电情况下的正常运行要求</td>
<td>这个就是要求机房不能断电，当范围停电后要求机房也要有备用电源或发电机供应机房供电，一般企业选择UPS电源断电保护装置来做，也有企业有装汽油或柴油发电机的</td>
<td>针对这一项测评公司会写：<strong>机房内装有UPS电源断电保护装置，可保证机房停电后可供电多少小时</strong></td>
</tr>
<tr>
<td>应设置冗余或并行的电力电缆线路为计算机系统供电</td>
<td>这一块就是说的要求有冗余线路提供电力或者线路冗余，这个也就是说当线路出现故障的时候可以有备用线路给机房供电，一般大都数都是引入两区域电力</td>
<td>针对这一项测评公司会写：<strong>机房线路采用双线路，有备用线路提供使用</strong></td>
</tr>
</tbody></table>
<h4 id="电磁防护"><a href="#电磁防护" class="headerlink" title="电磁防护"></a>电磁防护</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>电源线和通信线缆应隔离铺设，避免互相干扰</td>
<td>这一项是为了防止电线和网线之间产生的电磁进行干扰发生火灾或影响信号传输，一般企业也不会把电线和网线放到一起，不知道大家有没有注意过设备上面的电源线一般在后面，网线一般在前面，其实就是怕互相有干扰影响设备正常运转，这个只要把两个线路分开铺设就可以了</td>
<td>针对这一项测评公司会写：<strong>电源线路和通信线路隔离铺设</strong></td>
</tr>
<tr>
<td>应对关键设备实施电磁屏蔽</td>
<td>这一项就是要求你安装防电磁机柜，这个的话一方面是为了放自己电磁对设备的干扰导致设备故障，另一方面是为了防止电磁产生火灾，这个我觉得还是需要重视起来的，我记得电磁机柜和普通机柜差不了几毛钱</td>
<td>针对这一项测评公司会写：<strong>机房内机柜采用电磁机柜来屏蔽设备的电磁干扰</strong></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>等保测评</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>等保三级安全要求简要攻略-安全通信网络和安全区域边界</title>
    <url>/2024/12/24/dbcp04/</url>
    <content><![CDATA[<p>之前有两篇文章写了为什么要做等保测评、等保测评的含义以及等保测评这份工作的一些职责和一些常见的FAQ，没有看过的朋友可以先去看下我的另外两篇文章：<a href="https://blog.csdn.net/KH_FC/article/details/115628039">一起聊聊等保测评</a> 和 <a href="https://blog.csdn.net/KH_FC/article/details/127748882">一起聊聊等保测评工作内容以及FAQ</a> 。</p>
<span id="more"></span>
<p>今天我们来攻略一下等保2.0国家标准中《<strong>信息安全技术网络安全等级保护基本要求</strong>》所对三级系统所提出的要求项以及针对这些要求项如何去应对或者说是如何去做防护。废话不多说直接上正题</p>
<p>在等保三级中分为十个大项分别是：安全物理环境、安全通信网络、安全区域边界、安全计算环境、安全管理中心、安全管理制度、安全管理机构、安全管理人员、安全建设和管理、安全运维管理，这十大项里面有N个小项来做限制，因为小项比较多，这篇文章主要是针对安全通信网络和安全区域边界来说的，后面也会慢慢把所有的检查项都写给大家攻略的<br><strong>下面所写的攻略以及测评结果仅供参考，要以实际情况为准。</strong></p>
<h3 id="安全通信网络"><a href="#安全通信网络" class="headerlink" title="安全通信网络"></a>安全通信网络</h3><p>安全通信网络这一块主要是针对网络传输、网络设备、通信线路等等一些对象来做的管理或者防护的一些要求，在这一块基本上都是可以满足的，具体来看一下每一项都是怎么要求得吧</p>
<h4 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应保证网络设备的业务处理能力满足业务高峰期需要</td>
<td>这一项主要是说一些业务系统对可用性要求比较高的，网络设备的业务处理能力要可以支撑业务高峰时的所需要的业务支撑能力，不能因为网络设备的原因导致宕机或者服务中断的情况，这一块基本上都可以满足</td>
<td>这一项测评公司会写：<strong>核心网络设备采用什么型号的，可以满足业务高峰的需求，并且置顶了随着业务增长不断提高业务的处理能力</strong></td>
</tr>
<tr>
<td>应保证网络各个部分的带宽满足业务高峰期需要</td>
<td>这一项主要是说的我们网络带宽要满足业务高峰时所需的带宽，这个目前机房内基本上都采用百兆的网线甚至有直接做千兆网线接入的，所以说这个基本上也就不存在不满足的这种情况</td>
<td>这一项测评公司会写：<strong>网络中采用百兆或者千兆的网线接入，可以从容应对业务高峰</strong></td>
</tr>
<tr>
<td>应划分不同的网络区域，并按照方便管理和控制的原则为各网络区域分配地址</td>
<td>这一项将主要是针对我们网络子网的划分做出了要求，根据不同重要成都的业务系统划分不同的子网，只要是所有网络都在一个子网里面就算不合格的，这一项一般也没有不合格的，基本上都会有划分子网</td>
<td>这一项测评公司会写：<strong>针对不同重要程度的业务系统划分了不同的子网来进行管理</strong></td>
</tr>
<tr>
<td>应避免将重要网络区域部署在边界处，重要网络区域与其他网络区域之间应采取可靠的技术隔离手段</td>
<td>这一项主要是针对划分的不同区域之间有没有做网络访问控制，比如说各个区域之间网络无限制可随意访问，这样就不行的，避免发生横向攻击</td>
<td>这一项测评公司会写：<strong>在各区域边界部署有访问控制设备，并且设置了不同区域之间对的访问限制</strong></td>
</tr>
<tr>
<td>应提供通信线路、关键网络设备和关键计算设备的硬件冗余，保证系统的可用性</td>
<td>这一项要求的是网络链路不能是单链路，要做有冗余，当出现故障或者安全事故时可以保障网络的可用性，一般常做的就是核心设备的冗余，比如核心交换、路由等冗余</td>
<td>这一项测评公司会写：<strong>核心设备或关键网络采用冗余设计，采用双机热备和负载均衡等方式</strong></td>
</tr>
</tbody></table>
<h4 id="通信传输"><a href="#通信传输" class="headerlink" title="通信传输"></a>通信传输</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采用校验技术或密码技术保证通信过程中数据的完整性</td>
<td>这一项主要说的是对数据传输的完整性做的要求，一般这一项的话就算对数据的完整性进行做校验基本上就可以了，比如说采用SSL的方式进行传输</td>
<td>这一项测评公司会写：<strong>采用检验技术对数据传输的完整性进行校验</strong></td>
</tr>
<tr>
<td>应采用密码技术保证通信过程中数据的保密性</td>
<td>这一项和上一项类似都是对数据创数过程中进行做的防护，这个是对数据传输过程中的保密性进行做了要求，这个一般采用的SSL加密方式进行传输基本上就可以满足，比如不用http协议，采用https协议传输等等</td>
<td>这一项测评公司会写：<strong>对数据传输过程中数据进行加密，采用SSL加密的方式进行传输</strong></td>
</tr>
</tbody></table>
<h4 id="可信验证"><a href="#可信验证" class="headerlink" title="可信验证"></a>可信验证</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>可基于可信根对通信设备的系统引导程序、系统程序、重要配置参数和通信应用程序等进行可信验证，并在应用程序的关键执行环节进行动态可信验证，在检测到其可信性受到破坏后进行报警，并将验证结果形成审计记录送至安全管理中心。</td>
<td>这一项是针对可信性做的要求，这个解释起来比较繁琐并且不太容易让人理解，说简单点就是你的通信设备要具有可信性的芯片或者硬件，这个一般测评公司都看可信性报告，来评判是否符合</td>
<td>测评公司一般会写：<strong>通信设备具有可信性报告，并且可以对可信性进行验证</strong></td>
</tr>
</tbody></table>
<h3 id="安全区域边界"><a href="#安全区域边界" class="headerlink" title="安全区域边界"></a>安全区域边界</h3><p>安全区域边界主要是针对网络边界做的一项防护要求，比如说在区域边界有没有安装访问控制设备、防火墙设备等等</p>
<h4 id="边界防护"><a href="#边界防护" class="headerlink" title="边界防护"></a>边界防护</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应保证跨越边界的访问和数据流通过边界设备提供的受控接口进行通信</td>
<td>这一项主要是会检查是否有技术手段对不受控的接口进行限制或者控制，当然在这一块也会检查我们的拓扑图与实际的链路情况是否相符</td>
<td>这一项一般测评公司会写：<strong>采用技术手段对不受控的接口进行限制，所提供的拓扑图与实际链路相符</strong></td>
</tr>
<tr>
<td>应能够对非授权设备私自联到内部网络的行为进行检查或限制</td>
<td>这一项是针对非授权的设备接入的区域网络当中做的限制，这一项测评公司会检查设备的一些接口信息看看是不是有与拓扑不一致的地方，如果有则被认为非授权的设备接入</td>
<td>这一项一般测评公司会写：<strong>非授权设备无法接入到局域网络中，并做了相应的限制和控制</strong></td>
</tr>
<tr>
<td>应能够对内部用户非授权联到外部网络的行为进行检查或限制</td>
<td>这一项是针对内部用户未通过授权非法接入到外部网络做的限制，比如说有员工开启手机热点，网络设备通过连接手机热点进行访问互联网等操作，要对这一类行为进行限制</td>
<td>这一项一般测评公司会写：<strong>封堵了未正在使用的USB接口、网口等等，可以有效防止对内部用户非授权连接外部网络</strong></td>
</tr>
<tr>
<td>应限制无线网络的使用，保证无线网络通过受控的边界设备接入内部网络</td>
<td>这一项基本上大家都可以满足的，这个是说的机房内的设备不能随意连接无线网络，如果连接了无线网络就要对无线网络进行做访问限制</td>
<td>这一项一般测评公司会写：<strong>机房内未安装无线网络，所有设备通过有线网络进行通信</strong></td>
</tr>
</tbody></table>
<h4 id="防问控制"><a href="#防问控制" class="headerlink" title="防问控制"></a>防问控制</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应在网络边界或区域之间根据访问控制策略设置访问控制规则，默认情况下除允许通信外受控接口拒绝所有通信</td>
<td>这一项说的是你要在网络边界处设置访问控制设备，并且设备内要有相应的访问控制策略，对不受控的访问进行限制访问，比如路由器上有没有做ACL访问控制，防火墙上有没有开启路由策略和ACL等</td>
<td>这一项一般测评公司会写：<strong>在网络边界安装有防火墙或路由器，并且开启了访问控制策略</strong></td>
</tr>
<tr>
<td>应删除多余或无效的访间控制规则，优化访问控制列表，并保证访问控制规则数量最小化</td>
<td>这一项是说的不要做一些没有意义的访问控制策略，别入说我允许了这个网段的访问，我又单独写了一条允许这个网段中某个地址的访问限制，这个一般建议设置针对地址的限制</td>
<td>这一项一般测评公司会写：<strong>边界设备中没有无效的或多余的访问控制规则</strong></td>
</tr>
<tr>
<td>应对源地址、目的地址、源端口、目的端口和协议等进行检查，以允许&#x2F;拒绝数据包进出</td>
<td>这一项是要求做访问限制的时候要做到细粒度的访问控制，比如说设置高级ACL或者自定义ACL这种的，这个一般也都可以满足现在基本上网络设备都可以满足这种细粒度访问控制</td>
<td>这一项一般测评公司会写：<strong>边界设备中对访问控制做了细粒度的限制，选择允许或拒绝数据包的进出流量</strong></td>
</tr>
<tr>
<td>应能根据会话状态信息为进出数据流提供明确的允许&#x2F;拒绝访问能力</td>
<td>这一项是针对有会话状态的访问做了限制要求，边界设备要可以根据会话状态进行限制，这个一般测评公司会检查边界设备上有没有做源地址、目的地址、源端口、目的端口等限制</td>
<td>这一项一般测评公司会写：<strong>边界设备上对会话状态进行细粒度限制</strong></td>
</tr>
<tr>
<td>应对进出网络的数据流实现基于应用协议和应用内容的访问控制</td>
<td>这一项基本上就检查一个网络边界是不是部署了访问控制设备，另外就是检查边界访问控制设备上有没有针对协议或者内容做的一些访问控制，策略是否生效了</td>
<td>这一项一般测评公司会写：<strong>在区域边界安装有防火墙，防火墙内配置有针对协议的访问限制</strong></td>
</tr>
</tbody></table>
<h4 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应在关键网络节点处检测、防止或限制从外部发起的网络攻击行为</td>
<td>这一项主要是针对网络攻击做的一个防护，主要检查是否具备检查或者阻止外部发起的网络攻击行为的这样的能力，这个安全设备当中是否配置了针对全局的网络安全策略</td>
<td>这一项一般测评公司会写：<strong>局域网内部署有防火墙或者IPS、IDS等设备，可以有效阻止和检测外部发起的网络攻击行为</strong></td>
</tr>
<tr>
<td>应在关键网络节点处检测、防止或限制从内部发起的网络攻击行为</td>
<td>上面一条和这一条不太一样哈，一个是从外部发起的网络攻击行为，一个是从内部发起的网络攻击行为，这个一般也是检查网络安全设备是否具备这种能力，一般有防火墙或者IPS、IDS等设备并且做了安全策略就可以满足的</td>
<td>这一项一般测评公司会写：<strong>局域网内部署有防火墙或者IPS、IDS等设备，可以有效阻止和检测内部发起的网络攻击行为</strong></td>
</tr>
<tr>
<td>应采取技术措施对网络行为进行分析，实现对网络攻击特别是新型网络攻击行为的分析</td>
<td>这一项主要检查是否部署回溯系统或抗APT攻击系统，实现对新型网络攻击行为进行检测和分析，这个其实也很简单的一般防火墙都有这种功能，也就是只要有防火墙基本满足的</td>
<td>这一项一般测评公司会写：<strong>部署有防火墙设备，可以对网络行为进行分析</strong></td>
</tr>
<tr>
<td>当检测到攻击行为时，记录攻击源 IP、攻击类型、攻击目标、攻击时间，在发生严重入侵事件时应提供报警</td>
<td>这个一般就是检查你有没有安装这种入侵行为检测的这样设备，设备是否开启了安全策略，并且是否可以有效的记录攻击信息，也就是说发生攻击行为了你要能预警和记录详细的攻击情况</td>
<td>这一项一般测评公司会写：<strong>部署有IPS&#x2F;IDS设备，可以试试检测攻击行为，并且对攻击行为进行详细记录</strong></td>
</tr>
</tbody></table>
<h4 id="恶意代码和垃圾邮件防范"><a href="#恶意代码和垃圾邮件防范" class="headerlink" title="恶意代码和垃圾邮件防范"></a>恶意代码和垃圾邮件防范</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应在关键网络节点处对恶意代码进行检测和清除，并维护恶意代码防护机制的升级和更新</td>
<td>这一项一般就是看看有没有防恶意代码的产品，部署了产品是不是对恶意代码开启了检测和攻击记录，测评公司可能会验证设备的可用性</td>
<td>这一项一般测评公司会写：<strong>部署了恶意代码防范产品，可以对恶意代码进行检测和清楚，并且可以实时记录攻击行为</strong></td>
</tr>
<tr>
<td>应在关键网络节点处对垃圾邮件进行检测和防护，并维护垃圾邮件防护机制的升级和更新</td>
<td>这一项类似于上面一条，就是看看你又没不俗防垃圾邮件的这种防护机制或者设备，能不能对垃圾邮件进行检测和防护</td>
<td>这一项一般测评公司会写：<strong>部署了防垃圾邮件的相关设备，可以有效对垃圾邮件进行实时监测和防护，开启了垃圾邮件防护机制自动省级和更新</strong></td>
</tr>
</tbody></table>
<h4 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应在网络边界、重要网络节点进行安全审计，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计</td>
<td>这个就是检查看看是不是具备类似于堡垒机的这样一个产品，对所有的网络设备或者服务器能不能进行审计，一方面是要对所有的用户进行行为审计，另一方面就是要对所有用户行为进行记录</td>
<td>这一项一般测评公司会写：<strong>部署了安全审计系统，可以对网络边界、重要网络节点以及所有用户进行审计，对用户行为进行记录</strong></td>
</tr>
<tr>
<td>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</td>
<td>这一项是规定了审计记录所包含的内容，审计记录必须包含时间、用户、事件类型、是否成功这些信息，也就是说一定要有这个用户什么时间点对哪个设备或者对象做了什么样的事情，这个事情是否做成功了，这些都要进行记录</td>
<td>这一项一般测评公司会写：<strong>部署有安全审计系统，审计记录可以对日期和事件、用户、事件类型、事件是否成功等内容</strong></td>
</tr>
<tr>
<td>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</td>
<td>这一项是针对审计记录做的防护，要对审计记录进行定期备份，一般审计记录要求要保留半年才能删除，必须要设置相应的策略才可以</td>
<td>这一项一般测评公司会写：<strong>部署有安全审计系统，审计系统对审计日志保留时间做了策略，保留6个月或更长时间，并且对审计记录进行订是备份</strong></td>
</tr>
<tr>
<td>应能对远程访问的用户行为、访问互联网的用户行为等单独进行行为审计和数据分析</td>
<td>这一项主要是针对远程防护或者互联网用户的行为进行做了限制，核查是否对远程访问用户及互联风访问用户行为单独进行审计分析，并核查审计分析的记录是否包含了用于管理远程访同行为、访问互联网用户行为必要的信息</td>
<td>这一项一般测评公司会写：<strong>可以对远程访问的用户行为、访问互联网的用户行为等单独进行行为审计和数据分析</strong></td>
</tr>
</tbody></table>
<h4 id="可信验证-1"><a href="#可信验证-1" class="headerlink" title="可信验证"></a>可信验证</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>可基于可信根对边界设备的系统引导程序、系统程序、重要配置参数和边界防护应用程序等进行可信验证，并在应用程序的关键执行环节进行动态可信验证，在检测到其可信性受到破坏后进行报警，并将验证结果形成审计记录送至安全管理中心</td>
<td>这一项和前面写的一样都是对可信性做的防范</td>
<td>测评公司一般会写：<strong>通信设备具有可信性报告，并且可以对可信性进行验证</strong></td>
</tr>
</tbody></table>
<p>以上就是关于安全通信网络和安全区域边界的攻略，大家有没有发现越往后检查项越是类似的，基本上都是从架构-访问控制-入侵检测-审计-可信验证，这几方面来说的，往后除了机房管理条例之外，剩下的都大差不差的了</p>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>等保测评</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>等保三级安全要求简要攻略-安全计算环境</title>
    <url>/2024/12/24/dbcp05/</url>
    <content><![CDATA[<p>今天我们来攻略一下等保2.0国家标准中 <strong>《信息安全技术网络安全等级保护基本要求》</strong> 所对三级系统所提出的要求项以及针对这些要求项如何去应对或者说是如何去做防护。废话不多说直接上正题</p>
<span id="more"></span>
<p>在等保三级中分为十个大项分别是：安全物理环境、安全通信网络、安全区域边界、安全计算环境、安全管理中心、安全管理制度、安全管理机构、安全管理人员、安全建设和管理、安全运维管理，这十大项里面有N个小项来做限制，因为小项比较多，这篇文章主要是针对<strong>安全计算环境</strong>来说的，后面也会慢慢把所有的检查项都写给大家攻略的<br><strong>下面所写的攻略以及测评结果仅供参考，要以实际情况为准。</strong></p>
<h3 id="安全计算环境"><a href="#安全计算环境" class="headerlink" title="安全计算环境"></a>安全计算环境</h3><p>安全计算环境这一块主要针对主机设备、存储设备、应用系统、数据库等一些对象来做管理或者防护的一些要求，在这一块相对来说所有的业务系统都涉及的，也是丢失分数比较多的一部分，具体来看下每一项都是怎么做的要求吧</p>
<h4 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换。</td>
<td>这一项主要说的是我们业务系统的登录方式是怎样的，登录的用户名或者ID是否唯一，登录时所使用的密码是否有一定复杂度这些。这一块大部分的业务系统也都是满足的。</td>
<td>这一项测评公司会写：<strong>应用系统采用B&#x2F;S架构，采用账号密码的登录方式进行身份鉴别，用户可以从组织架构列表中查询，身份标识具有唯一性，密码长度是8，满足复杂度要求。</strong></td>
</tr>
<tr>
<td>应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施。</td>
<td>这一项主要说的是身份鉴别出现失败时应用系统时做的一些操作，比如说登录失败后是否有登录失败记录、登录失败几次后自动锁定等等一些操作，这一项主机操作系统、应用系统、网络设备等等都有类似的一些功能，这一项基本设置一下就可以</td>
<td>这一项测评公司会写：<strong>应用系统已启用登录失败处理功能，已启用密码输入错误自动锁定功能，已启用长时间未登录自动锁定。</strong></td>
</tr>
<tr>
<td>当进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听。</td>
<td>这一项主要说的是业务系统从互联网中所采用的鉴权传输方式是怎样的，是采用GET传输还是POST传输，传输过程中是否进行了加密，这里一般测评公司都会看网站或者系统是否使用了SSL证书，有证书基本上就能过</td>
<td>这一项测评公司会写：<strong>该网站采用HTTPS协议进行远程管理，用户鉴别以加密的方式进行传输。</strong></td>
</tr>
<tr>
<td>应采用口令、密码技术、生物技术等两种或两种以上组合的鉴别技术对用户进行身份鉴别，且其中一种鉴别技术至少应使用密码技术来实现</td>
<td>这一项主要是说的登录业务系统需要有两种及两种以上的身份鉴别方式，常见的鉴别方式有：账号密码登录、人脸识别、指纹识别、CA证书、短信验证码等，只要有两种组合方式就可以，现在可能更多的是短信验证码，这一项大部分业务系统都不满足</td>
<td>这一项测评公司会写：<strong>该网站&#x2F;业务系统采用用户名+口令+短信验证码的方式进行登录管理。</strong></td>
</tr>
</tbody></table>
<h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应对登录的用户分配账户和权限</td>
<td>这一项主要说的是对要登录业务系统的用户单独分配一个账号和与整个用户所相对应的权限，不能出现多个用户使用一个账号的问题，这一项基本都可以满足的。</td>
<td>这一项测评公司会写：<strong>通过查询业务系统的通讯录以及组织架构，为每个用户分配了不同的账号和权限。</strong></td>
</tr>
<tr>
<td>应重命名或删除默认账户，修改默认账户的默认口令</td>
<td>这一项主要说的是业务系统或者操作系统会有一些默认的用户账号，比如管理员账号：root，sys等一些默认高级权限账号，按照要求这些账号应该被禁用或者删除的，这一项就是检查业务系统当中是否存在可以登录的默认账号</td>
<td>这一项测评公司会写：<strong>业务系统中不存在默认出厂的账号，所有用户不存在与默认口令相同的账号。</strong></td>
</tr>
<tr>
<td>应及时删除或停用多余的、过期的账户，避免共享账户的存在</td>
<td>这一项主要说的是当有员工离职时是否有及时删除相对应的账号，是否存在测试账号未删除的情况，是否有多个用户共享使用一个账号的情况等，这一项基本都可以满足</td>
<td>这一项测评公司会写：<strong>已通过组织架构和业务系统账号对应，未发现有多余未删除用户账号以及不存在有共享账户。</strong></td>
</tr>
<tr>
<td>应授予管理用户所需的最小权限，实现管理用户的权限分离</td>
<td>这一项主要管控的是业务系统中用户的权限是否设置的最小权限，简单来说就是每个人只能打开自己的页面做自己的事情不能干预别人的，这一项基本上也都可以满足</td>
<td>这一项测评公司会写：<strong>业务系统每个账户都是选用最小权限账户。</strong></td>
</tr>
<tr>
<td>访问控制的粒度应达到主体为用户级或进程级，客体为文件、数据库表级</td>
<td>这一项主要是针对业务系统中账号的权限做到最小粒度的限制，比如只能操作某个数据库的某个表的权限，这一项基本上也没有查的那么严格大部分都可以满足</td>
<td>这一项测评公司会写：<strong>用户账号的访问控制已达到最小粒度的限制，业务系统普通账号仅浏览部分页面的内容。</strong></td>
</tr>
<tr>
<td>应对重要主体和客体设置安全标记，并控制主体对有安全标记信息资源的访问</td>
<td>这一项主要是针对主体和客体是否设置安全标记，这个我也整不太明白，我看大部分业务系统都不满足这一条，可能这一条弄得比较科幻</td>
<td>这一项测评公司会写：<strong>业务系统未对重要主体和客体设置安全标记，未实现通过安全标记控制主体对客体的访问</strong></td>
</tr>
</tbody></table>
<h4 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计</td>
<td>这一项主要说的是能不能对用户所登录的业务系统以及设备进行审计，其实就类似于堡垒机的这样一个审计的手段，一方面是要对用户的操作行为进行记录，另一方面就是对用户所有操作的行为进行审计，避免违规操作</td>
<td>这一项测评公司会写：<strong>部署了安全审计系统，并对所有用户的操作行为进行审计以及对安全事件进行记录</strong></td>
</tr>
<tr>
<td>审计记录应包括事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</td>
<td>这一项主要是对审计记录进行了一些规范和要求，审计的相关记录必须要有日期、事件、操作用户、事件类型、是否成功等等</td>
<td>这一项测评公司会写：<strong>部署了安全审计系统，日志内容包含事件发生时间、事件的操作、操作用户、是否成功等内容</strong></td>
</tr>
<tr>
<td>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</td>
<td>这一项主要是对审计记录的保存时间、备份等做的一些保护，一般要求审计记录要求保留半年左右才能删除，而且要定期对审计记录进行备份</td>
<td>这一项测评公司会写：<strong>部署了安全审计系统，日志设置保留时间为180天，并每天对日志进行增量备份</strong></td>
</tr>
<tr>
<td>应对审计进程进行保护，防止未经授权的中断</td>
<td>这一项主要是针对普通用户是否可以关掉审计或者查看审计记录等，这一项最主要的就是怕普通用户自行把审计关掉无法对该用户进行审计</td>
<td>这一项测评公司会写：<strong>部署了安全审计系统，并且设置了审计管理员，非管理员用户无法查看审计内容以及关闭审计进程</strong></td>
</tr>
</tbody></table>
<h4 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应遵循最小安装的原则，仅安装需要的组件和应用程序</td>
<td>这一项主要是针用户的业务主机上面是否有部署非用于此业务系统的应用程序或者组件之类的，基本上都可以满足，有些是有一台主机上面部署了多个应用的那种，就需要注意了</td>
<td>这一项测评公司会写：<strong>业务系统所涉及的主机上面仅安装了该业务系统相关的应用程序</strong></td>
</tr>
<tr>
<td>应关闭不需要的系统服务、默认共享和高危端口</td>
<td>这一项就很简单了就是把不使用的端口或者高危端口进行封禁就可以了，常见的高危端口有135、137、138等，这些端口禁掉基本问题不大</td>
<td>这一项测评公司会写：<strong>业务系统前端配置有防火墙，所涉及主机关闭了所不需要的系统服务，并对135、137、138等高危端口进行了封禁</strong></td>
</tr>
<tr>
<td>应通过设定终端接入方式或网络地址范围对通过网络进行管理的管理终端进行限制</td>
<td>这一项主要是看对运维管理终端是否有做网络限制，一般有防火墙配置ACL限制或者路由限制就可以了</td>
<td>这一项测评公司会写：<strong>业务主机部署在防火墙的DMZ区域，并对访问服务器做了详细的路由限制</strong></td>
</tr>
<tr>
<td>应提供数据有效性检验功能，保证通过人机接口输入或通过通信接口输入的内容符合系统设 定要求</td>
<td>这一项主要是针对业务系统在上传、下载、传输数据进行校验，避免发生XSS、SQL注入等一些风险，这个一般有防火墙都会开启WEB应用防护功能</td>
<td>这一项测评公司会写：<strong>客户测部署有防火墙，在防火墙测对上传、下载、传输等数据进行了过滤限制以及对数据进行校验</strong></td>
</tr>
<tr>
<td>应能发现可能存在的已知漏洞，并在经过充分测试评估后，及时修补漏洞</td>
<td>这一项主要是针对漏洞做的一项条目，是要看看你有没有定期对业务系统所涉及的一些设备或系统及时的进行漏洞修补，这个一般测评公司会拿漏洞扫描扫一遍</td>
<td>这一项测评公司会写：<strong>机房内部署有漏洞扫描设备，定期对业务系统进行漏洞扫描，发现系漏洞进行评估修复</strong></td>
</tr>
<tr>
<td>应能够检测到对重要节点进行入侵的行为，并在发生严重入侵事件时提供报警</td>
<td>这一项主要是看有没有部署入侵检测设备，能不能在出现有入侵时进行及时的报警，并拦截记录入侵行为</td>
<td>这一项测评公司会写：<strong>机房内部署有防火墙，并开启了入侵防御功能，可有效对入侵行为进行报警和拦截</strong></td>
</tr>
</tbody></table>
<h4 id="恶意代码防范"><a href="#恶意代码防范" class="headerlink" title="恶意代码防范"></a>恶意代码防范</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采用免受恶意代码攻击的技术措施或主动免疫可信验证机制及时识别入侵和病毒行为，并将其 有效阻断。</td>
<td>这一项主要是看看有没有防范恶意代码攻击的手段或者设备，来有效阻断恶意代码攻击，一般部署web应用防护设备基本上都有这个防护功能</td>
<td>这一项测评公司会写：<strong>机房内部署有web应用防护设备，可有效链接XSS、SQL注入等一些恶意代码攻击的风险</strong></td>
</tr>
</tbody></table>
<h4 id="可信验证"><a href="#可信验证" class="headerlink" title="可信验证"></a>可信验证</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>可基于可信根对计算设备的系统引导程序、系统程序、重要配置参数和应用程序等进行可信验证，并在应用程序的关键执行环节进行动态可信验证，在检测到其可信性受到破坏后进行报警，并将验证结果形成审计记录送至安全管理中心。</td>
<td>这一项是针对可信性做的要求，这个解释起来比较繁琐并且不太容易让人理解，说简单点就是你的通信设备要具有可信性的芯片或者硬件，这个一般测评公司都看可信性报告，来评判是否符合</td>
<td>这一项测评公司会写：<strong>通信设备具有可信性报告，并且可以对可信性进行验证</strong></td>
</tr>
</tbody></table>
<h4 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采用校验技术或密码技术保证重要数据在传输过程中的完整性，包括但不限千鉴别数据、重 要业务数据、重要审计数据、重要配置数据、重要视频数据和重要个人信息等</td>
<td>这一项是针对是否有相关手段做到在数据传输的过程中校验数据的完整性和安全性，一般网站配置有SSL证书或者采用VPN的形式就可以满足这个要求，远程管理采用RDP或者SSH协议进行远程管理</td>
<td>这一项测评公司会写：<strong>业务系统通过HTTPS协议、服务器通过RDP&#x2F;SSH进行远程管理可以保证重要数据在传输过程中的完整性</strong></td>
</tr>
</tbody></table>
<h4 id="数据保密性"><a href="#数据保密性" class="headerlink" title="数据保密性"></a>数据保密性</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应采用密码技术保证重要数据在传输过程中的保密性，包括但不限于鉴别数据、重要业务数据 和重要个人信息等；</td>
<td>这一项和数据完整性类似只要采用了HTTPS、SSL或者VPN就可以满足此条目</td>
<td>这一项测评公司会写：<strong>业务系统通过HTTPS协议进行访问，保障重要数据在传输过程中的保密性</strong></td>
</tr>
</tbody></table>
<h4 id="数据备份恢复"><a href="#数据备份恢复" class="headerlink" title="数据备份恢复"></a>数据备份恢复</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应提供重要数据的本地数据备份与恢复功能</td>
<td>这一项主要是说的要对重要数据在本地有备份，并且在数据出现丢失或者系统故障时可以对备份进行恢复，这一条基本上都可以满足的，最次了可以拿块硬盘做个定期复制数据到硬盘也算备份</td>
<td>这一项测评公司会写：<strong>业务系统采用备份一体机设备对现有业务系统进行备份，并且可在业务系统故障或数据丢失时对数据进行恢复</strong></td>
</tr>
<tr>
<td>应提供异地实时备份功能，利用通信网络将重要数据实时备份至备份场地</td>
<td>这一项主要是说的要有异地副本的备份，更类似与两地三中心的这种概念，这个都是没有强制要求必须要在异地有个资源中心，但是需要有一个实时备份到异地的机制，最常用的就是云备份的形式</td>
<td>这一项测评公司会写：<strong>业务系统采用云备份的方式对当前数据中心的重要数据进行实时备份</strong></td>
</tr>
<tr>
<td>应提供重要数据处理系统的热冗余，保证系统的高可用性</td>
<td>这一项就是说的当业务系统宕机时有另外的一套相同的业务系统进行提供访问，类似于数据库的双活，这也是为了保障重要业务的高可用性</td>
<td>这一项测评公司会写：<strong>业务系统采用异地容灾的形式提供高可用服务</strong></td>
</tr>
</tbody></table>
<h4 id="剩余信息保护"><a href="#剩余信息保护" class="headerlink" title="剩余信息保护"></a>剩余信息保护</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应保证鉴别信息所在的存储空间被释放或重新分配前得到完全清除</td>
<td>这一项主要是说是当用户退出登录时应及时清除虚拟内存中数据，很多测评公司都会看有没有在操作系统中配置关机自动清除虚拟内存中的数据，一般根据配置配一下就可以了</td>
<td>这一项测评公司会写：<strong>未对及时清除会话信息</strong></td>
</tr>
</tbody></table>
<h4 id="个人信息保护"><a href="#个人信息保护" class="headerlink" title="个人信息保护"></a>个人信息保护</h4><table>
<thead>
<tr>
<th>要求项</th>
<th>攻略</th>
<th>测评结果</th>
</tr>
</thead>
<tbody><tr>
<td>应仅采集和保存业务必需的用户个人信息</td>
<td>这一项主要说的是只对用户的必要信息进行保存，非比较信息不进行保存，比如身份证号、手机号等等一些隐私信息，基本上就可以满足的</td>
<td>这一项测评公司会写：<strong>仅采集和保存业务必需的用户个人信息</strong></td>
</tr>
<tr>
<td>应禁止未授权访问和非法使用用户个人信息</td>
<td>这一项主要是说的要对用户的个人信息进行加密保存，不能通过查询数据库的方式看到用户的隐私信息</td>
<td>这一项测评公司会写：<strong>用户个人信息未进行加密存储，数据库管理员可通过数据库直接查看用户个人信息</strong></td>
</tr>
</tbody></table>
<p>以上就是关于等保测评安全计算环境的测评攻略，大家有没有发现越往后检查项越是类似的，基本上都是从架构-访问控制-入侵检测-审计-可信验证，这几方面来说的，往后除了机房管理条例之外，剩下的都大差不差的了</p>
]]></content>
      <categories>
        <category>安全</category>
      </categories>
      <tags>
        <tag>技术笔记</tag>
        <tag>等保测评</tag>
        <tag>安全</tag>
      </tags>
  </entry>
</search>
